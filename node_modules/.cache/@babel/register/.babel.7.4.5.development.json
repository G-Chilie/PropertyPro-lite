{
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _expressValidator = _interopRequireDefault(require(\"express-validator\"));\n\n// const debug = debug('http');\nvar app = (0, _express[\"default\"])();\nvar PORT = process.env.PORT || 3000;\napp.use((0, _expressValidator[\"default\"])());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].json());\napp.use(_routes[\"default\"]);\napp.get('/', function (req, res) {\n  res.status(200).send('Welcome to PropertyPro-lite...');\n});\napp.listen(PORT, function () {\n  console.log(\"Server is running on port \".concat(PORT));\n});\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJQT1JUIiwicHJvY2VzcyIsImVudiIsInVzZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwicm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwic3RhdHVzIiwic2VuZCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUdBO0FBQ0EsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWixJQUFvQixJQUFqQztBQUVBRCxHQUFHLENBQUNJLEdBQUosQ0FBUSxtQ0FBUjtBQUNBSixHQUFHLENBQUNJLEdBQUosQ0FBUUMsdUJBQVdDLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUjtBQUNBUCxHQUFHLENBQUNJLEdBQUosQ0FBUUMsdUJBQVdHLElBQVgsRUFBUjtBQUNBUixHQUFHLENBQUNJLEdBQUosQ0FBUUssa0JBQVI7QUFDQVQsR0FBRyxDQUFDVSxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3ZCQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUNJLGdDQURKO0FBR0gsQ0FKRDtBQUtBZCxHQUFHLENBQUNlLE1BQUosQ0FBV2QsSUFBWCxFQUFpQixZQUFNO0FBQ25CZSxFQUFBQSxPQUFPLENBQUNDLEdBQVIscUNBQXlDaEIsSUFBekM7QUFDSCxDQUZEO2VBSWVELEciLCJzb3VyY2VSb290IjoiL2hvbWUvZ2NoaWxpZS9EZXNrdG9wL1Byb3BlcnR5UHJvLWxpdGUvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVzJztcbmltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5pbXBvcnQgZXhwcmVzc1ZhbGlkYXRvciBmcm9tICdleHByZXNzLXZhbGlkYXRvcic7XG5cblxuLy8gY29uc3QgZGVidWcgPSBkZWJ1ZygnaHR0cCcpO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3QgUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMDtcblxuYXBwLnVzZShleHByZXNzVmFsaWRhdG9yKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSlcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShyb3V0ZXIpO1xuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKFxuICAgICAgICAnV2VsY29tZSB0byBQcm9wZXJ0eVByby1saXRlLi4uJyxcbiAgICApO1xufSk7XG5hcHAubGlzdGVuKFBPUlQsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhgU2VydmVyIGlzIHJ1bm5pbmcgb24gcG9ydCAke1BPUlR9YCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgYXBwOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "PORT",
        "process",
        "env",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "router",
        "get",
        "req",
        "res",
        "status",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA;AACA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAD,GAAG,CAACI,GAAJ,CAAQ,mCAAR;AACAJ,GAAG,CAACI,GAAJ,CAAQC,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQC,uBAAWG,IAAX,EAAR;AACAR,GAAG,CAACI,GAAJ,CAAQK,kBAAR;AACAT,GAAG,CAACU,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACI,gCADJ;AAGH,CAJD;AAKAd,GAAG,CAACe,MAAJ,CAAWd,IAAX,EAAiB,YAAM;AACnBe,EAAAA,OAAO,CAACC,GAAR,qCAAyChB,IAAzC;AACH,CAFD;eAIeD,G",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport router from './routes';\nimport debug from 'debug';\nimport expressValidator from 'express-validator';\n\n\n// const debug = debug('http');\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\napp.use(expressValidator());\napp.use(bodyParser.urlencoded({ extended: true }))\napp.use(bodyParser.json());\napp.use(router);\napp.get('/', (req, res) => {\n    res.status(200).send(\n        'Welcome to PropertyPro-lite...',\n    );\n});\napp.listen(PORT, () => {\n    console.log(`Server is running on port ${PORT}`);\n});\n\nexport default app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1562105699006
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/routes/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _userController = _interopRequireDefault(require(\"../controllers/userController\"));\n\nvar _authValidator = _interopRequireDefault(require(\"../middlewares/authValidator\"));\n\nvar _propertyController = _interopRequireDefault(require(\"../controllers/propertyController\"));\n\nvar _propertyValidator = _interopRequireDefault(require(\"../middlewares/propertyValidator\"));\n\nvar router = _express[\"default\"].Router();\n\nvar createAccount = _userController[\"default\"].createAccount,\n    loginUser = _userController[\"default\"].loginUser;\nvar validateSignUp = _authValidator[\"default\"].validateSignUp,\n    userExists = _authValidator[\"default\"].userExists,\n    validateLogin = _authValidator[\"default\"].validateLogin,\n    isTokenValid = _authValidator[\"default\"].isTokenValid,\n    isAgent = _authValidator[\"default\"].isAgent;\nvar createPropertyAd = _propertyController[\"default\"].createPropertyAd,\n    updatePropertyAdStatus = _propertyController[\"default\"].updatePropertyAdStatus,\n    updatePropertyAdPrice = _propertyController[\"default\"].updatePropertyAdPrice,\n    getAProperty = _propertyController[\"default\"].getAProperty,\n    getAllPropertys = _propertyController[\"default\"].getAllPropertys,\n    deletePropertyAd = _propertyController[\"default\"].deletePropertyAd,\n    getPropertysByType = _propertyController[\"default\"].getPropertysByType;\nvar validateProperty = _propertyValidator[\"default\"].validateProperty,\n    isPropertyExist = _propertyValidator[\"default\"].isPropertyExist,\n    validateStatus = _propertyValidator[\"default\"].validateStatus,\n    validatePrice = _propertyValidator[\"default\"].validatePrice; // Auth routes\n\nvar authBaseUrl = '/api/v1/auth';\nrouter.post(\"\".concat(authBaseUrl, \"/signup\"), validateSignUp, userExists, createAccount);\nrouter.post(\"\".concat(authBaseUrl, \"/login\"), validateLogin, loginUser); // Property routes\n\nvar propertyBaseUrl = '/api/v1/property';\nrouter.post(\"\".concat(propertyBaseUrl), isTokenValid, isAgent, validateProperty, createPropertyAd);\nrouter.patch(\"\".concat(propertyBaseUrl, \"/:propertyId/status\"), isTokenValid, isAgent, isPropertyExist, validateStatus, updatePropertyAdStatus);\nrouter.patch(\"\".concat(propertyBaseUrl, \"/:propertyId/price\"), isTokenValid, isAgent, isPropertyExist, validatePrice, updatePropertyAdPrice);\nrouter.get(\"\".concat(propertyBaseUrl), isTokenValid, getAllPropertys);\nrouter.get(\"\".concat(propertyBaseUrl, \"/:propertyId\"), isTokenValid, getAProperty);\nrouter.get(\"\".concat(propertyBaseUrl, \"/getByType/:propertyType\"), isTokenValid, getPropertysByType);\nrouter[\"delete\"](\"\".concat(propertyBaseUrl, \"/:propertyId\"), isTokenValid, isAgent, deletePropertyAd);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJjcmVhdGVBY2NvdW50IiwiVXNlckNvbnRyb2xsZXIiLCJsb2dpblVzZXIiLCJ2YWxpZGF0ZVNpZ25VcCIsIkF1dGhWYWxpZGF0b3IiLCJ1c2VyRXhpc3RzIiwidmFsaWRhdGVMb2dpbiIsImlzVG9rZW5WYWxpZCIsImlzQWdlbnQiLCJjcmVhdGVQcm9wZXJ0eUFkIiwiUHJvcGVydHlDb250cm9sbGVyIiwidXBkYXRlUHJvcGVydHlBZFN0YXR1cyIsInVwZGF0ZVByb3BlcnR5QWRQcmljZSIsImdldEFQcm9wZXJ0eSIsImdldEFsbFByb3BlcnR5cyIsImRlbGV0ZVByb3BlcnR5QWQiLCJnZXRQcm9wZXJ0eXNCeVR5cGUiLCJ2YWxpZGF0ZVByb3BlcnR5IiwiUHJvcGVydHlWYWxpZGF0b3IiLCJpc1Byb3BlcnR5RXhpc3QiLCJ2YWxpZGF0ZVN0YXR1cyIsInZhbGlkYXRlUHJpY2UiLCJhdXRoQmFzZVVybCIsInBvc3QiLCJwcm9wZXJ0eUJhc2VVcmwiLCJwYXRjaCIsImdldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmOztJQUVRQyxhLEdBQTZCQywwQixDQUE3QkQsYTtJQUFlRSxTLEdBQWNELDBCLENBQWRDLFM7SUFDZkMsYyxHQUFxRUMseUIsQ0FBckVELGM7SUFBZ0JFLFUsR0FBcURELHlCLENBQXJEQyxVO0lBQVlDLGEsR0FBeUNGLHlCLENBQXpDRSxhO0lBQWVDLFksR0FBMEJILHlCLENBQTFCRyxZO0lBQWNDLE8sR0FBWUoseUIsQ0FBWkksTztJQUN6REMsZ0IsR0FBeUlDLDhCLENBQXpJRCxnQjtJQUFrQkUsc0IsR0FBdUhELDhCLENBQXZIQyxzQjtJQUF3QkMscUIsR0FBK0ZGLDhCLENBQS9GRSxxQjtJQUF1QkMsWSxHQUF3RUgsOEIsQ0FBeEVHLFk7SUFBY0MsZSxHQUEwREosOEIsQ0FBMURJLGU7SUFBaUJDLGdCLEdBQXlDTCw4QixDQUF6Q0ssZ0I7SUFBa0JDLGtCLEdBQXVCTiw4QixDQUF2Qk0sa0I7SUFDbEhDLGdCLEdBQXFFQyw2QixDQUFyRUQsZ0I7SUFBa0JFLGUsR0FBbURELDZCLENBQW5EQyxlO0lBQWlCQyxjLEdBQWtDRiw2QixDQUFsQ0UsYztJQUFnQkMsYSxHQUFrQkgsNkIsQ0FBbEJHLGEsRUFFM0Q7O0FBQ0EsSUFBTUMsV0FBVyxHQUFHLGNBQXBCO0FBQ0F6QixNQUFNLENBQUMwQixJQUFQLFdBQWVELFdBQWYsY0FBcUNuQixjQUFyQyxFQUFxREUsVUFBckQsRUFBaUVMLGFBQWpFO0FBQ0FILE1BQU0sQ0FBQzBCLElBQVAsV0FBZUQsV0FBZixhQUFvQ2hCLGFBQXBDLEVBQW1ESixTQUFuRCxFLENBRUE7O0FBQ0EsSUFBTXNCLGVBQWUsR0FBRyxrQkFBeEI7QUFDQTNCLE1BQU0sQ0FBQzBCLElBQVAsV0FBZUMsZUFBZixHQUFrQ2pCLFlBQWxDLEVBQWdEQyxPQUFoRCxFQUF5RFMsZ0JBQXpELEVBQTJFUixnQkFBM0U7QUFDQVosTUFBTSxDQUFDNEIsS0FBUCxXQUFnQkQsZUFBaEIsMEJBQXNEakIsWUFBdEQsRUFBb0VDLE9BQXBFLEVBQTZFVyxlQUE3RSxFQUE4RkMsY0FBOUYsRUFBOEdULHNCQUE5RztBQUNBZCxNQUFNLENBQUM0QixLQUFQLFdBQWdCRCxlQUFoQix5QkFBcURqQixZQUFyRCxFQUFtRUMsT0FBbkUsRUFBNEVXLGVBQTVFLEVBQTZGRSxhQUE3RixFQUE0R1QscUJBQTVHO0FBQ0FmLE1BQU0sQ0FBQzZCLEdBQVAsV0FBY0YsZUFBZCxHQUFpQ2pCLFlBQWpDLEVBQStDTyxlQUEvQztBQUNBakIsTUFBTSxDQUFDNkIsR0FBUCxXQUFjRixlQUFkLG1CQUE2Q2pCLFlBQTdDLEVBQTJETSxZQUEzRDtBQUNBaEIsTUFBTSxDQUFDNkIsR0FBUCxXQUFjRixlQUFkLCtCQUF5RGpCLFlBQXpELEVBQXVFUyxrQkFBdkU7QUFDQW5CLE1BQU0sVUFBTixXQUFpQjJCLGVBQWpCLG1CQUFnRGpCLFlBQWhELEVBQThEQyxPQUE5RCxFQUF1RU8sZ0JBQXZFO2VBRWVsQixNIiwic291cmNlUm9vdCI6Ii9ob21lL2djaGlsaWUvRGVza3RvcC9Qcm9wZXJ0eVByby1saXRlL2FwcC9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBVc2VyQ29udHJvbGxlciBmcm9tICcuLi9jb250cm9sbGVycy91c2VyQ29udHJvbGxlcic7XG5pbXBvcnQgQXV0aFZhbGlkYXRvciBmcm9tICcuLi9taWRkbGV3YXJlcy9hdXRoVmFsaWRhdG9yJztcbmltcG9ydCBQcm9wZXJ0eUNvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvcHJvcGVydHlDb250cm9sbGVyJztcbmltcG9ydCBQcm9wZXJ0eVZhbGlkYXRvciBmcm9tICcuLi9taWRkbGV3YXJlcy9wcm9wZXJ0eVZhbGlkYXRvcidcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgeyBjcmVhdGVBY2NvdW50LCBsb2dpblVzZXIgfSA9IFVzZXJDb250cm9sbGVyO1xuY29uc3QgeyB2YWxpZGF0ZVNpZ25VcCwgdXNlckV4aXN0cywgdmFsaWRhdGVMb2dpbiwgaXNUb2tlblZhbGlkLCBpc0FnZW50IH0gPSBBdXRoVmFsaWRhdG9yO1xuY29uc3QgeyBjcmVhdGVQcm9wZXJ0eUFkLCB1cGRhdGVQcm9wZXJ0eUFkU3RhdHVzLCB1cGRhdGVQcm9wZXJ0eUFkUHJpY2UsIGdldEFQcm9wZXJ0eSwgZ2V0QWxsUHJvcGVydHlzLCBkZWxldGVQcm9wZXJ0eUFkLCBnZXRQcm9wZXJ0eXNCeVR5cGUgfSA9IFByb3BlcnR5Q29udHJvbGxlcjtcbmNvbnN0IHsgdmFsaWRhdGVQcm9wZXJ0eSwgaXNQcm9wZXJ0eUV4aXN0LCB2YWxpZGF0ZVN0YXR1cywgdmFsaWRhdGVQcmljZSB9ID0gUHJvcGVydHlWYWxpZGF0b3I7XG5cbi8vIEF1dGggcm91dGVzXG5jb25zdCBhdXRoQmFzZVVybCA9ICcvYXBpL3YxL2F1dGgnO1xucm91dGVyLnBvc3QoYCR7YXV0aEJhc2VVcmx9L3NpZ251cGAsIHZhbGlkYXRlU2lnblVwLCB1c2VyRXhpc3RzLCBjcmVhdGVBY2NvdW50KTtcbnJvdXRlci5wb3N0KGAke2F1dGhCYXNlVXJsfS9sb2dpbmAsIHZhbGlkYXRlTG9naW4sIGxvZ2luVXNlcik7XG5cbi8vIFByb3BlcnR5IHJvdXRlc1xuY29uc3QgcHJvcGVydHlCYXNlVXJsID0gJy9hcGkvdjEvcHJvcGVydHknO1xucm91dGVyLnBvc3QoYCR7cHJvcGVydHlCYXNlVXJsfWAsIGlzVG9rZW5WYWxpZCwgaXNBZ2VudCwgdmFsaWRhdGVQcm9wZXJ0eSwgY3JlYXRlUHJvcGVydHlBZCk7XG5yb3V0ZXIucGF0Y2goYCR7cHJvcGVydHlCYXNlVXJsfS86cHJvcGVydHlJZC9zdGF0dXNgLCBpc1Rva2VuVmFsaWQsIGlzQWdlbnQsIGlzUHJvcGVydHlFeGlzdCwgdmFsaWRhdGVTdGF0dXMsIHVwZGF0ZVByb3BlcnR5QWRTdGF0dXMpO1xucm91dGVyLnBhdGNoKGAke3Byb3BlcnR5QmFzZVVybH0vOnByb3BlcnR5SWQvcHJpY2VgLCBpc1Rva2VuVmFsaWQsIGlzQWdlbnQsIGlzUHJvcGVydHlFeGlzdCwgdmFsaWRhdGVQcmljZSwgdXBkYXRlUHJvcGVydHlBZFByaWNlKTtcbnJvdXRlci5nZXQoYCR7cHJvcGVydHlCYXNlVXJsfWAsIGlzVG9rZW5WYWxpZCwgZ2V0QWxsUHJvcGVydHlzKTtcbnJvdXRlci5nZXQoYCR7cHJvcGVydHlCYXNlVXJsfS86cHJvcGVydHlJZGAsIGlzVG9rZW5WYWxpZCwgZ2V0QVByb3BlcnR5KTtcbnJvdXRlci5nZXQoYCR7cHJvcGVydHlCYXNlVXJsfS9nZXRCeVR5cGUvOnByb3BlcnR5VHlwZWAsIGlzVG9rZW5WYWxpZCwgZ2V0UHJvcGVydHlzQnlUeXBlKTtcbnJvdXRlci5kZWxldGUoYCR7cHJvcGVydHlCYXNlVXJsfS86cHJvcGVydHlJZGAsIGlzVG9rZW5WYWxpZCwgaXNBZ2VudCwgZGVsZXRlUHJvcGVydHlBZCk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "createAccount",
        "UserController",
        "loginUser",
        "validateSignUp",
        "AuthValidator",
        "userExists",
        "validateLogin",
        "isTokenValid",
        "isAgent",
        "createPropertyAd",
        "PropertyController",
        "updatePropertyAdStatus",
        "updatePropertyAdPrice",
        "getAProperty",
        "getAllPropertys",
        "deletePropertyAd",
        "getPropertysByType",
        "validateProperty",
        "PropertyValidator",
        "isPropertyExist",
        "validateStatus",
        "validatePrice",
        "authBaseUrl",
        "post",
        "propertyBaseUrl",
        "patch",
        "get"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;IAEQC,a,GAA6BC,0B,CAA7BD,a;IAAeE,S,GAAcD,0B,CAAdC,S;IACfC,c,GAAqEC,yB,CAArED,c;IAAgBE,U,GAAqDD,yB,CAArDC,U;IAAYC,a,GAAyCF,yB,CAAzCE,a;IAAeC,Y,GAA0BH,yB,CAA1BG,Y;IAAcC,O,GAAYJ,yB,CAAZI,O;IACzDC,gB,GAAyIC,8B,CAAzID,gB;IAAkBE,sB,GAAuHD,8B,CAAvHC,sB;IAAwBC,qB,GAA+FF,8B,CAA/FE,qB;IAAuBC,Y,GAAwEH,8B,CAAxEG,Y;IAAcC,e,GAA0DJ,8B,CAA1DI,e;IAAiBC,gB,GAAyCL,8B,CAAzCK,gB;IAAkBC,kB,GAAuBN,8B,CAAvBM,kB;IAClHC,gB,GAAqEC,6B,CAArED,gB;IAAkBE,e,GAAmDD,6B,CAAnDC,e;IAAiBC,c,GAAkCF,6B,CAAlCE,c;IAAgBC,a,GAAkBH,6B,CAAlBG,a,EAE3D;;AACA,IAAMC,WAAW,GAAG,cAApB;AACAzB,MAAM,CAAC0B,IAAP,WAAeD,WAAf,cAAqCnB,cAArC,EAAqDE,UAArD,EAAiEL,aAAjE;AACAH,MAAM,CAAC0B,IAAP,WAAeD,WAAf,aAAoChB,aAApC,EAAmDJ,SAAnD,E,CAEA;;AACA,IAAMsB,eAAe,GAAG,kBAAxB;AACA3B,MAAM,CAAC0B,IAAP,WAAeC,eAAf,GAAkCjB,YAAlC,EAAgDC,OAAhD,EAAyDS,gBAAzD,EAA2ER,gBAA3E;AACAZ,MAAM,CAAC4B,KAAP,WAAgBD,eAAhB,0BAAsDjB,YAAtD,EAAoEC,OAApE,EAA6EW,eAA7E,EAA8FC,cAA9F,EAA8GT,sBAA9G;AACAd,MAAM,CAAC4B,KAAP,WAAgBD,eAAhB,yBAAqDjB,YAArD,EAAmEC,OAAnE,EAA4EW,eAA5E,EAA6FE,aAA7F,EAA4GT,qBAA5G;AACAf,MAAM,CAAC6B,GAAP,WAAcF,eAAd,GAAiCjB,YAAjC,EAA+CO,eAA/C;AACAjB,MAAM,CAAC6B,GAAP,WAAcF,eAAd,mBAA6CjB,YAA7C,EAA2DM,YAA3D;AACAhB,MAAM,CAAC6B,GAAP,WAAcF,eAAd,+BAAyDjB,YAAzD,EAAuES,kBAAvE;AACAnB,MAAM,UAAN,WAAiB2B,eAAjB,mBAAgDjB,YAAhD,EAA8DC,OAA9D,EAAuEO,gBAAvE;eAEelB,M",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/routes",
      "sourcesContent": [
        "import express from 'express';\nimport UserController from '../controllers/userController';\nimport AuthValidator from '../middlewares/authValidator';\nimport PropertyController from '../controllers/propertyController';\nimport PropertyValidator from '../middlewares/propertyValidator'\n\nconst router = express.Router();\n\nconst { createAccount, loginUser } = UserController;\nconst { validateSignUp, userExists, validateLogin, isTokenValid, isAgent } = AuthValidator;\nconst { createPropertyAd, updatePropertyAdStatus, updatePropertyAdPrice, getAProperty, getAllPropertys, deletePropertyAd, getPropertysByType } = PropertyController;\nconst { validateProperty, isPropertyExist, validateStatus, validatePrice } = PropertyValidator;\n\n// Auth routes\nconst authBaseUrl = '/api/v1/auth';\nrouter.post(`${authBaseUrl}/signup`, validateSignUp, userExists, createAccount);\nrouter.post(`${authBaseUrl}/login`, validateLogin, loginUser);\n\n// Property routes\nconst propertyBaseUrl = '/api/v1/property';\nrouter.post(`${propertyBaseUrl}`, isTokenValid, isAgent, validateProperty, createPropertyAd);\nrouter.patch(`${propertyBaseUrl}/:propertyId/status`, isTokenValid, isAgent, isPropertyExist, validateStatus, updatePropertyAdStatus);\nrouter.patch(`${propertyBaseUrl}/:propertyId/price`, isTokenValid, isAgent, isPropertyExist, validatePrice, updatePropertyAdPrice);\nrouter.get(`${propertyBaseUrl}`, isTokenValid, getAllPropertys);\nrouter.get(`${propertyBaseUrl}/:propertyId`, isTokenValid, getAProperty);\nrouter.get(`${propertyBaseUrl}/getByType/:propertyType`, isTokenValid, getPropertysByType);\nrouter.delete(`${propertyBaseUrl}/:propertyId`, isTokenValid, isAgent, deletePropertyAd);\n\nexport default router;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562151671760
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/controllers/userController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers/userController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers/userController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers/userController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers",
        "sourceFileName": "userController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _passwordHash = _interopRequireDefault(require(\"password-hash\"));\n\nvar _shortid = _interopRequireDefault(require(\"shortid\"));\n\nvar _auth = _interopRequireDefault(require(\"../helpers/auth\"));\n\nvar _users = _interopRequireDefault(require(\"../models/users\"));\n\nvar generateToken = _auth[\"default\"].generateToken;\n\nvar UserController =\n/*#__PURE__*/\nfunction () {\n  function UserController() {\n    (0, _classCallCheck2[\"default\"])(this, UserController);\n  }\n\n  (0, _createClass2[\"default\"])(UserController, null, [{\n    key: \"createAccount\",\n\n    /**\n     *\n     * @param {object} req - request\n     * @param {object} res - response\n     */\n    value: function () {\n      var _createAccount = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee(req, res) {\n        var isAgent, id, _req$body, firstName, lastName, email, phone, password, address, hashedpassword, user, token;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                isAgent = false;\n                id = _shortid[\"default\"].generate();\n                _context.prev = 2;\n                _req$body = req.body, firstName = _req$body.firstName, lastName = _req$body.lastName, email = _req$body.email, phone = _req$body.phone, password = _req$body.password, address = _req$body.address;\n                hashedpassword = _passwordHash[\"default\"].generate(password);\n                user = {\n                  id: id,\n                  firstName: firstName,\n                  lastName: lastName,\n                  email: email,\n                  phone: phone,\n                  address: address,\n                  isAgent: isAgent,\n                  password: hashedpassword\n                };\n\n                _users[\"default\"].push(user);\n\n                _context.next = 9;\n                return generateToken({\n                  id: id,\n                  isAgent: isAgent\n                });\n\n              case 9:\n                token = _context.sent;\n                return _context.abrupt(\"return\", res.status(201).json({\n                  status: 201,\n                  data: [{\n                    token: token,\n                    user: user\n                  }]\n                }));\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](2);\n                return _context.abrupt(\"return\", res.status(500).json({\n                  error: true,\n                  message: 'Internal Server error'\n                }));\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 13]]);\n      }));\n\n      function createAccount(_x, _x2) {\n        return _createAccount.apply(this, arguments);\n      }\n\n      return createAccount;\n    }()\n    /**\n    *\n    * @param {object} req - request\n    * @param {object} res - response\n    */\n\n  }, {\n    key: \"loginUser\",\n    value: function () {\n      var _loginUser = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(req, res) {\n        var _req$body2, email, password, user, id, isAgent, token;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n                _context2.prev = 1;\n                user = _users[\"default\"].find(function (usr) {\n                  return usr.email === email && _passwordHash[\"default\"].verify(password, usr.password);\n                });\n\n                if (!(user && user !== undefined)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                id = user.id, isAgent = user.isAgent;\n                _context2.next = 7;\n                return generateToken({\n                  id: id,\n                  isAgent: isAgent\n                });\n\n              case 7:\n                token = _context2.sent;\n                return _context2.abrupt(\"return\", res.status(200).json({\n                  data: [{\n                    token: token,\n                    user: user\n                  }],\n                  message: 'Login successful'\n                }));\n\n              case 9:\n                return _context2.abrupt(\"return\", res.status(401).json({\n                  error: true,\n                  message: 'Invalid email or password'\n                }));\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](1);\n                return _context2.abrupt(\"return\", res.status(500).json({\n                  error: true,\n                  message: 'Internal server error'\n                }));\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 12]]);\n      }));\n\n      function loginUser(_x3, _x4) {\n        return _loginUser.apply(this, arguments);\n      }\n\n      return loginUser;\n    }()\n  }]);\n  return UserController;\n}();\n\nvar _default = UserController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImdlbmVyYXRlVG9rZW4iLCJBdXRoIiwiVXNlckNvbnRyb2xsZXIiLCJyZXEiLCJyZXMiLCJpc0FnZW50IiwiaWQiLCJzaG9ydElkIiwiZ2VuZXJhdGUiLCJib2R5IiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJlbWFpbCIsInBob25lIiwicGFzc3dvcmQiLCJhZGRyZXNzIiwiaGFzaGVkcGFzc3dvcmQiLCJwYXNzd29yZEhhc2giLCJ1c2VyIiwidXNlck1vZGVsIiwicHVzaCIsInRva2VuIiwic3RhdHVzIiwianNvbiIsImRhdGEiLCJlcnJvciIsIm1lc3NhZ2UiLCJmaW5kIiwidXNyIiwidmVyaWZ5IiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztJQUVRQSxhLEdBQWtCQyxnQixDQUFsQkQsYTs7SUFFRkUsYzs7Ozs7Ozs7OztBQUNKOzs7Ozs7OztvREFLMkJDLEcsRUFBS0MsRzs7Ozs7OztBQUN4QkMsZ0JBQUFBLE8sR0FBVSxLO0FBQ1ZDLGdCQUFBQSxFLEdBQUtDLG9CQUFRQyxRQUFSLEU7OzRCQUV3REwsR0FBRyxDQUFDTSxJLEVBQTdEQyxTLGFBQUFBLFMsRUFBV0MsUSxhQUFBQSxRLEVBQVVDLEssYUFBQUEsSyxFQUFPQyxLLGFBQUFBLEssRUFBT0MsUSxhQUFBQSxRLEVBQVVDLE8sYUFBQUEsTztBQUMvQ0MsZ0JBQUFBLGMsR0FBaUJDLHlCQUFhVCxRQUFiLENBQXNCTSxRQUF0QixDO0FBQ2pCSSxnQkFBQUEsSSxHQUFPO0FBQ1haLGtCQUFBQSxFQUFFLEVBQUZBLEVBRFc7QUFDUEksa0JBQUFBLFNBQVMsRUFBVEEsU0FETztBQUNJQyxrQkFBQUEsUUFBUSxFQUFSQSxRQURKO0FBQ2NDLGtCQUFBQSxLQUFLLEVBQUxBLEtBRGQ7QUFDcUJDLGtCQUFBQSxLQUFLLEVBQUxBLEtBRHJCO0FBQzRCRSxrQkFBQUEsT0FBTyxFQUFQQSxPQUQ1QjtBQUNxQ1Ysa0JBQUFBLE9BQU8sRUFBUEEsT0FEckM7QUFDOENTLGtCQUFBQSxRQUFRLEVBQUVFO0FBRHhELGlCOztBQUdiRyxrQ0FBVUMsSUFBVixDQUFlRixJQUFmOzs7dUJBQ29CbEIsYUFBYSxDQUFDO0FBQUVNLGtCQUFBQSxFQUFFLEVBQUZBLEVBQUY7QUFBTUQsa0JBQUFBLE9BQU8sRUFBUEE7QUFBTixpQkFBRCxDOzs7QUFBM0JnQixnQkFBQUEsSztpREFDQ2pCLEdBQUcsQ0FBQ2tCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMxQkQsa0JBQUFBLE1BQU0sRUFBRSxHQURrQjtBQUUxQkUsa0JBQUFBLElBQUksRUFBRSxDQUFDO0FBQ0xILG9CQUFBQSxLQUFLLEVBQUxBLEtBREs7QUFDRUgsb0JBQUFBLElBQUksRUFBSkE7QUFERixtQkFBRDtBQUZvQixpQkFBckIsQzs7Ozs7aURBT0FkLEdBQUcsQ0FBQ2tCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFRSxrQkFBQUEsS0FBSyxFQUFFLElBQVQ7QUFBZUMsa0JBQUFBLE9BQU8sRUFBRTtBQUF4QixpQkFBckIsQzs7Ozs7Ozs7Ozs7Ozs7OztBQUlYOzs7Ozs7Ozs7OztxREFLc0J2QixHLEVBQUtDLEc7Ozs7Ozs7NkJBQ0NELEdBQUcsQ0FBQ00sSSxFQUF4QkcsSyxjQUFBQSxLLEVBQU9FLFEsY0FBQUEsUTs7QUFFUEksZ0JBQUFBLEksR0FBT0Msa0JBQVVRLElBQVYsQ0FBZSxVQUFBQyxHQUFHO0FBQUEseUJBQUtBLEdBQUcsQ0FBQ2hCLEtBQUosS0FBY0EsS0FBZixJQUM3QksseUJBQWFZLE1BQWIsQ0FBb0JmLFFBQXBCLEVBQThCYyxHQUFHLENBQUNkLFFBQWxDLENBRHlCO0FBQUEsaUJBQWxCLEM7O3NCQUVUSSxJQUFJLElBQUlBLElBQUksS0FBS1ksUzs7Ozs7QUFDWHhCLGdCQUFBQSxFLEdBQWdCWSxJLENBQWhCWixFLEVBQUlELE8sR0FBWWEsSSxDQUFaYixPOzt1QkFDUUwsYUFBYSxDQUFDO0FBQUVNLGtCQUFBQSxFQUFFLEVBQUZBLEVBQUY7QUFBTUQsa0JBQUFBLE9BQU8sRUFBUEE7QUFBTixpQkFBRCxDOzs7QUFBM0JnQixnQkFBQUEsSztrREFDQ2pCLEdBQUcsQ0FBQ2tCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFQyxrQkFBQUEsSUFBSSxFQUFFLENBQUM7QUFBRUgsb0JBQUFBLEtBQUssRUFBTEEsS0FBRjtBQUFTSCxvQkFBQUEsSUFBSSxFQUFKQTtBQUFULG1CQUFELENBQVI7QUFBMkJRLGtCQUFBQSxPQUFPLEVBQUU7QUFBcEMsaUJBQXJCLEM7OztrREFFRnRCLEdBQUcsQ0FBQ2tCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFRSxrQkFBQUEsS0FBSyxFQUFFLElBQVQ7QUFBZUMsa0JBQUFBLE9BQU8sRUFBRTtBQUF4QixpQkFBckIsQzs7Ozs7a0RBRUF0QixHQUFHLENBQUNrQixNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRUUsa0JBQUFBLEtBQUssRUFBRSxJQUFUO0FBQWVDLGtCQUFBQSxPQUFPLEVBQUU7QUFBeEIsaUJBQXJCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBTUl4QixjIiwic291cmNlUm9vdCI6Ii9ob21lL2djaGlsaWUvRGVza3RvcC9Qcm9wZXJ0eVByby1saXRlL2FwcC9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXNzd29yZEhhc2ggZnJvbSAncGFzc3dvcmQtaGFzaCc7XG5pbXBvcnQgc2hvcnRJZCBmcm9tICdzaG9ydGlkJztcbmltcG9ydCBBdXRoIGZyb20gJy4uL2hlbHBlcnMvYXV0aCc7XG5pbXBvcnQgdXNlck1vZGVsIGZyb20gJy4uL21vZGVscy91c2Vycyc7XG5cbmNvbnN0IHsgZ2VuZXJhdGVUb2tlbiB9ID0gQXV0aDtcblxuY2xhc3MgVXNlckNvbnRyb2xsZXIge1xuICAvKipcbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcSAtIHJlcXVlc3RcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcyAtIHJlc3BvbnNlXG4gICAqL1xuICBzdGF0aWMgYXN5bmMgY3JlYXRlQWNjb3VudChyZXEsIHJlcykge1xuICAgIGNvbnN0IGlzQWdlbnQgPSBmYWxzZTtcbiAgICBjb25zdCBpZCA9IHNob3J0SWQuZ2VuZXJhdGUoKTtcbiAgICB0cnkge1xuICAgICAgY29uc3QgeyBmaXJzdE5hbWUsIGxhc3ROYW1lLCBlbWFpbCwgcGhvbmUsIHBhc3N3b3JkLCBhZGRyZXNzIH0gPSByZXEuYm9keTtcbiAgICAgIGNvbnN0IGhhc2hlZHBhc3N3b3JkID0gcGFzc3dvcmRIYXNoLmdlbmVyYXRlKHBhc3N3b3JkKTtcbiAgICAgIGNvbnN0IHVzZXIgPSB7XG4gICAgICAgIGlkLCBmaXJzdE5hbWUsIGxhc3ROYW1lLCBlbWFpbCwgcGhvbmUsIGFkZHJlc3MsIGlzQWdlbnQsIHBhc3N3b3JkOiBoYXNoZWRwYXNzd29yZFxuICAgICAgfTtcbiAgICAgIHVzZXJNb2RlbC5wdXNoKHVzZXIpO1xuICAgICAgY29uc3QgdG9rZW4gPSBhd2FpdCBnZW5lcmF0ZVRva2VuKHsgaWQsIGlzQWdlbnQgfSk7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLmpzb24oe1xuICAgICAgICBzdGF0dXM6IDIwMSxcbiAgICAgICAgZGF0YTogW3tcbiAgICAgICAgICB0b2tlbiwgdXNlclxuICAgICAgICB9XSxcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IHRydWUsIG1lc3NhZ2U6ICdJbnRlcm5hbCBTZXJ2ZXIgZXJyb3InIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAqXG4gICogQHBhcmFtIHtvYmplY3R9IHJlcSAtIHJlcXVlc3RcbiAgKiBAcGFyYW0ge29iamVjdH0gcmVzIC0gcmVzcG9uc2VcbiAgKi9cbiBzdGF0aWMgYXN5bmMgbG9naW5Vc2VyKHJlcSwgcmVzKSB7XG4gIGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcbiAgdHJ5IHtcbiAgICBjb25zdCB1c2VyID0gdXNlck1vZGVsLmZpbmQodXNyID0+ICh1c3IuZW1haWwgPT09IGVtYWlsKVxuICAgICAgJiYgKHBhc3N3b3JkSGFzaC52ZXJpZnkocGFzc3dvcmQsIHVzci5wYXNzd29yZCkpKTtcbiAgICBpZiAodXNlciAmJiB1c2VyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnN0IHsgaWQsIGlzQWdlbnQgfSA9IHVzZXI7XG4gICAgICBjb25zdCB0b2tlbiA9IGF3YWl0IGdlbmVyYXRlVG9rZW4oeyBpZCwgaXNBZ2VudCB9KTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IGRhdGE6IFt7IHRva2VuLCB1c2VyIH1dLCBtZXNzYWdlOiAnTG9naW4gc3VjY2Vzc2Z1bCcgfSk7XG4gICAgfVxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yOiB0cnVlLCBtZXNzYWdlOiAnSW52YWxpZCBlbWFpbCBvciBwYXNzd29yZCcgfSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiB0cnVlLCBtZXNzYWdlOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9KTtcbiAgfVxufVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFVzZXJDb250cm9sbGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "userController.js"
      ],
      "names": [
        "generateToken",
        "Auth",
        "UserController",
        "req",
        "res",
        "isAgent",
        "id",
        "shortId",
        "generate",
        "body",
        "firstName",
        "lastName",
        "email",
        "phone",
        "password",
        "address",
        "hashedpassword",
        "passwordHash",
        "user",
        "userModel",
        "push",
        "token",
        "status",
        "json",
        "data",
        "error",
        "message",
        "find",
        "usr",
        "verify",
        "undefined"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;IAEQA,a,GAAkBC,gB,CAAlBD,a;;IAEFE,c;;;;;;;;;;AACJ;;;;;;;;oDAK2BC,G,EAAKC,G;;;;;;;AACxBC,gBAAAA,O,GAAU,K;AACVC,gBAAAA,E,GAAKC,oBAAQC,QAAR,E;;4BAEwDL,GAAG,CAACM,I,EAA7DC,S,aAAAA,S,EAAWC,Q,aAAAA,Q,EAAUC,K,aAAAA,K,EAAOC,K,aAAAA,K,EAAOC,Q,aAAAA,Q,EAAUC,O,aAAAA,O;AAC/CC,gBAAAA,c,GAAiBC,yBAAaT,QAAb,CAAsBM,QAAtB,C;AACjBI,gBAAAA,I,GAAO;AACXZ,kBAAAA,EAAE,EAAFA,EADW;AACPI,kBAAAA,SAAS,EAATA,SADO;AACIC,kBAAAA,QAAQ,EAARA,QADJ;AACcC,kBAAAA,KAAK,EAALA,KADd;AACqBC,kBAAAA,KAAK,EAALA,KADrB;AAC4BE,kBAAAA,OAAO,EAAPA,OAD5B;AACqCV,kBAAAA,OAAO,EAAPA,OADrC;AAC8CS,kBAAAA,QAAQ,EAAEE;AADxD,iB;;AAGbG,kCAAUC,IAAV,CAAeF,IAAf;;;uBACoBlB,aAAa,CAAC;AAAEM,kBAAAA,EAAE,EAAFA,EAAF;AAAMD,kBAAAA,OAAO,EAAPA;AAAN,iBAAD,C;;;AAA3BgB,gBAAAA,K;iDACCjB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAAA,MAAM,EAAE,GADkB;AAE1BE,kBAAAA,IAAI,EAAE,CAAC;AACLH,oBAAAA,KAAK,EAALA,KADK;AACEH,oBAAAA,IAAI,EAAJA;AADF,mBAAD;AAFoB,iBAArB,C;;;;;iDAOAd,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,kBAAAA,KAAK,EAAE,IAAT;AAAeC,kBAAAA,OAAO,EAAE;AAAxB,iBAArB,C;;;;;;;;;;;;;;;;AAIX;;;;;;;;;;;qDAKsBvB,G,EAAKC,G;;;;;;;6BACCD,GAAG,CAACM,I,EAAxBG,K,cAAAA,K,EAAOE,Q,cAAAA,Q;;AAEPI,gBAAAA,I,GAAOC,kBAAUQ,IAAV,CAAe,UAAAC,GAAG;AAAA,yBAAKA,GAAG,CAAChB,KAAJ,KAAcA,KAAf,IAC7BK,yBAAaY,MAAb,CAAoBf,QAApB,EAA8Bc,GAAG,CAACd,QAAlC,CADyB;AAAA,iBAAlB,C;;sBAETI,IAAI,IAAIA,IAAI,KAAKY,S;;;;;AACXxB,gBAAAA,E,GAAgBY,I,CAAhBZ,E,EAAID,O,GAAYa,I,CAAZb,O;;uBACQL,aAAa,CAAC;AAAEM,kBAAAA,EAAE,EAAFA,EAAF;AAAMD,kBAAAA,OAAO,EAAPA;AAAN,iBAAD,C;;;AAA3BgB,gBAAAA,K;kDACCjB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,kBAAAA,IAAI,EAAE,CAAC;AAAEH,oBAAAA,KAAK,EAALA,KAAF;AAASH,oBAAAA,IAAI,EAAJA;AAAT,mBAAD,CAAR;AAA2BQ,kBAAAA,OAAO,EAAE;AAApC,iBAArB,C;;;kDAEFtB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,kBAAAA,KAAK,EAAE,IAAT;AAAeC,kBAAAA,OAAO,EAAE;AAAxB,iBAArB,C;;;;;kDAEAtB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,kBAAAA,KAAK,EAAE,IAAT;AAAeC,kBAAAA,OAAO,EAAE;AAAxB,iBAArB,C;;;;;;;;;;;;;;;;;;;;eAMIxB,c",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers",
      "sourcesContent": [
        "import passwordHash from 'password-hash';\nimport shortId from 'shortid';\nimport Auth from '../helpers/auth';\nimport userModel from '../models/users';\n\nconst { generateToken } = Auth;\n\nclass UserController {\n  /**\n   *\n   * @param {object} req - request\n   * @param {object} res - response\n   */\n  static async createAccount(req, res) {\n    const isAgent = false;\n    const id = shortId.generate();\n    try {\n      const { firstName, lastName, email, phone, password, address } = req.body;\n      const hashedpassword = passwordHash.generate(password);\n      const user = {\n        id, firstName, lastName, email, phone, address, isAgent, password: hashedpassword\n      };\n      userModel.push(user);\n      const token = await generateToken({ id, isAgent });\n      return res.status(201).json({\n        status: 201,\n        data: [{\n          token, user\n        }],\n      });\n    } catch (err) {\n      return res.status(500).json({ error: true, message: 'Internal Server error' });\n    }\n  }\n\n  /**\n  *\n  * @param {object} req - request\n  * @param {object} res - response\n  */\n static async loginUser(req, res) {\n  const { email, password } = req.body;\n  try {\n    const user = userModel.find(usr => (usr.email === email)\n      && (passwordHash.verify(password, usr.password)));\n    if (user && user !== undefined) {\n      const { id, isAgent } = user;\n      const token = await generateToken({ id, isAgent });\n      return res.status(200).json({ data: [{ token, user }], message: 'Login successful' });\n    }\n    return res.status(401).json({ error: true, message: 'Invalid email or password' });\n  } catch (err) {\n    return res.status(500).json({ error: true, message: 'Internal server error' });\n  }\n}\n\n}\n\nexport default UserController;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562153964334
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/helpers/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\n_dotenv[\"default\"].config();\n\nvar SECRET = process.env.SECRET || 'Secret';\n/**\n * Handles access token generation and verification\n */\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    (0, _classCallCheck2[\"default\"])(this, Auth);\n  }\n\n  (0, _createClass2[\"default\"])(Auth, null, [{\n    key: \"generateToken\",\n\n    /**\n     * @description Handles access token generation\n     * @param {object} payload - The user credential {id, isAgent}\n     * @return {string} access token\n     */\n    value: function generateToken(payload) {\n      return _jsonwebtoken[\"default\"].sign(payload, SECRET, {\n        expiresIn: '24h'\n      });\n    }\n    /**\n    * @description Decodes the access token\n    * @param {string} token - The access token\n    * @returns {object} payload - the decoded access token\n    */\n\n  }, {\n    key: \"verifyToken\",\n    value: function verifyToken(token) {\n      return _jsonwebtoken[\"default\"].verify(token, SECRET);\n    }\n  }]);\n  return Auth;\n}();\n\nvar _default = Auth;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiZG90ZW52IiwiY29uZmlnIiwiU0VDUkVUIiwicHJvY2VzcyIsImVudiIsIkF1dGgiLCJwYXlsb2FkIiwiand0Iiwic2lnbiIsImV4cGlyZXNJbiIsInRva2VuIiwidmVyaWZ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUFBLG1CQUFPQyxNQUFQOztBQUNBLElBQU1DLE1BQU0sR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLE1BQVosSUFBc0IsUUFBckM7QUFDQTs7OztJQUdNRyxJOzs7Ozs7Ozs7O0FBQ0Y7Ozs7O2tDQUtxQkMsTyxFQUFTO0FBQzFCLGFBQU9DLHlCQUFJQyxJQUFKLENBQVNGLE9BQVQsRUFBa0JKLE1BQWxCLEVBQTBCO0FBQUVPLFFBQUFBLFNBQVMsRUFBRTtBQUFiLE9BQTFCLENBQVA7QUFFSDtBQUVDOzs7Ozs7OztnQ0FLZUMsSyxFQUFPO0FBQ3RCLGFBQU9ILHlCQUFJSSxNQUFKLENBQVdELEtBQVgsRUFBa0JSLE1BQWxCLENBQVA7QUFDSDs7Ozs7ZUFHWUcsSSIsInNvdXJjZVJvb3QiOiIvaG9tZS9nY2hpbGllL0Rlc2t0b3AvUHJvcGVydHlQcm8tbGl0ZS9hcHAvaGVscGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JztcblxuZG90ZW52LmNvbmZpZygpO1xuY29uc3QgU0VDUkVUID0gcHJvY2Vzcy5lbnYuU0VDUkVUIHx8ICdTZWNyZXQnO1xuLyoqXG4gKiBIYW5kbGVzIGFjY2VzcyB0b2tlbiBnZW5lcmF0aW9uIGFuZCB2ZXJpZmljYXRpb25cbiAqL1xuY2xhc3MgQXV0aCB7XG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uIEhhbmRsZXMgYWNjZXNzIHRva2VuIGdlbmVyYXRpb25cbiAgICAgKiBAcGFyYW0ge29iamVjdH0gcGF5bG9hZCAtIFRoZSB1c2VyIGNyZWRlbnRpYWwge2lkLCBpc0FnZW50fVxuICAgICAqIEByZXR1cm4ge3N0cmluZ30gYWNjZXNzIHRva2VuXG4gICAgICovXG4gICAgc3RhdGljIGdlbmVyYXRlVG9rZW4ocGF5bG9hZCkge1xuICAgICAgICByZXR1cm4gand0LnNpZ24ocGF5bG9hZCwgU0VDUkVULCB7IGV4cGlyZXNJbjogJzI0aCcgfSk7XG5cbiAgICB9XG5cbiAgICAgIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gRGVjb2RlcyB0aGUgYWNjZXNzIHRva2VuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0b2tlbiAtIFRoZSBhY2Nlc3MgdG9rZW5cbiAgICogQHJldHVybnMge29iamVjdH0gcGF5bG9hZCAtIHRoZSBkZWNvZGVkIGFjY2VzcyB0b2tlblxuICAgKi9cbiAgc3RhdGljIHZlcmlmeVRva2VuKHRva2VuKSB7XG4gICAgICByZXR1cm4gand0LnZlcmlmeSh0b2tlbiwgU0VDUkVUKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBdXRoOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "dotenv",
        "config",
        "SECRET",
        "process",
        "env",
        "Auth",
        "payload",
        "jwt",
        "sign",
        "expiresIn",
        "token",
        "verify"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AAEAA,mBAAOC,MAAP;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYF,MAAZ,IAAsB,QAArC;AACA;;;;IAGMG,I;;;;;;;;;;AACF;;;;;kCAKqBC,O,EAAS;AAC1B,aAAOC,yBAAIC,IAAJ,CAASF,OAAT,EAAkBJ,MAAlB,EAA0B;AAAEO,QAAAA,SAAS,EAAE;AAAb,OAA1B,CAAP;AAEH;AAEC;;;;;;;;gCAKeC,K,EAAO;AACtB,aAAOH,yBAAII,MAAJ,CAAWD,KAAX,EAAkBR,MAAlB,CAAP;AACH;;;;;eAGYG,I",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport dotenv from 'dotenv';\n\ndotenv.config();\nconst SECRET = process.env.SECRET || 'Secret';\n/**\n * Handles access token generation and verification\n */\nclass Auth {\n    /**\n     * @description Handles access token generation\n     * @param {object} payload - The user credential {id, isAgent}\n     * @return {string} access token\n     */\n    static generateToken(payload) {\n        return jwt.sign(payload, SECRET, { expiresIn: '24h' });\n\n    }\n\n      /**\n   * @description Decodes the access token\n   * @param {string} token - The access token\n   * @returns {object} payload - the decoded access token\n   */\n  static verifyToken(token) {\n      return jwt.verify(token, SECRET);\n  }\n}\n\nexport default Auth;"
      ]
    },
    "sourceType": "script",
    "mtime": 1562151671760
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/models/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/models/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/models/users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/models/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/models",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar UserModel = [{\n  firstname: 'Chinwe',\n  lastname: 'Okonkwo',\n  email: 'agent@gmail.com',\n  password: 'sha1$fc8dc1d2$1$036ea46b75d0017897c09a4022c90787e5287778',\n  phone: '08163446686',\n  address: 'Ikeja GRA',\n  isAgent: true\n}, {\n  firstname: 'John',\n  lastname: 'Doe',\n  email: 'user@gmail.com',\n  password: 'sha1$fc8dc1d2$1$036ea46b75d0017897c09a4022c90787e5287778',\n  phone: '08163446686',\n  address: 'Ikeja GRA',\n  isAgent: false\n}];\nvar _default = UserModel;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbIlVzZXJNb2RlbCIsImZpcnN0bmFtZSIsImxhc3RuYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsInBob25lIiwiYWRkcmVzcyIsImlzQWdlbnQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLFNBQVMsR0FBRyxDQUNkO0FBQ0VDLEVBQUFBLFNBQVMsRUFBRSxRQURiO0FBRUVDLEVBQUFBLFFBQVEsRUFBRSxTQUZaO0FBR0VDLEVBQUFBLEtBQUssRUFBRSxpQkFIVDtBQUlFQyxFQUFBQSxRQUFRLEVBQUUsMERBSlo7QUFLRUMsRUFBQUEsS0FBSyxFQUFFLGFBTFQ7QUFNRUMsRUFBQUEsT0FBTyxFQUFFLFdBTlg7QUFPRUMsRUFBQUEsT0FBTyxFQUFFO0FBUFgsQ0FEYyxFQVVkO0FBQ0VOLEVBQUFBLFNBQVMsRUFBRSxNQURiO0FBRUVDLEVBQUFBLFFBQVEsRUFBRSxLQUZaO0FBR0VDLEVBQUFBLEtBQUssRUFBRSxnQkFIVDtBQUlFQyxFQUFBQSxRQUFRLEVBQUUsMERBSlo7QUFLRUMsRUFBQUEsS0FBSyxFQUFFLGFBTFQ7QUFNRUMsRUFBQUEsT0FBTyxFQUFFLFdBTlg7QUFPRUMsRUFBQUEsT0FBTyxFQUFFO0FBUFgsQ0FWYyxDQUFsQjtlQXFCaUJQLFMiLCJzb3VyY2VSb290IjoiL2hvbWUvZ2NoaWxpZS9EZXNrdG9wL1Byb3BlcnR5UHJvLWxpdGUvYXBwL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFVzZXJNb2RlbCA9IFtcbiAgICB7XG4gICAgICBmaXJzdG5hbWU6ICdDaGlud2UnLFxuICAgICAgbGFzdG5hbWU6ICdPa29ua3dvJyxcbiAgICAgIGVtYWlsOiAnYWdlbnRAZ21haWwuY29tJyxcbiAgICAgIHBhc3N3b3JkOiAnc2hhMSRmYzhkYzFkMiQxJDAzNmVhNDZiNzVkMDAxNzg5N2MwOWE0MDIyYzkwNzg3ZTUyODc3NzgnLFxuICAgICAgcGhvbmU6ICcwODE2MzQ0NjY4NicsXG4gICAgICBhZGRyZXNzOiAnSWtlamEgR1JBJyxcbiAgICAgIGlzQWdlbnQ6IHRydWUsXG4gICAgfSxcbiAgICB7XG4gICAgICBmaXJzdG5hbWU6ICdKb2huJyxcbiAgICAgIGxhc3RuYW1lOiAnRG9lJyxcbiAgICAgIGVtYWlsOiAndXNlckBnbWFpbC5jb20nLFxuICAgICAgcGFzc3dvcmQ6ICdzaGExJGZjOGRjMWQyJDEkMDM2ZWE0NmI3NWQwMDE3ODk3YzA5YTQwMjJjOTA3ODdlNTI4Nzc3OCcsXG4gICAgICBwaG9uZTogJzA4MTYzNDQ2Njg2JyxcbiAgICAgIGFkZHJlc3M6ICdJa2VqYSBHUkEnLFxuICAgICAgaXNBZ2VudDogZmFsc2UsXG4gICAgfSxcbiAgXTtcbiAgXG4gIGV4cG9ydCBkZWZhdWx0IFVzZXJNb2RlbDtcbiAgIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "UserModel",
        "firstname",
        "lastname",
        "email",
        "password",
        "phone",
        "address",
        "isAgent"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,SAAS,GAAG,CACd;AACEC,EAAAA,SAAS,EAAE,QADb;AAEEC,EAAAA,QAAQ,EAAE,SAFZ;AAGEC,EAAAA,KAAK,EAAE,iBAHT;AAIEC,EAAAA,QAAQ,EAAE,0DAJZ;AAKEC,EAAAA,KAAK,EAAE,aALT;AAMEC,EAAAA,OAAO,EAAE,WANX;AAOEC,EAAAA,OAAO,EAAE;AAPX,CADc,EAUd;AACEN,EAAAA,SAAS,EAAE,MADb;AAEEC,EAAAA,QAAQ,EAAE,KAFZ;AAGEC,EAAAA,KAAK,EAAE,gBAHT;AAIEC,EAAAA,QAAQ,EAAE,0DAJZ;AAKEC,EAAAA,KAAK,EAAE,aALT;AAMEC,EAAAA,OAAO,EAAE,WANX;AAOEC,EAAAA,OAAO,EAAE;AAPX,CAVc,CAAlB;eAqBiBP,S",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/models",
      "sourcesContent": [
        "const UserModel = [\n    {\n      firstname: 'Chinwe',\n      lastname: 'Okonkwo',\n      email: 'agent@gmail.com',\n      password: 'sha1$fc8dc1d2$1$036ea46b75d0017897c09a4022c90787e5287778',\n      phone: '08163446686',\n      address: 'Ikeja GRA',\n      isAgent: true,\n    },\n    {\n      firstname: 'John',\n      lastname: 'Doe',\n      email: 'user@gmail.com',\n      password: 'sha1$fc8dc1d2$1$036ea46b75d0017897c09a4022c90787e5287778',\n      phone: '08163446686',\n      address: 'Ikeja GRA',\n      isAgent: false,\n    },\n  ];\n  \n  export default UserModel;\n  "
      ]
    },
    "sourceType": "script",
    "mtime": 1562151671760
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/authValidator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/authValidator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/authValidator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/authValidator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares",
        "sourceFileName": "authValidator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _helpers = _interopRequireDefault(require(\"../helpers\"));\n\nvar _auth = _interopRequireDefault(require(\"../helpers/auth\"));\n\nvar _users = _interopRequireDefault(require(\"../models/users\"));\n\nvar SECRET = process.env.SECRET || 'SuperSecretTokenKeyXXX&*&';\nvar verifyToken = _auth[\"default\"].verifyToken;\nvar debugg = (0, _debug[\"default\"])('authValidator');\nvar extractErrors = _helpers[\"default\"].extractErrors;\n\n_dotenv[\"default\"].config();\n/* istanbul ignore next */\n\n/**\n * @description Handles validation for all authentication processes\n */\n\n\nvar AuthValidator =\n/*#__PURE__*/\nfunction () {\n  function AuthValidator() {\n    (0, _classCallCheck2[\"default\"])(this, AuthValidator);\n  }\n\n  (0, _createClass2[\"default\"])(AuthValidator, null, [{\n    key: \"validateSignUp\",\n\n    /**\n       * validates user sign up inputs\n       * @param {object} req\n       * @param {object} res\n       * @param {callback} next\n       */\n    value: function validateSignUp(req, res, next) {\n      req.check('firstname', 'First name is required').notEmpty().trim().isAlpha().withMessage('First name can only contain alphabets');\n      req.check('lastname', 'Last name is required').notEmpty().trim().isAlpha().withMessage('Last name can only contain alphabets');\n      req.check('email', 'Email is required').notEmpty().isEmail().withMessage('Invalid email');\n      req.check('phone', 'The phone number is required').notEmpty().trim().isLength({\n        min: 11\n      }).withMessage('Enter a valid phone number');\n      req.check('password', 'Password is required').notEmpty().trim().isLength({\n        min: 6\n      }).withMessage('Password cannot be less then 6 characters');\n      req.check('address', 'Address is required').notEmpty().trim();\n      var errors = req.validationErrors();\n\n      if (errors) {\n        return res.status(400).json({\n          errors: extractErrors(errors),\n          status: 400\n        });\n      }\n\n      return next();\n    }\n    /**\n    *\n    * Checks if user already exist\n    * @param {object} req - request\n    * @param {object} res - response\n    * @param {object} next - callback\n    */\n\n  }, {\n    key: \"userExists\",\n    value: function () {\n      var _userExists = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee(req, res, next) {\n        var email, user;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                email = req.body.email;\n                _context.prev = 1;\n                user = _users[\"default\"].find(function (usr) {\n                  return usr.email === email;\n                });\n\n                if (!(user && user !== undefined)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", res.status(409).json({\n                  status: 409,\n                  error: \"User with email \".concat(email, \" already exists\")\n                }));\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                debugg(_context.t0);\n\n              case 10:\n                return _context.abrupt(\"return\", next());\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }));\n\n      function userExists(_x, _x2, _x3) {\n        return _userExists.apply(this, arguments);\n      }\n\n      return userExists;\n    }()\n    /**\n    *\n    * Validates user login inputs\n    * @static\n    * @param {object} req - request\n    * @param {object} res - response\n    * @param {object} next - callback\n    * @returns\n    */\n\n  }, {\n    key: \"validateLogin\",\n    value: function validateLogin(req, res, next) {\n      req.check('email', 'Email is required').notEmpty().isEmail().trim().withMessage('Invalid email');\n      req.check('password', 'Password is required').notEmpty().trim();\n      var errors = req.validationErrors();\n\n      if (errors) {\n        return res.status(400).json({\n          errors: extractErrors(errors),\n          status: 400\n        });\n      }\n\n      return next();\n    }\n    /**\n     *\n     * Validates authorization token\n     * @static\n     * @param {object} req - request\n     * @param {object} res - response\n     * @param {object} next - callback\n     * @returns\n     */\n\n  }, {\n    key: \"isTokenValid\",\n    value: function isTokenValid(req, res, next) {\n      try {\n        var authorization;\n        if (req.headers.token) authorization = req.headers.token;else if (req.headers.authorization) authorization = req.headers.authorization.split(' ')[1];\n\n        if (!authorization) {\n          return res.status(401).json({\n            status: 401,\n            error: 'You must log in to continue'\n          });\n        }\n\n        _jsonwebtoken[\"default\"].verify(authorization, SECRET, function (err, decoded) {\n          if (err) {\n            return res.status(401).json({\n              status: 401,\n              error: 'Invalid token, kindly log in to continue'\n            });\n          }\n\n          var id = decoded.id;\n\n          var user = _users[\"default\"].find(function (usr) {\n            return usr.id === id;\n          });\n\n          if (user) {\n            req.body.tokenPayload = decoded;\n            return next();\n          }\n\n          return res.status(401).json({\n            status: 401,\n            error: 'User with the specified token does not exist'\n          });\n        });\n      } catch (err) {\n        return res.status(401).json({\n          status: 401,\n          error: 'Internal server error, please try again'\n        });\n      }\n    }\n    /**\n    *\n    * Verifies agent\n    * @static\n    * @param {object} req - request\n    * @param {object} res - response\n    * @param {object} next - callback\n    * @returns\n    */\n\n  }, {\n    key: \"isAgent\",\n    value: function isAgent(req, res, next) {\n      try {\n        var authorization = req.headers.authorization.split(' ')[1] || req.headers.token;\n\n        if (!authorization) {\n          return res.status(401).json({\n            status: 401,\n            message: 'Invalid token, kindly log in to continue'\n          });\n        }\n\n        var verifiedToken = verifyToken(authorization);\n\n        if (!verifiedToken.isAgent) {\n          return res.status(401).json({\n            status: 401,\n            message: 'Only an Agent can perform this task'\n          });\n        }\n      } catch (err) {\n        return res.status(401).json({\n          status: 500,\n          message: 'Internal server error, please try again'\n        });\n      }\n\n      return next();\n    }\n  }]);\n  return AuthValidator;\n}();\n\nvar _default = AuthValidator;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "authValidator.js"
      ],
      "names": [
        "SECRET",
        "process",
        "env",
        "verifyToken",
        "Auth",
        "debugg",
        "extractErrors",
        "Helpers",
        "dotenv",
        "config",
        "AuthValidator",
        "req",
        "res",
        "next",
        "check",
        "notEmpty",
        "trim",
        "isAlpha",
        "withMessage",
        "isEmail",
        "isLength",
        "min",
        "errors",
        "validationErrors",
        "status",
        "json",
        "email",
        "body",
        "user",
        "UserModel",
        "find",
        "usr",
        "undefined",
        "error",
        "authorization",
        "headers",
        "token",
        "split",
        "jwt",
        "verify",
        "err",
        "decoded",
        "id",
        "tokenPayload",
        "message",
        "verifiedToken",
        "isAgent"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYF,MAAZ,IAAsB,2BAArC;IACQG,W,GAAgBC,gB,CAAhBD,W;AACR,IAAME,MAAM,GAAG,uBAAM,eAAN,CAAf;IACQC,a,GAAkBC,mB,CAAlBD,a;;AACRE,mBAAOC,MAAP;AAEA;;AACA;;;;;IAGMC,a;;;;;;;;;;AACJ;;;;;;mCAMsBC,G,EAAKC,G,EAAKC,I,EAAM;AACpCF,MAAAA,GAAG,CAACG,KAAJ,CAAU,WAAV,EAAuB,wBAAvB,EAAiDC,QAAjD,GAA4DC,IAA5D,GAAmEC,OAAnE,GACGC,WADH,CACe,uCADf;AAEAP,MAAAA,GAAG,CAACG,KAAJ,CAAU,UAAV,EAAsB,uBAAtB,EAA+CC,QAA/C,GAA0DC,IAA1D,GAAiEC,OAAjE,GACGC,WADH,CACe,sCADf;AAEAP,MAAAA,GAAG,CAACG,KAAJ,CAAU,OAAV,EAAmB,mBAAnB,EAAwCC,QAAxC,GAAmDI,OAAnD,GACGD,WADH,CACe,eADf;AAEAP,MAAAA,GAAG,CAACG,KAAJ,CAAU,OAAV,EAAmB,8BAAnB,EAAmDC,QAAnD,GAA8DC,IAA9D,GACGI,QADH,CACY;AAAEC,QAAAA,GAAG,EAAE;AAAP,OADZ,EAEGH,WAFH,CAEe,4BAFf;AAGAP,MAAAA,GAAG,CAACG,KAAJ,CAAU,UAAV,EAAsB,sBAAtB,EACGC,QADH,GACcC,IADd,GACqBI,QADrB,CAC8B;AAAEC,QAAAA,GAAG,EAAE;AAAP,OAD9B,EAEGH,WAFH,CAEe,2CAFf;AAGAP,MAAAA,GAAG,CAACG,KAAJ,CAAU,SAAV,EAAqB,qBAArB,EAA4CC,QAA5C,GAAuDC,IAAvD;AAEA,UAAMM,MAAM,GAAGX,GAAG,CAACY,gBAAJ,EAAf;;AAEA,UAAID,MAAJ,EAAY;AACV,eAAOV,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BH,UAAAA,MAAM,EAAEhB,aAAa,CAACgB,MAAD,CADK;AAE1BE,UAAAA,MAAM,EAAE;AAFkB,SAArB,CAAP;AAID;;AACD,aAAOX,IAAI,EAAX;AACD;AAED;;;;;;;;;;;;;oDAQwBF,G,EAAKC,G,EAAKC,I;;;;;;AACxBa,gBAAAA,K,GAAUf,GAAG,CAACgB,I,CAAdD,K;;AAEAE,gBAAAA,I,GAAOC,kBAAUC,IAAV,CAAe,UAAAC,GAAG;AAAA,yBAAIA,GAAG,CAACL,KAAJ,KAAcA,KAAlB;AAAA,iBAAlB,C;;sBACTE,IAAI,IAAIA,IAAI,KAAKI,S;;;;;iDACZpB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAAA,MAAM,EAAE,GADkB;AACbS,kBAAAA,KAAK,4BAAqBP,KAArB;AADQ,iBAArB,C;;;;;;;;;AAKTrB,gBAAAA,MAAM,aAAN;;;iDAEKQ,IAAI,E;;;;;;;;;;;;;;;;AAIb;;;;;;;;;;;;kCASqBF,G,EAAKC,G,EAAKC,I,EAAM;AACnCF,MAAAA,GAAG,CAACG,KAAJ,CAAU,OAAV,EAAmB,mBAAnB,EAAwCC,QAAxC,GAAmDI,OAAnD,GAA6DH,IAA7D,GACGE,WADH,CACe,eADf;AAEAP,MAAAA,GAAG,CAACG,KAAJ,CAAU,UAAV,EAAsB,sBAAtB,EAA8CC,QAA9C,GAAyDC,IAAzD;AAEA,UAAMM,MAAM,GAAGX,GAAG,CAACY,gBAAJ,EAAf;;AACA,UAAID,MAAJ,EAAY;AACV,eAAOV,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BH,UAAAA,MAAM,EAAEhB,aAAa,CAACgB,MAAD,CADK;AAE1BE,UAAAA,MAAM,EAAE;AAFkB,SAArB,CAAP;AAID;;AACD,aAAOX,IAAI,EAAX;AACD;AAED;;;;;;;;;;;;iCASoBF,G,EAAKC,G,EAAKC,I,EAAM;AAClC,UAAI;AACF,YAAIqB,aAAJ;AACA,YAAIvB,GAAG,CAACwB,OAAJ,CAAYC,KAAhB,EAAuBF,aAAa,GAAGvB,GAAG,CAACwB,OAAJ,CAAYC,KAA5B,CAAvB,KACK,IAAIzB,GAAG,CAACwB,OAAJ,CAAYD,aAAhB,EAA+BA,aAAa,GAAGvB,GAAG,CAACwB,OAAJ,CAAYD,aAAZ,CAA0BG,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAhB;;AACpC,YAAI,CAACH,aAAL,EAAoB;AAClB,iBAAOtB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,YAAAA,MAAM,EAAE,GAAV;AAAeS,YAAAA,KAAK,EAAE;AAAtB,WAArB,CAAP;AACD;;AACDK,iCAAIC,MAAJ,CAAWL,aAAX,EAA0BlC,MAA1B,EAAkC,UAACwC,GAAD,EAAMC,OAAN,EAAkB;AAClD,cAAID,GAAJ,EAAS;AACP,mBAAO5B,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,cAAAA,MAAM,EAAE,GAAV;AAAeS,cAAAA,KAAK,EAAE;AAAtB,aAArB,CAAP;AACD;;AAHiD,cAI1CS,EAJ0C,GAInCD,OAJmC,CAI1CC,EAJ0C;;AAKlD,cAAMd,IAAI,GAAGC,kBAAUC,IAAV,CAAe,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACW,EAAJ,KAAWA,EAAf;AAAA,WAAlB,CAAb;;AACA,cAAId,IAAJ,EAAU;AACRjB,YAAAA,GAAG,CAACgB,IAAJ,CAASgB,YAAT,GAAwBF,OAAxB;AACA,mBAAO5B,IAAI,EAAX;AACD;;AACD,iBAAOD,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,YAAAA,MAAM,EAAE,GAAV;AAAeS,YAAAA,KAAK,EAAE;AAAtB,WAArB,CAAP;AACD,SAXD;AAYD,OAnBD,CAmBE,OAAOO,GAAP,EAAY;AACZ,eAAO5B,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAeS,UAAAA,KAAK,EAAE;AAAtB,SAArB,CAAP;AACD;AACF;AAED;;;;;;;;;;;;4BAUetB,G,EAAKC,G,EAAKC,I,EAAM;AAC7B,UAAI;AACF,YAAMqB,aAAa,GAAGvB,GAAG,CAACwB,OAAJ,CAAYD,aAAZ,CAA0BG,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,KAA2C1B,GAAG,CAACwB,OAAJ,CAAYC,KAA7E;;AAEA,YAAI,CAACF,aAAL,EAAoB;AAClB,iBAAOtB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,YAAAA,MAAM,EAAE,GAAV;AAAeoB,YAAAA,OAAO,EAAE;AAAxB,WAArB,CAAP;AACD;;AACD,YAAMC,aAAa,GAAG1C,WAAW,CAAC+B,aAAD,CAAjC;;AACA,YAAI,CAACW,aAAa,CAACC,OAAnB,EAA4B;AAC1B,iBAAOlC,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,YAAAA,MAAM,EAAE,GAAV;AAAeoB,YAAAA,OAAO,EAAE;AAAxB,WAArB,CAAP;AACD;AACF,OAVD,CAUE,OAAOJ,GAAP,EAAY;AACZ,eAAO5B,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAeoB,UAAAA,OAAO,EAAE;AAAxB,SAArB,CAAP;AACD;;AACD,aAAO/B,IAAI,EAAX;AACD;;;;;eAGYH,a",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares",
      "sourcesContent": [
        "import dotenv from 'dotenv';\nimport debug from 'debug';\nimport jwt from 'jsonwebtoken';\nimport Helpers from '../helpers';\nimport Auth from '../helpers/auth';\nimport UserModel from '../models/users';\n\nconst SECRET = process.env.SECRET || 'SuperSecretTokenKeyXXX&*&';\nconst { verifyToken } = Auth;\nconst debugg = debug('authValidator');\nconst { extractErrors } = Helpers;\ndotenv.config();\n\n/* istanbul ignore next */\n/**\n * @description Handles validation for all authentication processes\n */\nclass AuthValidator {\n  /**\n     * validates user sign up inputs\n     * @param {object} req\n     * @param {object} res\n     * @param {callback} next\n     */\n  static validateSignUp(req, res, next) {\n    req.check('firstname', 'First name is required').notEmpty().trim().isAlpha()\n      .withMessage('First name can only contain alphabets');\n    req.check('lastname', 'Last name is required').notEmpty().trim().isAlpha()\n      .withMessage('Last name can only contain alphabets');\n    req.check('email', 'Email is required').notEmpty().isEmail()\n      .withMessage('Invalid email');\n    req.check('phone', 'The phone number is required').notEmpty().trim()\n      .isLength({ min: 11 })\n      .withMessage('Enter a valid phone number');\n    req.check('password', 'Password is required')\n      .notEmpty().trim().isLength({ min: 6 })\n      .withMessage('Password cannot be less then 6 characters');\n    req.check('address', 'Address is required').notEmpty().trim();\n\n    const errors = req.validationErrors();\n\n    if (errors) {\n      return res.status(400).json({\n        errors: extractErrors(errors),\n        status: 400,\n      });\n    }\n    return next();\n  }\n\n  /**\n  *\n  * Checks if user already exist\n  * @param {object} req - request\n  * @param {object} res - response\n  * @param {object} next - callback\n  */\n\n  static async userExists(req, res, next) {\n    const { email } = req.body;\n    try {\n      const user = UserModel.find(usr => usr.email === email);\n      if (user && user !== undefined) {\n        return res.status(409).json({\n          status: 409, error: `User with email ${email} already exists`,\n        });\n      }\n    } catch (err) {\n      debugg(err);\n    }\n    return next();\n  }\n\n\n  /**\n  *\n  * Validates user login inputs\n  * @static\n  * @param {object} req - request\n  * @param {object} res - response\n  * @param {object} next - callback\n  * @returns\n  */\n  static validateLogin(req, res, next) {\n    req.check('email', 'Email is required').notEmpty().isEmail().trim()\n      .withMessage('Invalid email');\n    req.check('password', 'Password is required').notEmpty().trim();\n\n    const errors = req.validationErrors();\n    if (errors) {\n      return res.status(400).json({\n        errors: extractErrors(errors),\n        status: 400,\n      });\n    }\n    return next();\n  }\n\n  /**\n   *\n   * Validates authorization token\n   * @static\n   * @param {object} req - request\n   * @param {object} res - response\n   * @param {object} next - callback\n   * @returns\n   */\n  static isTokenValid(req, res, next) {\n    try {\n      let authorization;\n      if (req.headers.token) authorization = req.headers.token;\n      else if (req.headers.authorization) authorization = req.headers.authorization.split(' ')[1];\n      if (!authorization) {\n        return res.status(401).json({ status: 401, error: 'You must log in to continue' });\n      }\n      jwt.verify(authorization, SECRET, (err, decoded) => {\n        if (err) {\n          return res.status(401).json({ status: 401, error: 'Invalid token, kindly log in to continue' });\n        }\n        const { id } = decoded;\n        const user = UserModel.find(usr => usr.id === id);\n        if (user) {\n          req.body.tokenPayload = decoded;\n          return next();\n        }\n        return res.status(401).json({ status: 401, error: 'User with the specified token does not exist' });\n      });\n    } catch (err) {\n      return res.status(401).json({ status: 401, error: 'Internal server error, please try again' });\n    }\n  }\n\n  /**\n  *\n  * Verifies agent\n  * @static\n  * @param {object} req - request\n  * @param {object} res - response\n  * @param {object} next - callback\n  * @returns\n  */\n\n  static isAgent(req, res, next) {\n    try {\n      const authorization = req.headers.authorization.split(' ')[1] || req.headers.token;\n\n      if (!authorization) {\n        return res.status(401).json({ status: 401, message: 'Invalid token, kindly log in to continue' });\n      }\n      const verifiedToken = verifyToken(authorization);\n      if (!verifiedToken.isAgent) {\n        return res.status(401).json({ status: 401, message: 'Only an Agent can perform this task' });\n      }\n    } catch (err) {\n      return res.status(401).json({ status: 500, message: 'Internal server error, please try again' });\n    }\n    return next();\n  }\n}\n\nexport default AuthValidator;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562151671760
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/helpers/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar Helpers =\n/*#__PURE__*/\nfunction () {\n  function Helpers() {\n    (0, _classCallCheck2[\"default\"])(this, Helpers);\n  }\n\n  (0, _createClass2[\"default\"])(Helpers, null, [{\n    key: \"extractErrors\",\n    value: function extractErrors(errors) {\n      var validationErrors = [];\n      errors.map(function (error) {\n        return validationErrors.push(error.msg);\n      });\n      return validationErrors;\n    }\n  }, {\n    key: \"isANumber\",\n    value: function isANumber(num) {\n      return Number.isInteger(Number(num));\n    }\n  }, {\n    key: \"updateType\",\n    value: function updateType(req, res, type, data, id, name) {\n      for (var i = 0; i < type.length; i += 1) {\n        if (type[i].id === id) {\n          type.splice(i, 1);\n          type.push(data);\n          return res.status(200).json({\n            status: 200,\n            data: [data],\n            message: \"\".concat(name, \" Ad updated successfully\")\n          });\n        }\n      }\n    }\n  }]);\n  return Helpers;\n}();\n\nvar _default = Helpers;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkhlbHBlcnMiLCJlcnJvcnMiLCJ2YWxpZGF0aW9uRXJyb3JzIiwibWFwIiwiZXJyb3IiLCJwdXNoIiwibXNnIiwibnVtIiwiTnVtYmVyIiwiaXNJbnRlZ2VyIiwicmVxIiwicmVzIiwidHlwZSIsImRhdGEiLCJpZCIsIm5hbWUiLCJpIiwibGVuZ3RoIiwic3BsaWNlIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7SUFBTUEsTzs7Ozs7Ozs7O2tDQUNtQkMsTSxFQUFRO0FBQzNCLFVBQU1DLGdCQUFnQixHQUFHLEVBQXpCO0FBQ0FELE1BQUFBLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLFVBQUFDLEtBQUs7QUFBQSxlQUFJRixnQkFBZ0IsQ0FBQ0csSUFBakIsQ0FBc0JELEtBQUssQ0FBQ0UsR0FBNUIsQ0FBSjtBQUFBLE9BQWhCO0FBQ0EsYUFBT0osZ0JBQVA7QUFDRDs7OzhCQUVnQkssRyxFQUFLO0FBQ3BCLGFBQU9DLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkQsTUFBTSxDQUFDRCxHQUFELENBQXZCLENBQVA7QUFDRDs7OytCQUVpQkcsRyxFQUFLQyxHLEVBQUtDLEksRUFBTUMsSSxFQUFNQyxFLEVBQUlDLEksRUFBTTtBQUNoRCxXQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdKLElBQUksQ0FBQ0ssTUFBekIsRUFBaUNELENBQUMsSUFBSSxDQUF0QyxFQUF5QztBQUN2QyxZQUFJSixJQUFJLENBQUNJLENBQUQsQ0FBSixDQUFRRixFQUFSLEtBQWVBLEVBQW5CLEVBQXVCO0FBQ3JCRixVQUFBQSxJQUFJLENBQUNNLE1BQUwsQ0FBWUYsQ0FBWixFQUFlLENBQWY7QUFDQUosVUFBQUEsSUFBSSxDQUFDUCxJQUFMLENBQVVRLElBQVY7QUFDQSxpQkFBT0YsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELFlBQUFBLE1BQU0sRUFBRSxHQURrQjtBQUUxQk4sWUFBQUEsSUFBSSxFQUFFLENBQUNBLElBQUQsQ0FGb0I7QUFHMUJRLFlBQUFBLE9BQU8sWUFBS04sSUFBTDtBQUhtQixXQUFyQixDQUFQO0FBS0Q7QUFDRjtBQUNGOzs7OztlQUdVZixPIiwic291cmNlUm9vdCI6Ii9ob21lL2djaGlsaWUvRGVza3RvcC9Qcm9wZXJ0eVByby1saXRlL2FwcC9oZWxwZXJzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgSGVscGVycyB7XG4gICAgc3RhdGljIGV4dHJhY3RFcnJvcnMoZXJyb3JzKSB7XG4gICAgICBjb25zdCB2YWxpZGF0aW9uRXJyb3JzID0gW107XG4gICAgICBlcnJvcnMubWFwKGVycm9yID0+IHZhbGlkYXRpb25FcnJvcnMucHVzaChlcnJvci5tc2cpKTtcbiAgICAgIHJldHVybiB2YWxpZGF0aW9uRXJyb3JzO1xuICAgIH1cbiAgXG4gICAgc3RhdGljIGlzQU51bWJlcihudW0pIHtcbiAgICAgIHJldHVybiBOdW1iZXIuaXNJbnRlZ2VyKE51bWJlcihudW0pKTtcbiAgICB9XG4gIFxuICAgIHN0YXRpYyB1cGRhdGVUeXBlKHJlcSwgcmVzLCB0eXBlLCBkYXRhLCBpZCwgbmFtZSkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0eXBlLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGlmICh0eXBlW2ldLmlkID09PSBpZCkge1xuICAgICAgICAgIHR5cGUuc3BsaWNlKGksIDEpO1xuICAgICAgICAgIHR5cGUucHVzaChkYXRhKTtcbiAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICAgICAgICBkYXRhOiBbZGF0YV0sXG4gICAgICAgICAgICBtZXNzYWdlOiBgJHtuYW1lfSBBZCB1cGRhdGVkIHN1Y2Nlc3NmdWxseWAsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEhlbHBlcnM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Helpers",
        "errors",
        "validationErrors",
        "map",
        "error",
        "push",
        "msg",
        "num",
        "Number",
        "isInteger",
        "req",
        "res",
        "type",
        "data",
        "id",
        "name",
        "i",
        "length",
        "splice",
        "status",
        "json",
        "message"
      ],
      "mappings": ";;;;;;;;;;;;;IAAMA,O;;;;;;;;;kCACmBC,M,EAAQ;AAC3B,UAAMC,gBAAgB,GAAG,EAAzB;AACAD,MAAAA,MAAM,CAACE,GAAP,CAAW,UAAAC,KAAK;AAAA,eAAIF,gBAAgB,CAACG,IAAjB,CAAsBD,KAAK,CAACE,GAA5B,CAAJ;AAAA,OAAhB;AACA,aAAOJ,gBAAP;AACD;;;8BAEgBK,G,EAAK;AACpB,aAAOC,MAAM,CAACC,SAAP,CAAiBD,MAAM,CAACD,GAAD,CAAvB,CAAP;AACD;;;+BAEiBG,G,EAAKC,G,EAAKC,I,EAAMC,I,EAAMC,E,EAAIC,I,EAAM;AAChD,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;AACvC,YAAIJ,IAAI,CAACI,CAAD,CAAJ,CAAQF,EAAR,KAAeA,EAAnB,EAAuB;AACrBF,UAAAA,IAAI,CAACM,MAAL,CAAYF,CAAZ,EAAe,CAAf;AACAJ,UAAAA,IAAI,CAACP,IAAL,CAAUQ,IAAV;AACA,iBAAOF,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,YAAAA,MAAM,EAAE,GADkB;AAE1BN,YAAAA,IAAI,EAAE,CAACA,IAAD,CAFoB;AAG1BQ,YAAAA,OAAO,YAAKN,IAAL;AAHmB,WAArB,CAAP;AAKD;AACF;AACF;;;;;eAGUf,O",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers",
      "sourcesContent": [
        "class Helpers {\n    static extractErrors(errors) {\n      const validationErrors = [];\n      errors.map(error => validationErrors.push(error.msg));\n      return validationErrors;\n    }\n  \n    static isANumber(num) {\n      return Number.isInteger(Number(num));\n    }\n  \n    static updateType(req, res, type, data, id, name) {\n      for (let i = 0; i < type.length; i += 1) {\n        if (type[i].id === id) {\n          type.splice(i, 1);\n          type.push(data);\n          return res.status(200).json({\n            status: 200,\n            data: [data],\n            message: `${name} Ad updated successfully`,\n          });\n        }\n      }\n    }\n}\n\nexport default Helpers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562151671760
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/controllers/propertyController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers/propertyController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers/propertyController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers/propertyController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers",
        "sourceFileName": "propertyController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _shortid = _interopRequireDefault(require(\"shortid\"));\n\nvar _property = _interopRequireDefault(require(\"../models/property\"));\n\nvar _index = _interopRequireDefault(require(\"../helpers/index\"));\n\nvar PropertyController =\n/*#__PURE__*/\nfunction () {\n  function PropertyController() {\n    (0, _classCallCheck2[\"default\"])(this, PropertyController);\n  }\n\n  (0, _createClass2[\"default\"])(PropertyController, null, [{\n    key: \"createPropertyAd\",\n\n    /**\n           *\n           * @param {object} req - request\n           * @param {object} res - response\n           */\n    value: function () {\n      var _createPropertyAd = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee(req, res) {\n        var id, status, createdOn, owner, _req$body, state, price, address, type, property;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = _shortid[\"default\"].generate();\n                status = 'available';\n                createdOn = new Date();\n                _context.prev = 3;\n                owner = req.body.tokenPayload.id;\n                _req$body = req.body, state = _req$body.state, price = _req$body.price, address = _req$body.address, type = _req$body.type;\n                property = {\n                  id: id,\n                  owner: owner,\n                  createdOn: createdOn,\n                  state: state,\n                  status: status,\n                  price: price,\n                  address: address,\n                  type: type\n                };\n\n                _property[\"default\"].push(property);\n\n                return _context.abrupt(\"return\", res.status(201).json({\n                  status: 201,\n                  data: [property],\n                  message: 'Property Ad created successfully'\n                }));\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](3);\n                return _context.abrupt(\"return\", res.status(500).json({\n                  error: true,\n                  message: 'Internal server error'\n                }));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 11]]);\n      }));\n\n      function createPropertyAd(_x, _x2) {\n        return _createPropertyAd.apply(this, arguments);\n      }\n\n      return createPropertyAd;\n    }()\n  }, {\n    key: \"updatePropertyAdPrice\",\n    value: function () {\n      var _updatePropertyAdPrice = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(req, res) {\n        var propertyId, price, property;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                propertyId = req.params.propertyId;\n                price = req.body.price;\n                _context2.prev = 2;\n                property = _property[\"default\"].find(function (property) {\n                  return property.id === propertyId;\n                });\n                property = (0, _objectSpread2[\"default\"])({}, property, {\n                  price: price\n                });\n\n                _index[\"default\"].updateType(req, res, _property[\"default\"], property, propertyId, 'property');\n\n                return _context2.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Oops, something happend, try again'\n                }));\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](2);\n                return _context2.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Internal Server error'\n                }));\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 9]]);\n      }));\n\n      function updatePropertyAdPrice(_x3, _x4) {\n        return _updatePropertyAdPrice.apply(this, arguments);\n      }\n\n      return updatePropertyAdPrice;\n    }()\n  }, {\n    key: \"updatePropertyAdStatus\",\n    value: function () {\n      var _updatePropertyAdStatus = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee3(req, res) {\n        var propertyId, status, property;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                propertyId = req.params.propertyId;\n                status = req.body.status;\n                _context3.prev = 2;\n                property = _property[\"default\"].find(function (property) {\n                  return property.id === propertyId;\n                });\n                property = (0, _objectSpread2[\"default\"])({}, property, {\n                  status: status\n                });\n\n                _index[\"default\"].updateType(req, res, _property[\"default\"], property, propertyId, 'property');\n\n                return _context3.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Oops, something happend, try again'\n                }));\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](2);\n                return _context3.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Internal server error'\n                }));\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[2, 9]]);\n      }));\n\n      function updatePropertyAdStatus(_x5, _x6) {\n        return _updatePropertyAdStatus.apply(this, arguments);\n      }\n\n      return updatePropertyAdStatus;\n    }()\n  }, {\n    key: \"getAllPropertys\",\n    value: function () {\n      var _getAllPropertys = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee4(req, res) {\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", res.status(200).json({\n                  status: 200,\n                  message: 'propertys retrieved successfully',\n                  todos: _property[\"default\"]\n                }));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getAllPropertys(_x7, _x8) {\n        return _getAllPropertys.apply(this, arguments);\n      }\n\n      return getAllPropertys;\n    }()\n  }, {\n    key: \"getPropertysByType\",\n    value: function () {\n      var _getPropertysByType = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee5(req, res) {\n        var propertyType, property;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                propertyType = req.params.propertyType;\n                _context5.prev = 1;\n                property = _property[\"default\"].filter(function (property) {\n                  return property.type === propertyType;\n                });\n\n                if (!property) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", res.status(200).json({\n                  status: 200,\n                  data: [property]\n                }));\n\n              case 5:\n                return _context5.abrupt(\"return\", res.status(404).json({\n                  status: 404,\n                  error: \"Property with type: \".concat(propertyType, \" does not exist\")\n                }));\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](1);\n                return _context5.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Interal server error'\n                }));\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[1, 8]]);\n      }));\n\n      function getPropertysByType(_x9, _x10) {\n        return _getPropertysByType.apply(this, arguments);\n      }\n\n      return getPropertysByType;\n    }()\n  }, {\n    key: \"getPropertysByType\",\n    value: function () {\n      var _getPropertysByType2 = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee6(req, res) {\n        var propertyType, property;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                propertyType = req.params.propertyType;\n                _context6.prev = 1;\n                property = _property[\"default\"].filter(function (property) {\n                  return property.type === propertyType;\n                });\n\n                if (!property) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", res.status(200).json({\n                  status: 200,\n                  data: [property]\n                }));\n\n              case 5:\n                return _context6.abrupt(\"return\", res.status(404).json({\n                  status: 404,\n                  error: \"Property with type: \".concat(propertyType, \" does not exist\")\n                }));\n\n              case 8:\n                _context6.prev = 8;\n                _context6.t0 = _context6[\"catch\"](1);\n                return _context6.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Interal server error'\n                }));\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[1, 8]]);\n      }));\n\n      function getPropertysByType(_x11, _x12) {\n        return _getPropertysByType2.apply(this, arguments);\n      }\n\n      return getPropertysByType;\n    }()\n  }, {\n    key: \"getAProperty\",\n    value: function () {\n      var _getAProperty = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee7(req, res) {\n        var propertyId, property;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                propertyId = req.params.propertyId;\n                _context7.prev = 1;\n                property = _property[\"default\"].find(function (property) {\n                  return property.id === propertyId;\n                });\n\n                if (!property) {\n                  _context7.next = 5;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", res.status(200).json({\n                  status: 200,\n                  data: [property]\n                }));\n\n              case 5:\n                return _context7.abrupt(\"return\", res.status(404).json({\n                  status: 404,\n                  error: \"Property with id: \".concat(propertyId, \" does not exist\")\n                }));\n\n              case 8:\n                _context7.prev = 8;\n                _context7.t0 = _context7[\"catch\"](1);\n                return _context7.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Interal server error'\n                }));\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[1, 8]]);\n      }));\n\n      function getAProperty(_x13, _x14) {\n        return _getAProperty.apply(this, arguments);\n      }\n\n      return getAProperty;\n    }()\n  }, {\n    key: \"deletePropertyAd\",\n    value: function () {\n      var _deletePropertyAd = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee8(req, res) {\n        var propertyId, i;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                propertyId = req.params.propertyId;\n                _context8.prev = 1;\n                i = 0;\n\n              case 3:\n                if (!(i < _property[\"default\"].length)) {\n                  _context8.next = 10;\n                  break;\n                }\n\n                if (!(_property[\"default\"][i].id === propertyId)) {\n                  _context8.next = 7;\n                  break;\n                }\n\n                _property[\"default\"].splice(i, 1);\n\n                return _context8.abrupt(\"return\", res.status(200).json({\n                  status: 204,\n                  data: [],\n                  message: 'Property Ad deleted successfully'\n                }));\n\n              case 7:\n                i += 1;\n                _context8.next = 3;\n                break;\n\n              case 10:\n                return _context8.abrupt(\"return\", res.status(404).json({\n                  status: 404,\n                  message: \"Property with id: \".concat(propertyId, \" not found\")\n                }));\n\n              case 13:\n                _context8.prev = 13;\n                _context8.t0 = _context8[\"catch\"](1);\n                return _context8.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Internal Server error'\n                }));\n\n              case 16:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[1, 13]]);\n      }));\n\n      function deletePropertyAd(_x15, _x16) {\n        return _deletePropertyAd.apply(this, arguments);\n      }\n\n      return deletePropertyAd;\n    }()\n  }]);\n  return PropertyController;\n}();\n\nvar _default = PropertyController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "propertyController.js"
      ],
      "names": [
        "PropertyController",
        "req",
        "res",
        "id",
        "shortId",
        "generate",
        "status",
        "createdOn",
        "Date",
        "owner",
        "body",
        "tokenPayload",
        "state",
        "price",
        "address",
        "type",
        "property",
        "propertyModel",
        "push",
        "json",
        "data",
        "message",
        "error",
        "propertyId",
        "params",
        "find",
        "Helper",
        "updateType",
        "todos",
        "propertyType",
        "filter",
        "i",
        "length",
        "splice"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;IAEMA,kB;;;;;;;;;;AACJ;;;;;;;;oDAK8BC,G,EAAKC,G;;;;;;;AAC3BC,gBAAAA,E,GAAKC,oBAAQC,QAAR,E;AACLC,gBAAAA,M,GAAS,W;AACTC,gBAAAA,S,GAAY,IAAIC,IAAJ,E;;AAEJC,gBAAAA,K,GAAUR,GAAG,CAACS,IAAJ,CAASC,Y,CAAvBR,E;4BACgCF,GAAG,CAACS,I,EAApCE,K,aAAAA,K,EAAOC,K,aAAAA,K,EAAOC,O,aAAAA,O,EAASC,I,aAAAA,I;AACzBC,gBAAAA,Q,GAAW;AACfb,kBAAAA,EAAE,EAAFA,EADe;AACXM,kBAAAA,KAAK,EAALA,KADW;AACJF,kBAAAA,SAAS,EAATA,SADI;AACOK,kBAAAA,KAAK,EAALA,KADP;AACcN,kBAAAA,MAAM,EAANA,MADd;AACsBO,kBAAAA,KAAK,EAALA,KADtB;AAC6BC,kBAAAA,OAAO,EAAPA,OAD7B;AACsCC,kBAAAA,IAAI,EAAJA;AADtC,iB;;AAGjBE,qCAAcC,IAAd,CAAmBF,QAAnB;;iDACOd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAC1Bb,kBAAAA,MAAM,EAAE,GADkB;AAE1Bc,kBAAAA,IAAI,EAAE,CAACJ,QAAD,CAFoB;AAG1BK,kBAAAA,OAAO,EAAE;AAHiB,iBAArB,C;;;;;iDAMAnB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEG,kBAAAA,KAAK,EAAE,IAAT;AAAeD,kBAAAA,OAAO,EAAE;AAAxB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;qDAKwBpB,G,EAAKC,G;;;;;;AAC9BqB,gBAAAA,U,GAAetB,GAAG,CAACuB,M,CAAnBD,U;AACAV,gBAAAA,K,GAAUZ,GAAG,CAACS,I,CAAdG,K;;AAEFG,gBAAAA,Q,GAAWC,qBAAcQ,IAAd,CAAmB,UAAAT,QAAQ;AAAA,yBAAIA,QAAQ,CAACb,EAAT,KAAgBoB,UAApB;AAAA,iBAA3B,C;AACfP,gBAAAA,QAAQ,sCAAQA,QAAR;AAAkBH,kBAAAA,KAAK,EAALA;AAAlB,kBAAR;;AACAa,kCAAOC,UAAP,CAAkB1B,GAAlB,EAAuBC,GAAvB,EAA4Be,oBAA5B,EAA2CD,QAA3C,EAAqDO,UAArD,EAAiE,UAAjE;;kDACOrB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;kDAEApB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;qDAIyBrB,G,EAAKC,G;;;;;;AAC/BqB,gBAAAA,U,GAAetB,GAAG,CAACuB,M,CAAnBD,U;AACAjB,gBAAAA,M,GAAWL,GAAG,CAACS,I,CAAfJ,M;;AAEFU,gBAAAA,Q,GAAWC,qBAAcQ,IAAd,CAAmB,UAAAT,QAAQ;AAAA,yBAAIA,QAAQ,CAACb,EAAT,KAAgBoB,UAApB;AAAA,iBAA3B,C;AACfP,gBAAAA,QAAQ,sCAAQA,QAAR;AAAkBV,kBAAAA,MAAM,EAANA;AAAlB,kBAAR;;AACAoB,kCAAOC,UAAP,CAAkB1B,GAAlB,EAAuBC,GAAvB,EAA4Be,oBAA5B,EAA2CD,QAA3C,EAAqDO,UAArD,EAAiE,UAAjE;;kDACOrB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;kDAEApB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;qDAIkBrB,G,EAAKC,G;;;;;kDACzBA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAC1Bb,kBAAAA,MAAM,EAAE,GADkB;AAE1Be,kBAAAA,OAAO,EAAE,kCAFiB;AAG1BO,kBAAAA,KAAK,EAAEX;AAHmB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;qDAOuBhB,G,EAAKC,G;;;;;;AAC3B2B,gBAAAA,Y,GAAiB5B,GAAG,CAACuB,M,CAArBK,Y;;AAEAb,gBAAAA,Q,GAAWC,qBAAca,MAAd,CAAqB,UAAAd,QAAQ;AAAA,yBAAIA,QAAQ,CAACD,IAAT,KAAkBc,YAAtB;AAAA,iBAA7B,C;;qBACbb,Q;;;;;kDACKd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAec,kBAAAA,IAAI,EAAE,CAACJ,QAAD;AAArB,iBAArB,C;;;kDAEFd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAC1Bb,kBAAAA,MAAM,EAAE,GADkB;AAE1BgB,kBAAAA,KAAK,gCAAyBO,YAAzB;AAFqB,iBAArB,C;;;;;kDAKA3B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;qDAGqBrB,G,EAAKC,G;;;;;;AAC3B2B,gBAAAA,Y,GAAiB5B,GAAG,CAACuB,M,CAArBK,Y;;AAEAb,gBAAAA,Q,GAAWC,qBAAca,MAAd,CAAqB,UAAAd,QAAQ;AAAA,yBAAIA,QAAQ,CAACD,IAAT,KAAkBc,YAAtB;AAAA,iBAA7B,C;;qBACbb,Q;;;;;kDACKd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAec,kBAAAA,IAAI,EAAE,CAACJ,QAAD;AAArB,iBAArB,C;;;kDAEFd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAC1Bb,kBAAAA,MAAM,EAAE,GADkB;AAE1BgB,kBAAAA,KAAK,gCAAyBO,YAAzB;AAFqB,iBAArB,C;;;;;kDAKA3B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;qDAIerB,G,EAAKC,G;;;;;;AACrBqB,gBAAAA,U,GAAetB,GAAG,CAACuB,M,CAAnBD,U;;AAEAP,gBAAAA,Q,GAAWC,qBAAcQ,IAAd,CAAmB,UAAAT,QAAQ;AAAA,yBAAIA,QAAQ,CAACb,EAAT,KAAgBoB,UAApB;AAAA,iBAA3B,C;;qBACbP,Q;;;;;kDACKd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAec,kBAAAA,IAAI,EAAE,CAACJ,QAAD;AAArB,iBAArB,C;;;kDAEFd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAC1Bb,kBAAAA,MAAM,EAAE,GADkB;AAE1BgB,kBAAAA,KAAK,8BAAuBC,UAAvB;AAFqB,iBAArB,C;;;;;kDAKArB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;qDAImBrB,G,EAAKC,G;;;;;;AACzBqB,gBAAAA,U,GAAetB,GAAG,CAACuB,M,CAAnBD,U;;AAEGQ,gBAAAA,C,GAAI,C;;;sBAAGA,CAAC,GAAGd,qBAAce,M;;;;;sBAC5Bf,qBAAcc,CAAd,EAAiB5B,EAAjB,KAAwBoB,U;;;;;AAC1BN,qCAAcgB,MAAd,CAAqBF,CAArB,EAAwB,CAAxB;;kDACO7B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAC1Bb,kBAAAA,MAAM,EAAE,GADkB;AAE1Bc,kBAAAA,IAAI,EAAE,EAFoB;AAG1BC,kBAAAA,OAAO,EAAE;AAHiB,iBAArB,C;;;AAH+BU,gBAAAA,CAAC,IAAI,C;;;;;kDAUxC7B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAee,kBAAAA,OAAO,8BAAuBE,UAAvB;AAAtB,iBAArB,C;;;;;kDAEArB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;;;;;;;;;;;;;;;;eAKEtB,kB",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers",
      "sourcesContent": [
        "import shortId from 'shortid';\nimport propertyModel from '../models/property';\nimport Helper from '../helpers/index'\n\nclass PropertyController {\n  /**\n         *\n         * @param {object} req - request\n         * @param {object} res - response\n         */\n  static async createPropertyAd(req, res) {\n    const id = shortId.generate();\n    const status = 'available';\n    const createdOn = new Date();\n    try {\n      const { id: owner } = req.body.tokenPayload;\n      const { state, price, address, type } = req.body;\n      const property = {\n        id, owner, createdOn, state, status, price, address, type\n      };\n      propertyModel.push(property);\n      return res.status(201).json({\n        status: 201,\n        data: [property],\n        message: 'Property Ad created successfully',\n      });\n    } catch (err) {\n      return res.status(500).json({ error: true, message: 'Internal server error' });\n    }\n  }\n\n\n  static async updatePropertyAdPrice(req, res) {\n    const { propertyId } = req.params;\n    const { price } = req.body;\n    try {\n      let property = propertyModel.find(property => property.id === propertyId);\n      property = { ...property, price };\n      Helper.updateType(req, res, propertyModel, property, propertyId, 'property')\n      return res.status(500).json({ status: 500, error: 'Oops, something happend, try again' });\n    } catch (err) {\n      return res.status(500).json({ status: 500, error: 'Internal Server error' });\n    }\n  }\n\n  static async updatePropertyAdStatus(req, res) {\n    const { propertyId } = req.params;\n    const { status } = req.body;\n    try {\n      let property = propertyModel.find(property => property.id === propertyId);\n      property = { ...property, status };\n      Helper.updateType(req, res, propertyModel, property, propertyId, 'property')\n      return res.status(500).json({ status: 500, error: 'Oops, something happend, try again' });\n    } catch (err) {\n      return res.status(500).json({ status: 500, error: 'Internal server error' });\n    }\n  }\n\n  static async getAllPropertys(req, res) {\n    return res.status(200).json({\n      status: 200,\n      message: 'propertys retrieved successfully',\n      todos: propertyModel,\n    });\n  }\n\n  static async getPropertysByType(req, res) {\n    const { propertyType } = req.params;\n    try {\n      const property = propertyModel.filter(property => property.type === propertyType);\n      if (property) {\n        return res.status(200).json({ status: 200, data: [property] });\n      }\n      return res.status(404).json({\n        status: 404,\n        error: `Property with type: ${propertyType} does not exist`,\n      });\n    } catch (err) {\n      return res.status(500).json({ status: 500, error: 'Interal server error' });\n    }\n  }\n  static async getPropertysByType(req, res) {\n    const { propertyType } = req.params;\n    try {\n      const property = propertyModel.filter(property => property.type === propertyType);\n      if (property) {\n        return res.status(200).json({ status: 200, data: [property] });\n      }\n      return res.status(404).json({\n        status: 404,\n        error: `Property with type: ${propertyType} does not exist`,\n      });\n    } catch (err) {\n      return res.status(500).json({ status: 500, error: 'Interal server error' });\n    }\n  }\n\n  static async getAProperty(req, res) {\n    const { propertyId } = req.params;\n    try {\n      const property = propertyModel.find(property => property.id === propertyId);\n      if (property) {\n        return res.status(200).json({ status: 200, data: [property] });\n      }\n      return res.status(404).json({\n        status: 404,\n        error: `Property with id: ${propertyId} does not exist`,\n      });\n    } catch (err) {\n      return res.status(500).json({ status: 500, error: 'Interal server error' });\n    }\n  }\n\n  static async deletePropertyAd(req, res) {\n    const { propertyId } = req.params;\n    try {\n      for (let i = 0; i < propertyModel.length; i += 1) {\n        if (propertyModel[i].id === propertyId) {\n          propertyModel.splice(i, 1);\n          return res.status(200).json({\n            status: 204,\n            data: [],\n            message: 'Property Ad deleted successfully',\n          });\n        }\n      }\n      return res.status(404).json({ status: 404, message: `Property with id: ${propertyId} not found` });\n    } catch (err) {\n      return res.status(500).json({ status: 500, error: 'Internal Server error' });\n    }\n  }\n}\n\nexport default PropertyController;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562272548153
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/models/property.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/models/property.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/models/property.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/models/property.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/models",
        "sourceFileName": "property.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar PropertyModel = [];\nvar _default = PropertyModel;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3BlcnR5LmpzIl0sIm5hbWVzIjpbIlByb3BlcnR5TW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLGFBQWEsR0FBRyxFQUF0QjtlQUdlQSxhIiwic291cmNlUm9vdCI6Ii9ob21lL2djaGlsaWUvRGVza3RvcC9Qcm9wZXJ0eVByby1saXRlL2FwcC9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQcm9wZXJ0eU1vZGVsID0gW107XG5cblxuZXhwb3J0IGRlZmF1bHQgUHJvcGVydHlNb2RlbDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "property.js"
      ],
      "names": [
        "PropertyModel"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,aAAa,GAAG,EAAtB;eAGeA,a",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/models",
      "sourcesContent": [
        "const PropertyModel = [];\n\n\nexport default PropertyModel;"
      ]
    },
    "sourceType": "script",
    "mtime": 1562209669893
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/propertyValidator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/propertyValidator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/propertyValidator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/propertyValidator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares",
        "sourceFileName": "propertyValidator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _helpers = _interopRequireDefault(require(\"../helpers\"));\n\nvar _property = _interopRequireDefault(require(\"../models/property\"));\n\nvar extractErrors = _helpers[\"default\"].extractErrors;\n\nvar PropertyValidator =\n/*#__PURE__*/\nfunction () {\n  function PropertyValidator() {\n    (0, _classCallCheck2[\"default\"])(this, PropertyValidator);\n  }\n\n  (0, _createClass2[\"default\"])(PropertyValidator, null, [{\n    key: \"validateProperty\",\n    value: function validateProperty(req, res, next) {\n      req.checkBody('state', 'Property state is required').notEmpty().trim().isAlpha().withMessage('Property state can only contain alphabets');\n      req.checkBody('price', 'Property price is required').notEmpty().isCurrency({\n        allow_negatives: false,\n        require_decimal: true\n      }).withMessage('Property price must be a valid number in two decimal place, e.g 123000.00');\n      req.checkBody('address', 'Property address is required').notEmpty().trim();\n      req.checkBody('type', 'Property type is required').notEmpty();\n      var error = req.validationErrors();\n\n      if (error) {\n        return res.status(400).json({\n          status: 400,\n          errors: extractErrors(error)\n        });\n      }\n\n      return next();\n    }\n  }, {\n    key: \"isPropertyExist\",\n    value: function isPropertyExist(req, res, next) {\n      var propertyId = req.params.propertyId || req.body.propertyId;\n\n      try {\n        var property = _property[\"default\"].find(function (pr) {\n          return pr.id === propertyId;\n        });\n\n        if (!property) {\n          return res.status(404).json({\n            status: 404,\n            error: \"Property Ad with id: \".concat(propertyId, \" does not exist\")\n          });\n        }\n\n        next();\n      } catch (error) {\n        return res.status(500).json({\n          status: 500,\n          error: 'Inernal server error'\n        });\n      }\n    }\n  }, {\n    key: \"validateStatus\",\n    value: function validateStatus(req, res, next) {\n      req.checkBody('status', 'Property status is required').notEmpty().trim().isIn(['sold', 'available']).withMessage('Property status can only be sold or available').isString().withMessage('Property status must be a string');\n      var errors = req.validationErrors();\n\n      if (errors) {\n        return res.status(400).json({\n          status: 400,\n          errors: extractErrors(errors)\n        });\n      }\n\n      return next();\n    }\n  }, {\n    key: \"validatePrice\",\n    value: function validatePrice(req, res, next) {\n      req.checkBody('price', 'Property price is required').notEmpty().trim().isFloat().withMessage('Property price must contain decimal point');\n      var errors = req.validationErrors();\n\n      if (errors) {\n        return res.status(400).json({\n          status: 400,\n          errors: extractErrors(errors)\n        });\n      }\n\n      return next();\n    }\n  }]);\n  return PropertyValidator;\n}();\n\nvar _default = PropertyValidator;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3BlcnR5VmFsaWRhdG9yLmpzIl0sIm5hbWVzIjpbImV4dHJhY3RFcnJvcnMiLCJIZWxwZXJzIiwiUHJvcGVydHlWYWxpZGF0b3IiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY2hlY2tCb2R5Iiwibm90RW1wdHkiLCJ0cmltIiwiaXNBbHBoYSIsIndpdGhNZXNzYWdlIiwiaXNDdXJyZW5jeSIsImFsbG93X25lZ2F0aXZlcyIsInJlcXVpcmVfZGVjaW1hbCIsImVycm9yIiwidmFsaWRhdGlvbkVycm9ycyIsInN0YXR1cyIsImpzb24iLCJlcnJvcnMiLCJwcm9wZXJ0eUlkIiwicGFyYW1zIiwiYm9keSIsInByb3BlcnR5IiwicHJvcGVydHlNb2RlbCIsImZpbmQiLCJwciIsImlkIiwiaXNJbiIsImlzU3RyaW5nIiwiaXNGbG9hdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztJQUNRQSxhLEdBQWtCQyxtQixDQUFsQkQsYTs7SUFFRkUsaUI7Ozs7Ozs7OztxQ0FDb0JDLEcsRUFBS0MsRyxFQUFLQyxJLEVBQU07QUFDdENGLE1BQUFBLEdBQUcsQ0FBQ0csU0FBSixDQUFjLE9BQWQsRUFBdUIsNEJBQXZCLEVBQXFEQyxRQUFyRCxHQUFnRUMsSUFBaEUsR0FBdUVDLE9BQXZFLEdBQ0dDLFdBREgsQ0FDZSwyQ0FEZjtBQUVBUCxNQUFBQSxHQUFHLENBQUNHLFNBQUosQ0FBYyxPQUFkLEVBQXVCLDRCQUF2QixFQUFxREMsUUFBckQsR0FBZ0VJLFVBQWhFLENBQTJFO0FBQUVDLFFBQUFBLGVBQWUsRUFBRSxLQUFuQjtBQUEwQkMsUUFBQUEsZUFBZSxFQUFFO0FBQTNDLE9BQTNFLEVBQ0dILFdBREgsQ0FDZSwyRUFEZjtBQUVBUCxNQUFBQSxHQUFHLENBQUNHLFNBQUosQ0FBYyxTQUFkLEVBQXlCLDhCQUF6QixFQUF5REMsUUFBekQsR0FBb0VDLElBQXBFO0FBQ0FMLE1BQUFBLEdBQUcsQ0FBQ0csU0FBSixDQUFjLE1BQWQsRUFBc0IsMkJBQXRCLEVBQW1EQyxRQUFuRDtBQUNBLFVBQU1PLEtBQUssR0FBR1gsR0FBRyxDQUFDWSxnQkFBSixFQUFkOztBQUNBLFVBQUlELEtBQUosRUFBVztBQUNULGVBQU9WLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVELFVBQUFBLE1BQU0sRUFBRSxHQUFWO0FBQWVFLFVBQUFBLE1BQU0sRUFBRWxCLGFBQWEsQ0FBQ2MsS0FBRDtBQUFwQyxTQUFyQixDQUFQO0FBQ0Q7O0FBQ0QsYUFBT1QsSUFBSSxFQUFYO0FBQ0Q7OztvQ0FFc0JGLEcsRUFBS0MsRyxFQUFLQyxJLEVBQU07QUFDckMsVUFBTWMsVUFBVSxHQUFHaEIsR0FBRyxDQUFDaUIsTUFBSixDQUFXRCxVQUFYLElBQXlCaEIsR0FBRyxDQUFDa0IsSUFBSixDQUFTRixVQUFyRDs7QUFDQSxVQUFJO0FBQ0YsWUFBTUcsUUFBUSxHQUFHQyxxQkFBY0MsSUFBZCxDQUFtQixVQUFBQyxFQUFFO0FBQUEsaUJBQUlBLEVBQUUsQ0FBQ0MsRUFBSCxLQUFVUCxVQUFkO0FBQUEsU0FBckIsQ0FBakI7O0FBQ0EsWUFBSSxDQUFDRyxRQUFMLEVBQWU7QUFDYixpQkFBT2xCLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVELFlBQUFBLE1BQU0sRUFBRSxHQUFWO0FBQWVGLFlBQUFBLEtBQUssaUNBQTBCSyxVQUExQjtBQUFwQixXQUFyQixDQUFQO0FBQ0Q7O0FBQ0RkLFFBQUFBLElBQUk7QUFDTCxPQU5ELENBTUUsT0FBT1MsS0FBUCxFQUFjO0FBQ2QsZUFBT1YsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRUQsVUFBQUEsTUFBTSxFQUFFLEdBQVY7QUFBZUYsVUFBQUEsS0FBSyxFQUFFO0FBQXRCLFNBQXJCLENBQVA7QUFDRDtBQUNGOzs7bUNBRXFCWCxHLEVBQUtDLEcsRUFBS0MsSSxFQUFNO0FBQ3BDRixNQUFBQSxHQUFHLENBQUNHLFNBQUosQ0FBYyxRQUFkLEVBQXdCLDZCQUF4QixFQUF1REMsUUFBdkQsR0FBa0VDLElBQWxFLEdBQXlFbUIsSUFBekUsQ0FBOEUsQ0FBQyxNQUFELEVBQVMsV0FBVCxDQUE5RSxFQUNHakIsV0FESCxDQUNlLCtDQURmLEVBRUdrQixRQUZILEdBR0dsQixXQUhILENBR2Usa0NBSGY7QUFLQSxVQUFNUSxNQUFNLEdBQUdmLEdBQUcsQ0FBQ1ksZ0JBQUosRUFBZjs7QUFDQSxVQUFJRyxNQUFKLEVBQVk7QUFDVixlQUFPZCxHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFRCxVQUFBQSxNQUFNLEVBQUUsR0FBVjtBQUFlRSxVQUFBQSxNQUFNLEVBQUVsQixhQUFhLENBQUNrQixNQUFEO0FBQXBDLFNBQXJCLENBQVA7QUFDRDs7QUFDRCxhQUFPYixJQUFJLEVBQVg7QUFDRDs7O2tDQUVvQkYsRyxFQUFLQyxHLEVBQUtDLEksRUFBTTtBQUNuQ0YsTUFBQUEsR0FBRyxDQUFDRyxTQUFKLENBQWMsT0FBZCxFQUF1Qiw0QkFBdkIsRUFBcURDLFFBQXJELEdBQWdFQyxJQUFoRSxHQUF1RXFCLE9BQXZFLEdBQ0duQixXQURILENBQ2UsMkNBRGY7QUFHRSxVQUFNUSxNQUFNLEdBQUdmLEdBQUcsQ0FBQ1ksZ0JBQUosRUFBZjs7QUFDQSxVQUFJRyxNQUFKLEVBQVk7QUFDVixlQUFPZCxHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFRCxVQUFBQSxNQUFNLEVBQUUsR0FBVjtBQUFlRSxVQUFBQSxNQUFNLEVBQUVsQixhQUFhLENBQUNrQixNQUFEO0FBQXBDLFNBQXJCLENBQVA7QUFDRDs7QUFDRCxhQUFPYixJQUFJLEVBQVg7QUFDSDs7Ozs7ZUFHWUgsaUIiLCJzb3VyY2VSb290IjoiL2hvbWUvZ2NoaWxpZS9EZXNrdG9wL1Byb3BlcnR5UHJvLWxpdGUvYXBwL21pZGRsZXdhcmVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEhlbHBlcnMgZnJvbSAnLi4vaGVscGVycyc7XG5pbXBvcnQgcHJvcGVydHlNb2RlbCBmcm9tICcuLi9tb2RlbHMvcHJvcGVydHknO1xuY29uc3QgeyBleHRyYWN0RXJyb3JzIH0gPSBIZWxwZXJzO1xuXG5jbGFzcyBQcm9wZXJ0eVZhbGlkYXRvciB7XG4gIHN0YXRpYyB2YWxpZGF0ZVByb3BlcnR5KHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgcmVxLmNoZWNrQm9keSgnc3RhdGUnLCAnUHJvcGVydHkgc3RhdGUgaXMgcmVxdWlyZWQnKS5ub3RFbXB0eSgpLnRyaW0oKS5pc0FscGhhKClcbiAgICAgIC53aXRoTWVzc2FnZSgnUHJvcGVydHkgc3RhdGUgY2FuIG9ubHkgY29udGFpbiBhbHBoYWJldHMnKTtcbiAgICByZXEuY2hlY2tCb2R5KCdwcmljZScsICdQcm9wZXJ0eSBwcmljZSBpcyByZXF1aXJlZCcpLm5vdEVtcHR5KCkuaXNDdXJyZW5jeSh7IGFsbG93X25lZ2F0aXZlczogZmFsc2UsIHJlcXVpcmVfZGVjaW1hbDogdHJ1ZSB9KVxuICAgICAgLndpdGhNZXNzYWdlKCdQcm9wZXJ0eSBwcmljZSBtdXN0IGJlIGEgdmFsaWQgbnVtYmVyIGluIHR3byBkZWNpbWFsIHBsYWNlLCBlLmcgMTIzMDAwLjAwJyk7XG4gICAgcmVxLmNoZWNrQm9keSgnYWRkcmVzcycsICdQcm9wZXJ0eSBhZGRyZXNzIGlzIHJlcXVpcmVkJykubm90RW1wdHkoKS50cmltKCk7XG4gICAgcmVxLmNoZWNrQm9keSgndHlwZScsICdQcm9wZXJ0eSB0eXBlIGlzIHJlcXVpcmVkJykubm90RW1wdHkoKTtcbiAgICBjb25zdCBlcnJvciA9IHJlcS52YWxpZGF0aW9uRXJyb3JzKCk7XG4gICAgaWYgKGVycm9yKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBzdGF0dXM6IDQwMCwgZXJyb3JzOiBleHRyYWN0RXJyb3JzKGVycm9yKSB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5leHQoKTtcbiAgfVxuXG4gIHN0YXRpYyBpc1Byb3BlcnR5RXhpc3QocmVxLCByZXMsIG5leHQpIHtcbiAgICBjb25zdCBwcm9wZXJ0eUlkID0gcmVxLnBhcmFtcy5wcm9wZXJ0eUlkIHx8IHJlcS5ib2R5LnByb3BlcnR5SWQ7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHByb3BlcnR5ID0gcHJvcGVydHlNb2RlbC5maW5kKHByID0+IHByLmlkID09PSBwcm9wZXJ0eUlkKTtcbiAgICAgIGlmICghcHJvcGVydHkpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgc3RhdHVzOiA0MDQsIGVycm9yOiBgUHJvcGVydHkgQWQgd2l0aCBpZDogJHtwcm9wZXJ0eUlkfSBkb2VzIG5vdCBleGlzdGB9KTtcbiAgICAgIH1cbiAgICAgIG5leHQoKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgc3RhdHVzOiA1MDAsIGVycm9yOiAnSW5lcm5hbCBzZXJ2ZXIgZXJyb3InfSlcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgdmFsaWRhdGVTdGF0dXMocmVxLCByZXMsIG5leHQpIHtcbiAgICByZXEuY2hlY2tCb2R5KCdzdGF0dXMnLCAnUHJvcGVydHkgc3RhdHVzIGlzIHJlcXVpcmVkJykubm90RW1wdHkoKS50cmltKCkuaXNJbihbJ3NvbGQnLCAnYXZhaWxhYmxlJ10pXG4gICAgICAud2l0aE1lc3NhZ2UoJ1Byb3BlcnR5IHN0YXR1cyBjYW4gb25seSBiZSBzb2xkIG9yIGF2YWlsYWJsZScpXG4gICAgICAuaXNTdHJpbmcoKVxuICAgICAgLndpdGhNZXNzYWdlKCdQcm9wZXJ0eSBzdGF0dXMgbXVzdCBiZSBhIHN0cmluZycpO1xuXG4gICAgY29uc3QgZXJyb3JzID0gcmVxLnZhbGlkYXRpb25FcnJvcnMoKTtcbiAgICBpZiAoZXJyb3JzKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBzdGF0dXM6IDQwMCwgZXJyb3JzOiBleHRyYWN0RXJyb3JzKGVycm9ycykgfSk7XG4gICAgfVxuICAgIHJldHVybiBuZXh0KCk7XG4gIH1cblxuICBzdGF0aWMgdmFsaWRhdGVQcmljZShyZXEsIHJlcywgbmV4dCkge1xuICAgIHJlcS5jaGVja0JvZHkoJ3ByaWNlJywgJ1Byb3BlcnR5IHByaWNlIGlzIHJlcXVpcmVkJykubm90RW1wdHkoKS50cmltKCkuaXNGbG9hdCgpXG4gICAgICAud2l0aE1lc3NhZ2UoJ1Byb3BlcnR5IHByaWNlIG11c3QgY29udGFpbiBkZWNpbWFsIHBvaW50Jyk7XG5cbiAgICAgIGNvbnN0IGVycm9ycyA9IHJlcS52YWxpZGF0aW9uRXJyb3JzKCk7XG4gICAgICBpZiAoZXJyb3JzKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IHN0YXR1czogNDAwLCBlcnJvcnM6IGV4dHJhY3RFcnJvcnMoZXJyb3JzKSB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBuZXh0KCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUHJvcGVydHlWYWxpZGF0b3IiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "propertyValidator.js"
      ],
      "names": [
        "extractErrors",
        "Helpers",
        "PropertyValidator",
        "req",
        "res",
        "next",
        "checkBody",
        "notEmpty",
        "trim",
        "isAlpha",
        "withMessage",
        "isCurrency",
        "allow_negatives",
        "require_decimal",
        "error",
        "validationErrors",
        "status",
        "json",
        "errors",
        "propertyId",
        "params",
        "body",
        "property",
        "propertyModel",
        "find",
        "pr",
        "id",
        "isIn",
        "isString",
        "isFloat"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;IACQA,a,GAAkBC,mB,CAAlBD,a;;IAEFE,iB;;;;;;;;;qCACoBC,G,EAAKC,G,EAAKC,I,EAAM;AACtCF,MAAAA,GAAG,CAACG,SAAJ,CAAc,OAAd,EAAuB,4BAAvB,EAAqDC,QAArD,GAAgEC,IAAhE,GAAuEC,OAAvE,GACGC,WADH,CACe,2CADf;AAEAP,MAAAA,GAAG,CAACG,SAAJ,CAAc,OAAd,EAAuB,4BAAvB,EAAqDC,QAArD,GAAgEI,UAAhE,CAA2E;AAAEC,QAAAA,eAAe,EAAE,KAAnB;AAA0BC,QAAAA,eAAe,EAAE;AAA3C,OAA3E,EACGH,WADH,CACe,2EADf;AAEAP,MAAAA,GAAG,CAACG,SAAJ,CAAc,SAAd,EAAyB,8BAAzB,EAAyDC,QAAzD,GAAoEC,IAApE;AACAL,MAAAA,GAAG,CAACG,SAAJ,CAAc,MAAd,EAAsB,2BAAtB,EAAmDC,QAAnD;AACA,UAAMO,KAAK,GAAGX,GAAG,CAACY,gBAAJ,EAAd;;AACA,UAAID,KAAJ,EAAW;AACT,eAAOV,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAeE,UAAAA,MAAM,EAAElB,aAAa,CAACc,KAAD;AAApC,SAArB,CAAP;AACD;;AACD,aAAOT,IAAI,EAAX;AACD;;;oCAEsBF,G,EAAKC,G,EAAKC,I,EAAM;AACrC,UAAMc,UAAU,GAAGhB,GAAG,CAACiB,MAAJ,CAAWD,UAAX,IAAyBhB,GAAG,CAACkB,IAAJ,CAASF,UAArD;;AACA,UAAI;AACF,YAAMG,QAAQ,GAAGC,qBAAcC,IAAd,CAAmB,UAAAC,EAAE;AAAA,iBAAIA,EAAE,CAACC,EAAH,KAAUP,UAAd;AAAA,SAArB,CAAjB;;AACA,YAAI,CAACG,QAAL,EAAe;AACb,iBAAOlB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,YAAAA,MAAM,EAAE,GAAV;AAAeF,YAAAA,KAAK,iCAA0BK,UAA1B;AAApB,WAArB,CAAP;AACD;;AACDd,QAAAA,IAAI;AACL,OAND,CAME,OAAOS,KAAP,EAAc;AACd,eAAOV,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAeF,UAAAA,KAAK,EAAE;AAAtB,SAArB,CAAP;AACD;AACF;;;mCAEqBX,G,EAAKC,G,EAAKC,I,EAAM;AACpCF,MAAAA,GAAG,CAACG,SAAJ,CAAc,QAAd,EAAwB,6BAAxB,EAAuDC,QAAvD,GAAkEC,IAAlE,GAAyEmB,IAAzE,CAA8E,CAAC,MAAD,EAAS,WAAT,CAA9E,EACGjB,WADH,CACe,+CADf,EAEGkB,QAFH,GAGGlB,WAHH,CAGe,kCAHf;AAKA,UAAMQ,MAAM,GAAGf,GAAG,CAACY,gBAAJ,EAAf;;AACA,UAAIG,MAAJ,EAAY;AACV,eAAOd,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAeE,UAAAA,MAAM,EAAElB,aAAa,CAACkB,MAAD;AAApC,SAArB,CAAP;AACD;;AACD,aAAOb,IAAI,EAAX;AACD;;;kCAEoBF,G,EAAKC,G,EAAKC,I,EAAM;AACnCF,MAAAA,GAAG,CAACG,SAAJ,CAAc,OAAd,EAAuB,4BAAvB,EAAqDC,QAArD,GAAgEC,IAAhE,GAAuEqB,OAAvE,GACGnB,WADH,CACe,2CADf;AAGE,UAAMQ,MAAM,GAAGf,GAAG,CAACY,gBAAJ,EAAf;;AACA,UAAIG,MAAJ,EAAY;AACV,eAAOd,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAeE,UAAAA,MAAM,EAAElB,aAAa,CAACkB,MAAD;AAApC,SAArB,CAAP;AACD;;AACD,aAAOb,IAAI,EAAX;AACH;;;;;eAGYH,iB",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares",
      "sourcesContent": [
        "import Helpers from '../helpers';\nimport propertyModel from '../models/property';\nconst { extractErrors } = Helpers;\n\nclass PropertyValidator {\n  static validateProperty(req, res, next) {\n    req.checkBody('state', 'Property state is required').notEmpty().trim().isAlpha()\n      .withMessage('Property state can only contain alphabets');\n    req.checkBody('price', 'Property price is required').notEmpty().isCurrency({ allow_negatives: false, require_decimal: true })\n      .withMessage('Property price must be a valid number in two decimal place, e.g 123000.00');\n    req.checkBody('address', 'Property address is required').notEmpty().trim();\n    req.checkBody('type', 'Property type is required').notEmpty();\n    const error = req.validationErrors();\n    if (error) {\n      return res.status(400).json({ status: 400, errors: extractErrors(error) });\n    }\n    return next();\n  }\n\n  static isPropertyExist(req, res, next) {\n    const propertyId = req.params.propertyId || req.body.propertyId;\n    try {\n      const property = propertyModel.find(pr => pr.id === propertyId);\n      if (!property) {\n        return res.status(404).json({ status: 404, error: `Property Ad with id: ${propertyId} does not exist`});\n      }\n      next();\n    } catch (error) {\n      return res.status(500).json({ status: 500, error: 'Inernal server error'})\n    }\n  }\n\n  static validateStatus(req, res, next) {\n    req.checkBody('status', 'Property status is required').notEmpty().trim().isIn(['sold', 'available'])\n      .withMessage('Property status can only be sold or available')\n      .isString()\n      .withMessage('Property status must be a string');\n\n    const errors = req.validationErrors();\n    if (errors) {\n      return res.status(400).json({ status: 400, errors: extractErrors(errors) });\n    }\n    return next();\n  }\n\n  static validatePrice(req, res, next) {\n    req.checkBody('price', 'Property price is required').notEmpty().trim().isFloat()\n      .withMessage('Property price must contain decimal point');\n\n      const errors = req.validationErrors();\n      if (errors) {\n        return res.status(400).json({ status: 400, errors: extractErrors(errors) });\n      }\n      return next();\n  }\n}\n\nexport default PropertyValidator"
      ]
    },
    "sourceType": "script",
    "mtime": 1562210760696
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/test/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/test/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/test/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/test/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/test",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _app = _interopRequireDefault(require(\"../app\"));\n\n_chai[\"default\"].use(_chaiHttp[\"default\"]);\n\nvar expect = _chai[\"default\"].expect;\nvar baseUrl = '/api/v1/auth';\ndescribe('Authentication endpoints', function () {\n  /* eslint-disable no-unused-expressions */\n  describe('Sign up', function () {\n    var defaultUser = {\n      firstname: 'Lorem',\n      lastname: 'Ipsum',\n      email: 'lorem@gmail.com',\n      phone: '08087765646',\n      password: 'password',\n      address: '123 Gate av, New York, USA'\n    };\n    it('It should ensure that first name is not empty', function (done) {\n      var newUser = (0, _objectSpread2[\"default\"])({}, defaultUser, {\n        firstname: ''\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/signup\")).send(newUser).end(function (err, res) {\n        expect(res).to.have.status(400);\n        expect(res.body.errors[0]).to.eql('First name is required');\n        done();\n      });\n    });\n    it('It should ensure that last name is not empty', function (done) {\n      var newUser = (0, _objectSpread2[\"default\"])({}, defaultUser, {\n        lastname: ''\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/signup\")).send(newUser).end(function (err, res) {\n        expect(res).to.have.status(400);\n        expect(res.body.errors[0]).to.eql('Last name is required');\n        done();\n      });\n    });\n    it('It should ensure that email is not empty', function (done) {\n      var newUser = (0, _objectSpread2[\"default\"])({}, defaultUser, {\n        email: ''\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/signup\")).send(newUser).end(function (err, res) {\n        expect(res).to.have.status(400);\n        expect(res.body.errors[0]).to.eql('Email is required');\n        done();\n      });\n    });\n    it('It should ensure that email is a valid one', function (done) {\n      var newUser = (0, _objectSpread2[\"default\"])({}, defaultUser, {\n        email: 'loremIpsum.com'\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/signup\")).send(newUser).end(function (err, res) {\n        expect(res).to.have.status(400);\n        expect(res.body.errors[0]).to.eql('Invalid email');\n        done();\n      });\n    });\n    it('It should ensure that phone number is not empty', function (done) {\n      var newUser = (0, _objectSpread2[\"default\"])({}, defaultUser, {\n        phone: ''\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/signup\")).send(newUser).end(function (err, res) {\n        expect(res).to.have.status(400);\n        expect(res.body.errors[0]).to.eql('The phone number is required');\n        done();\n      });\n    });\n    it('It should ensure that phone number is not less than 11 characters', function (done) {\n      var newUser = (0, _objectSpread2[\"default\"])({}, defaultUser, {\n        phone: '0908775675'\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/signup\")).send(newUser).end(function (err, res) {\n        expect(res).to.have.status(400);\n        expect(res.body.errors[0]).to.eql('Enter a valid phone number');\n        done();\n      });\n    });\n    it('It should ensure that password is not empty', function (done) {\n      var newUser = (0, _objectSpread2[\"default\"])({}, defaultUser, {\n        password: ''\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/signup\")).send(newUser).end(function (err, res) {\n        expect(res).to.have.status(400);\n        expect(res.body.errors[0]).to.eql('Password is required');\n        done();\n      });\n    });\n    it('It should ensure that password is not not less than 6 characters', function (done) {\n      var newUser = (0, _objectSpread2[\"default\"])({}, defaultUser, {\n        password: '12345'\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/signup\")).send(newUser).end(function (err, res) {\n        expect(res).to.have.status(400);\n        expect(res.body.errors[0]).to.eql('Password cannot be less then 6 characters');\n        done();\n      });\n    });\n    it('It should ensure that address is not empty', function (done) {\n      var newUser = (0, _objectSpread2[\"default\"])({}, defaultUser, {\n        address: ''\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/signup\")).send(newUser).end(function (err, res) {\n        expect(res).to.have.status(400);\n        expect(res.body.errors[0]).to.eql('Address is required');\n        done();\n      });\n    });\n    it('It should return a user exist error', function (done) {\n      var email = 'agent@gmail.com';\n      var newUser = (0, _objectSpread2[\"default\"])({}, defaultUser, {\n        email: email\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/signup\")).send(newUser).end(function (err, res) {\n        expect(res).to.have.status(409);\n        expect(res.body.error).to.eql(\"User with email \".concat(email, \" already exists\"));\n        done();\n      });\n    });\n    it('It should successfully signup user', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/signup\")).send(defaultUser).end(function (err, res) {\n        expect(res).to.have.status(201);\n        expect(res.body).to.have.property('data');\n        expect(res.body.data).to.be.an('array');\n        expect(res.body.data).to.have.length(1);\n        done();\n      });\n    });\n  });\n  describe('Login', function () {\n    var defaultUser = {\n      email: 'agent@gmail.com',\n      password: 'password'\n    };\n    it('It should ensure that email is not empty', function (done) {\n      var newUser = (0, _objectSpread2[\"default\"])({}, defaultUser, {\n        email: ''\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/login\")).send(newUser).end(function (err, res) {\n        expect(res).to.have.status(400);\n        expect(res.body.errors[0]).to.eql('Email is required');\n        done();\n      });\n    });\n    it('It should ensure that password is not empty', function (done) {\n      var newUser = (0, _objectSpread2[\"default\"])({}, defaultUser, {\n        password: ''\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/login\")).send(newUser).end(function (err, res) {\n        expect(res).to.have.status(400);\n        expect(res.body.errors[0]).to.eql('Password is required');\n        done();\n      });\n    });\n    it('It should return invalid email and password', function (done) {\n      var newUser = (0, _objectSpread2[\"default\"])({}, defaultUser, {\n        email: 'fakeuser@gmail.com'\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/login\")).send(newUser).end(function (err, res) {\n        expect(res).to.have.status(401);\n        expect(res.body.error).to.eql(true);\n        expect(res.body).to.have.property('message');\n        expect(res.body.message).to.eql('Invalid email or password');\n        done();\n      });\n    });\n    it('It should successfully login user', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl, \"/login\")).send(defaultUser).end(function (err, res) {\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('data');\n        expect(res.body).to.have.property('message');\n        expect(res.body.data).to.be.an('array');\n        expect(res.body.data).to.have.length(1);\n        expect(res.body.message).to.eql('Login successful');\n        done();\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "chai",
        "use",
        "chaiHTTP",
        "expect",
        "baseUrl",
        "describe",
        "defaultUser",
        "firstname",
        "lastname",
        "email",
        "phone",
        "password",
        "address",
        "it",
        "done",
        "newUser",
        "request",
        "app",
        "post",
        "send",
        "end",
        "err",
        "res",
        "to",
        "have",
        "status",
        "body",
        "errors",
        "eql",
        "error",
        "property",
        "data",
        "be",
        "an",
        "length",
        "message"
      ],
      "mappings": ";;;;;;AAAA;;AACA;;AACA;;AAEAA,iBAAKC,GAAL,CAASC,oBAAT;;IACQC,M,GAAWH,gB,CAAXG,M;AACR,IAAMC,OAAO,GAAG,cAAhB;AAEAC,QAAQ,CAAC,0BAAD,EAA6B,YAAM;AACzC;AACAA,EAAAA,QAAQ,CAAC,SAAD,EAAY,YAAM;AACxB,QAAMC,WAAW,GAAG;AAClBC,MAAAA,SAAS,EAAE,OADO;AAElBC,MAAAA,QAAQ,EAAE,OAFQ;AAGlBC,MAAAA,KAAK,EAAE,iBAHW;AAIlBC,MAAAA,KAAK,EAAE,aAJW;AAKlBC,MAAAA,QAAQ,EAAE,UALQ;AAMlBC,MAAAA,OAAO,EAAE;AANS,KAApB;AAQAC,IAAAA,EAAE,CAAC,+CAAD,EAAkD,UAACC,IAAD,EAAU;AAC5D,UAAMC,OAAO,sCAAQT,WAAR;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,QAAb;;AACAP,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,cAEGe,IAFH,CAEQJ,OAFR,EAGGK,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgB,CAAhB,CAAD,CAAN,CAA2BJ,EAA3B,CAA8BK,GAA9B,CAAkC,wBAAlC;AACAd,QAAAA,IAAI;AACL,OAPH;AAQD,KAVC,CAAF;AAWAD,IAAAA,EAAE,CAAC,8CAAD,EAAiD,UAACC,IAAD,EAAU;AAC3D,UAAMC,OAAO,sCAAQT,WAAR;AAAqBE,QAAAA,QAAQ,EAAE;AAA/B,QAAb;;AACAR,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,cAEGe,IAFH,CAEQJ,OAFR,EAGGK,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgB,CAAhB,CAAD,CAAN,CAA2BJ,EAA3B,CAA8BK,GAA9B,CAAkC,uBAAlC;AACAd,QAAAA,IAAI;AACL,OAPH;AAQD,KAVC,CAAF;AAWAD,IAAAA,EAAE,CAAC,0CAAD,EAA6C,UAACC,IAAD,EAAU;AACvD,UAAMC,OAAO,sCAAQT,WAAR;AAAqBG,QAAAA,KAAK,EAAE;AAA5B,QAAb;;AACAT,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,cAEGe,IAFH,CAEQJ,OAFR,EAGGK,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgB,CAAhB,CAAD,CAAN,CAA2BJ,EAA3B,CAA8BK,GAA9B,CAAkC,mBAAlC;AACAd,QAAAA,IAAI;AACL,OAPH;AAQD,KAVC,CAAF;AAWAD,IAAAA,EAAE,CAAC,4CAAD,EAA+C,UAACC,IAAD,EAAU;AACzD,UAAMC,OAAO,sCAAQT,WAAR;AAAqBG,QAAAA,KAAK,EAAE;AAA5B,QAAb;;AACAT,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,cAEGe,IAFH,CAEQJ,OAFR,EAGGK,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgB,CAAhB,CAAD,CAAN,CAA2BJ,EAA3B,CAA8BK,GAA9B,CAAkC,eAAlC;AACAd,QAAAA,IAAI;AACL,OAPH;AAQD,KAVC,CAAF;AAWAD,IAAAA,EAAE,CAAC,iDAAD,EAAoD,UAACC,IAAD,EAAU;AAC9D,UAAMC,OAAO,sCAAQT,WAAR;AAAqBI,QAAAA,KAAK,EAAE;AAA5B,QAAb;;AACAV,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,cAEGe,IAFH,CAEQJ,OAFR,EAGGK,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgB,CAAhB,CAAD,CAAN,CAA2BJ,EAA3B,CAA8BK,GAA9B,CAAkC,8BAAlC;AACAd,QAAAA,IAAI;AACL,OAPH;AAQD,KAVC,CAAF;AAWAD,IAAAA,EAAE,CAAC,mEAAD,EAAsE,UAACC,IAAD,EAAU;AAChF,UAAMC,OAAO,sCAAQT,WAAR;AAAqBI,QAAAA,KAAK,EAAE;AAA5B,QAAb;;AACAV,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,cAEGe,IAFH,CAEQJ,OAFR,EAGGK,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgB,CAAhB,CAAD,CAAN,CAA2BJ,EAA3B,CAA8BK,GAA9B,CAAkC,4BAAlC;AACAd,QAAAA,IAAI;AACL,OAPH;AAQD,KAVC,CAAF;AAWAD,IAAAA,EAAE,CAAC,6CAAD,EAAgD,UAACC,IAAD,EAAU;AAC1D,UAAMC,OAAO,sCAAQT,WAAR;AAAqBK,QAAAA,QAAQ,EAAE;AAA/B,QAAb;;AACAX,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,cAEGe,IAFH,CAEQJ,OAFR,EAGGK,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgB,CAAhB,CAAD,CAAN,CAA2BJ,EAA3B,CAA8BK,GAA9B,CAAkC,sBAAlC;AACAd,QAAAA,IAAI;AACL,OAPH;AAQD,KAVC,CAAF;AAWAD,IAAAA,EAAE,CAAC,kEAAD,EAAqE,UAACC,IAAD,EAAU;AAC/E,UAAMC,OAAO,sCAAQT,WAAR;AAAqBK,QAAAA,QAAQ,EAAE;AAA/B,QAAb;;AACAX,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,cAEGe,IAFH,CAEQJ,OAFR,EAGGK,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgB,CAAhB,CAAD,CAAN,CAA2BJ,EAA3B,CAA8BK,GAA9B,CAAkC,2CAAlC;AACAd,QAAAA,IAAI;AACL,OAPH;AAQD,KAVC,CAAF;AAWAD,IAAAA,EAAE,CAAC,4CAAD,EAA+C,UAACC,IAAD,EAAU;AACzD,UAAMC,OAAO,sCAAQT,WAAR;AAAqBM,QAAAA,OAAO,EAAE;AAA9B,QAAb;;AACAZ,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,cAEGe,IAFH,CAEQJ,OAFR,EAGGK,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgB,CAAhB,CAAD,CAAN,CAA2BJ,EAA3B,CAA8BK,GAA9B,CAAkC,qBAAlC;AACAd,QAAAA,IAAI;AACL,OAPH;AAQD,KAVC,CAAF;AAWAD,IAAAA,EAAE,CAAC,qCAAD,EAAwC,UAACC,IAAD,EAAU;AAClD,UAAML,KAAK,GAAG,iBAAd;AACA,UAAMM,OAAO,sCAAQT,WAAR;AAAqBG,QAAAA,KAAK,EAALA;AAArB,QAAb;;AACAT,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,cAEGe,IAFH,CAEQJ,OAFR,EAGGK,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASG,KAAV,CAAN,CAAuBN,EAAvB,CAA0BK,GAA1B,2BAAiDnB,KAAjD;AACAK,QAAAA,IAAI;AACL,OAPH;AAQD,KAXC,CAAF;AAYAD,IAAAA,EAAE,CAAC,oCAAD,EAAuC,UAACC,IAAD,EAAU;AACjDd,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,cAEGe,IAFH,CAEQb,WAFR,EAGGc,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAL,CAAN,CAAiBH,EAAjB,CAAoBC,IAApB,CAAyBM,QAAzB,CAAkC,MAAlC;AACA3B,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASK,IAAV,CAAN,CAAsBR,EAAtB,CAAyBS,EAAzB,CAA4BC,EAA5B,CAA+B,OAA/B;AACA9B,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASK,IAAV,CAAN,CAAsBR,EAAtB,CAAyBC,IAAzB,CAA8BU,MAA9B,CAAqC,CAArC;AACApB,QAAAA,IAAI;AACL,OATH;AAUD,KAXC,CAAF;AAYD,GApIO,CAAR;AAsIAT,EAAAA,QAAQ,CAAC,OAAD,EAAU,YAAM;AACtB,QAAMC,WAAW,GAAG;AAClBG,MAAAA,KAAK,EAAE,iBADW;AAElBE,MAAAA,QAAQ,EAAE;AAFQ,KAApB;AAIAE,IAAAA,EAAE,CAAC,0CAAD,EAA6C,UAACC,IAAD,EAAU;AACvD,UAAMC,OAAO,sCAAQT,WAAR;AAAqBG,QAAAA,KAAK,EAAE;AAA5B,QAAb;;AACAT,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,aAEGe,IAFH,CAEQJ,OAFR,EAGGK,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgB,CAAhB,CAAD,CAAN,CAA2BJ,EAA3B,CAA8BK,GAA9B,CAAkC,mBAAlC;AACAd,QAAAA,IAAI;AACL,OAPH;AAQD,KAVC,CAAF;AAWAD,IAAAA,EAAE,CAAC,6CAAD,EAAgD,UAACC,IAAD,EAAU;AAC1D,UAAMC,OAAO,sCAAQT,WAAR;AAAqBK,QAAAA,QAAQ,EAAE;AAA/B,QAAb;;AACAX,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,aAEGe,IAFH,CAEQJ,OAFR,EAGGK,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgB,CAAhB,CAAD,CAAN,CAA2BJ,EAA3B,CAA8BK,GAA9B,CAAkC,sBAAlC;AACAd,QAAAA,IAAI;AACL,OAPH;AAQD,KAVC,CAAF;AAWAD,IAAAA,EAAE,CAAC,6CAAD,EAAgD,UAACC,IAAD,EAAU;AAC1D,UAAMC,OAAO,sCAAQT,WAAR;AAAqBG,QAAAA,KAAK,EAAE;AAA5B,QAAb;;AACAT,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,aAEGe,IAFH,CAEQJ,OAFR,EAGGK,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASG,KAAV,CAAN,CAAuBN,EAAvB,CAA0BK,GAA1B,CAA8B,IAA9B;AACAzB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAL,CAAN,CAAiBH,EAAjB,CAAoBC,IAApB,CAAyBM,QAAzB,CAAkC,SAAlC;AACA3B,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASS,OAAV,CAAN,CAAyBZ,EAAzB,CAA4BK,GAA5B,CAAgC,2BAAhC;AACAd,QAAAA,IAAI;AACL,OATH;AAUD,KAZC,CAAF;AAaAD,IAAAA,EAAE,CAAC,mCAAD,EAAsC,UAACC,IAAD,EAAU;AAChDd,uBAAKgB,OAAL,CAAaC,eAAb,EACGC,IADH,WACWd,OADX,aAEGe,IAFH,CAEQb,WAFR,EAGGc,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAL,CAAN,CAAiBH,EAAjB,CAAoBC,IAApB,CAAyBM,QAAzB,CAAkC,MAAlC;AACA3B,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAL,CAAN,CAAiBH,EAAjB,CAAoBC,IAApB,CAAyBM,QAAzB,CAAkC,SAAlC;AACA3B,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASK,IAAV,CAAN,CAAsBR,EAAtB,CAAyBS,EAAzB,CAA4BC,EAA5B,CAA+B,OAA/B;AACA9B,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASK,IAAV,CAAN,CAAsBR,EAAtB,CAAyBC,IAAzB,CAA8BU,MAA9B,CAAqC,CAArC;AACA/B,QAAAA,MAAM,CAACmB,GAAG,CAACI,IAAJ,CAASS,OAAV,CAAN,CAAyBZ,EAAzB,CAA4BK,GAA5B,CAAgC,kBAAhC;AACAd,QAAAA,IAAI;AACL,OAXH;AAYD,KAbC,CAAF;AAcD,GAtDO,CAAR;AAuDD,CA/LO,CAAR",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/test",
      "sourcesContent": [
        "import chai from 'chai';\nimport chaiHTTP from 'chai-http';\nimport app from '../app';\n\nchai.use(chaiHTTP);\nconst { expect } = chai;\nconst baseUrl = '/api/v1/auth';\n\ndescribe('Authentication endpoints', () => {\n  /* eslint-disable no-unused-expressions */\n  describe('Sign up', () => {\n    const defaultUser = {\n      firstname: 'Lorem',\n      lastname: 'Ipsum',\n      email: 'lorem@gmail.com',\n      phone: '08087765646',\n      password: 'password',\n      address: '123 Gate av, New York, USA',\n    };\n    it('It should ensure that first name is not empty', (done) => {\n      const newUser = { ...defaultUser, firstname: '' };\n      chai.request(app)\n        .post(`${baseUrl}/signup`)\n        .send(newUser)\n        .end((err, res) => {\n          expect(res).to.have.status(400);\n          expect(res.body.errors[0]).to.eql('First name is required');\n          done();\n        });\n    });\n    it('It should ensure that last name is not empty', (done) => {\n      const newUser = { ...defaultUser, lastname: '' };\n      chai.request(app)\n        .post(`${baseUrl}/signup`)\n        .send(newUser)\n        .end((err, res) => {\n          expect(res).to.have.status(400);\n          expect(res.body.errors[0]).to.eql('Last name is required');\n          done();\n        });\n    });\n    it('It should ensure that email is not empty', (done) => {\n      const newUser = { ...defaultUser, email: '' };\n      chai.request(app)\n        .post(`${baseUrl}/signup`)\n        .send(newUser)\n        .end((err, res) => {\n          expect(res).to.have.status(400);\n          expect(res.body.errors[0]).to.eql('Email is required');\n          done();\n        });\n    });\n    it('It should ensure that email is a valid one', (done) => {\n      const newUser = { ...defaultUser, email: 'loremIpsum.com' };\n      chai.request(app)\n        .post(`${baseUrl}/signup`)\n        .send(newUser)\n        .end((err, res) => {\n          expect(res).to.have.status(400);\n          expect(res.body.errors[0]).to.eql('Invalid email');\n          done();\n        });\n    });\n    it('It should ensure that phone number is not empty', (done) => {\n      const newUser = { ...defaultUser, phone: '' };\n      chai.request(app)\n        .post(`${baseUrl}/signup`)\n        .send(newUser)\n        .end((err, res) => {\n          expect(res).to.have.status(400);\n          expect(res.body.errors[0]).to.eql('The phone number is required');\n          done();\n        });\n    });\n    it('It should ensure that phone number is not less than 11 characters', (done) => {\n      const newUser = { ...defaultUser, phone: '0908775675' };\n      chai.request(app)\n        .post(`${baseUrl}/signup`)\n        .send(newUser)\n        .end((err, res) => {\n          expect(res).to.have.status(400);\n          expect(res.body.errors[0]).to.eql('Enter a valid phone number');\n          done();\n        });\n    });\n    it('It should ensure that password is not empty', (done) => {\n      const newUser = { ...defaultUser, password: '' };\n      chai.request(app)\n        .post(`${baseUrl}/signup`)\n        .send(newUser)\n        .end((err, res) => {\n          expect(res).to.have.status(400);\n          expect(res.body.errors[0]).to.eql('Password is required');\n          done();\n        });\n    });\n    it('It should ensure that password is not not less than 6 characters', (done) => {\n      const newUser = { ...defaultUser, password: '12345' };\n      chai.request(app)\n        .post(`${baseUrl}/signup`)\n        .send(newUser)\n        .end((err, res) => {\n          expect(res).to.have.status(400);\n          expect(res.body.errors[0]).to.eql('Password cannot be less then 6 characters');\n          done();\n        });\n    });\n    it('It should ensure that address is not empty', (done) => {\n      const newUser = { ...defaultUser, address: '' };\n      chai.request(app)\n        .post(`${baseUrl}/signup`)\n        .send(newUser)\n        .end((err, res) => {\n          expect(res).to.have.status(400);\n          expect(res.body.errors[0]).to.eql('Address is required');\n          done();\n        });\n    });\n    it('It should return a user exist error', (done) => {\n      const email = 'agent@gmail.com';\n      const newUser = { ...defaultUser, email };\n      chai.request(app)\n        .post(`${baseUrl}/signup`)\n        .send(newUser)\n        .end((err, res) => {\n          expect(res).to.have.status(409);\n          expect(res.body.error).to.eql(`User with email ${email} already exists`);\n          done();\n        });\n    });\n    it('It should successfully signup user', (done) => {\n      chai.request(app)\n        .post(`${baseUrl}/signup`)\n        .send(defaultUser)\n        .end((err, res) => {\n          expect(res).to.have.status(201);\n          expect(res.body).to.have.property('data');\n          expect(res.body.data).to.be.an('array');\n          expect(res.body.data).to.have.length(1);\n          done();\n        });\n    });\n  });\n\n  describe('Login', () => {\n    const defaultUser = {\n      email: 'agent@gmail.com',\n      password: 'password',\n    };\n    it('It should ensure that email is not empty', (done) => {\n      const newUser = { ...defaultUser, email: '' };\n      chai.request(app)\n        .post(`${baseUrl}/login`)\n        .send(newUser)\n        .end((err, res) => {\n          expect(res).to.have.status(400);\n          expect(res.body.errors[0]).to.eql('Email is required');\n          done();\n        });\n    });\n    it('It should ensure that password is not empty', (done) => {\n      const newUser = { ...defaultUser, password: '' };\n      chai.request(app)\n        .post(`${baseUrl}/login`)\n        .send(newUser)\n        .end((err, res) => {\n          expect(res).to.have.status(400);\n          expect(res.body.errors[0]).to.eql('Password is required');\n          done();\n        });\n    });\n    it('It should return invalid email and password', (done) => {\n      const newUser = { ...defaultUser, email: 'fakeuser@gmail.com' };\n      chai.request(app)\n        .post(`${baseUrl}/login`)\n        .send(newUser)\n        .end((err, res) => {\n          expect(res).to.have.status(401);\n          expect(res.body.error).to.eql(true);\n          expect(res.body).to.have.property('message');\n          expect(res.body.message).to.eql('Invalid email or password');\n          done();\n        });\n    });\n    it('It should successfully login user', (done) => {\n      chai.request(app)\n        .post(`${baseUrl}/login`)\n        .send(defaultUser)\n        .end((err, res) => {\n          expect(res).to.have.status(200);\n          expect(res.body).to.have.property('data');\n          expect(res.body).to.have.property('message');\n          expect(res.body.data).to.be.an('array');\n          expect(res.body.data).to.have.length(1);\n          expect(res.body.message).to.eql('Login successful');\n          done();\n        });\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562153964334
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _expressValidator = _interopRequireDefault(require(\"express-validator\"));\n\n// const debug = debug('http');\nvar app = (0, _express[\"default\"])();\nvar PORT = process.env.PORT || 3000;\napp.use((0, _expressValidator[\"default\"])());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].json());\napp.use(_routes[\"default\"]);\napp.get('/', function (req, res) {\n  res.status(200).send('Welcome to PropertyPro-lite...');\n});\napp.listen(PORT, function () {\n  console.log(\"Server is running on port \".concat(PORT));\n});\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJQT1JUIiwicHJvY2VzcyIsImVudiIsInVzZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwicm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwic3RhdHVzIiwic2VuZCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUdBO0FBQ0EsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWixJQUFvQixJQUFqQztBQUVBRCxHQUFHLENBQUNJLEdBQUosQ0FBUSxtQ0FBUjtBQUNBSixHQUFHLENBQUNJLEdBQUosQ0FBUUMsdUJBQVdDLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUjtBQUNBUCxHQUFHLENBQUNJLEdBQUosQ0FBUUMsdUJBQVdHLElBQVgsRUFBUjtBQUNBUixHQUFHLENBQUNJLEdBQUosQ0FBUUssa0JBQVI7QUFDQVQsR0FBRyxDQUFDVSxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3ZCQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUNJLGdDQURKO0FBR0gsQ0FKRDtBQUtBZCxHQUFHLENBQUNlLE1BQUosQ0FBV2QsSUFBWCxFQUFpQixZQUFNO0FBQ25CZSxFQUFBQSxPQUFPLENBQUNDLEdBQVIscUNBQXlDaEIsSUFBekM7QUFDSCxDQUZEO2VBSWVELEciLCJzb3VyY2VSb290IjoiL2hvbWUvZ2NoaWxpZS9EZXNrdG9wL1Byb3BlcnR5UHJvLWxpdGUvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVzJztcbmltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5pbXBvcnQgZXhwcmVzc1ZhbGlkYXRvciBmcm9tICdleHByZXNzLXZhbGlkYXRvcic7XG5cblxuLy8gY29uc3QgZGVidWcgPSBkZWJ1ZygnaHR0cCcpO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3QgUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMDtcblxuYXBwLnVzZShleHByZXNzVmFsaWRhdG9yKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSlcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShyb3V0ZXIpO1xuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKFxuICAgICAgICAnV2VsY29tZSB0byBQcm9wZXJ0eVByby1saXRlLi4uJyxcbiAgICApO1xufSk7XG5hcHAubGlzdGVuKFBPUlQsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhgU2VydmVyIGlzIHJ1bm5pbmcgb24gcG9ydCAke1BPUlR9YCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgYXBwOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "PORT",
        "process",
        "env",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "router",
        "get",
        "req",
        "res",
        "status",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA;AACA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAD,GAAG,CAACI,GAAJ,CAAQ,mCAAR;AACAJ,GAAG,CAACI,GAAJ,CAAQC,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQC,uBAAWG,IAAX,EAAR;AACAR,GAAG,CAACI,GAAJ,CAAQK,kBAAR;AACAT,GAAG,CAACU,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACI,gCADJ;AAGH,CAJD;AAKAd,GAAG,CAACe,MAAJ,CAAWd,IAAX,EAAiB,YAAM;AACnBe,EAAAA,OAAO,CAACC,GAAR,qCAAyChB,IAAzC;AACH,CAFD;eAIeD,G",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport router from './routes';\nimport debug from 'debug';\nimport expressValidator from 'express-validator';\n\n\n// const debug = debug('http');\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\napp.use(expressValidator());\napp.use(bodyParser.urlencoded({ extended: true }))\napp.use(bodyParser.json());\napp.use(router);\napp.get('/', (req, res) => {\n    res.status(200).send(\n        'Welcome to PropertyPro-lite...',\n    );\n});\napp.listen(PORT, () => {\n    console.log(`Server is running on port ${PORT}`);\n});\n\nexport default app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1562105699006
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/routes/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _userController = _interopRequireDefault(require(\"../controllers/userController\"));\n\nvar _authValidator = _interopRequireDefault(require(\"../middlewares/authValidator\"));\n\nvar _propertyController = _interopRequireDefault(require(\"../controllers/propertyController\"));\n\nvar _propertyValidator = _interopRequireDefault(require(\"../middlewares/propertyValidator\"));\n\nvar router = _express[\"default\"].Router();\n\nvar createAccount = _userController[\"default\"].createAccount,\n    loginUser = _userController[\"default\"].loginUser;\nvar validateSignUp = _authValidator[\"default\"].validateSignUp,\n    userExists = _authValidator[\"default\"].userExists,\n    validateLogin = _authValidator[\"default\"].validateLogin,\n    isTokenValid = _authValidator[\"default\"].isTokenValid,\n    isAgent = _authValidator[\"default\"].isAgent;\nvar createPropertyAd = _propertyController[\"default\"].createPropertyAd,\n    updatePropertyAdStatus = _propertyController[\"default\"].updatePropertyAdStatus,\n    updatePropertyAdPrice = _propertyController[\"default\"].updatePropertyAdPrice,\n    getAProperty = _propertyController[\"default\"].getAProperty,\n    getAllPropertys = _propertyController[\"default\"].getAllPropertys,\n    deletePropertyAd = _propertyController[\"default\"].deletePropertyAd,\n    getPropertysByType = _propertyController[\"default\"].getPropertysByType;\nvar validateProperty = _propertyValidator[\"default\"].validateProperty,\n    isPropertyExist = _propertyValidator[\"default\"].isPropertyExist,\n    validateStatus = _propertyValidator[\"default\"].validateStatus,\n    validatePrice = _propertyValidator[\"default\"].validatePrice; // Auth routes\n\nvar authBaseUrl = '/api/v1/auth';\nrouter.post(\"\".concat(authBaseUrl, \"/signup\"), validateSignUp, userExists, createAccount);\nrouter.post(\"\".concat(authBaseUrl, \"/login\"), validateLogin, loginUser); // Property routes\n\nvar propertyBaseUrl = '/api/v1/property';\nrouter.post(\"\".concat(propertyBaseUrl), isTokenValid, isAgent, validateProperty, createPropertyAd);\nrouter.patch(\"\".concat(propertyBaseUrl, \"/:propertyId/status\"), isTokenValid, isAgent, isPropertyExist, validateStatus, updatePropertyAdStatus);\nrouter.patch(\"\".concat(propertyBaseUrl, \"/:propertyId/price\"), isTokenValid, isAgent, isPropertyExist, validatePrice, updatePropertyAdPrice);\nrouter.get(\"\".concat(propertyBaseUrl), isTokenValid, getAllPropertys);\nrouter.get(\"\".concat(propertyBaseUrl, \"/:propertyId\"), isTokenValid, getAProperty);\nrouter.get(\"\".concat(propertyBaseUrl, \"/getByType/:propertyType\"), isTokenValid, getPropertysByType);\nrouter[\"delete\"](\"\".concat(propertyBaseUrl, \"/:propertyId\"), isTokenValid, isAgent, deletePropertyAd);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJjcmVhdGVBY2NvdW50IiwiVXNlckNvbnRyb2xsZXIiLCJsb2dpblVzZXIiLCJ2YWxpZGF0ZVNpZ25VcCIsIkF1dGhWYWxpZGF0b3IiLCJ1c2VyRXhpc3RzIiwidmFsaWRhdGVMb2dpbiIsImlzVG9rZW5WYWxpZCIsImlzQWdlbnQiLCJjcmVhdGVQcm9wZXJ0eUFkIiwiUHJvcGVydHlDb250cm9sbGVyIiwidXBkYXRlUHJvcGVydHlBZFN0YXR1cyIsInVwZGF0ZVByb3BlcnR5QWRQcmljZSIsImdldEFQcm9wZXJ0eSIsImdldEFsbFByb3BlcnR5cyIsImRlbGV0ZVByb3BlcnR5QWQiLCJnZXRQcm9wZXJ0eXNCeVR5cGUiLCJ2YWxpZGF0ZVByb3BlcnR5IiwiUHJvcGVydHlWYWxpZGF0b3IiLCJpc1Byb3BlcnR5RXhpc3QiLCJ2YWxpZGF0ZVN0YXR1cyIsInZhbGlkYXRlUHJpY2UiLCJhdXRoQmFzZVVybCIsInBvc3QiLCJwcm9wZXJ0eUJhc2VVcmwiLCJwYXRjaCIsImdldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmOztJQUVRQyxhLEdBQTZCQywwQixDQUE3QkQsYTtJQUFlRSxTLEdBQWNELDBCLENBQWRDLFM7SUFDZkMsYyxHQUFxRUMseUIsQ0FBckVELGM7SUFBZ0JFLFUsR0FBcURELHlCLENBQXJEQyxVO0lBQVlDLGEsR0FBeUNGLHlCLENBQXpDRSxhO0lBQWVDLFksR0FBMEJILHlCLENBQTFCRyxZO0lBQWNDLE8sR0FBWUoseUIsQ0FBWkksTztJQUN6REMsZ0IsR0FBeUlDLDhCLENBQXpJRCxnQjtJQUFrQkUsc0IsR0FBdUhELDhCLENBQXZIQyxzQjtJQUF3QkMscUIsR0FBK0ZGLDhCLENBQS9GRSxxQjtJQUF1QkMsWSxHQUF3RUgsOEIsQ0FBeEVHLFk7SUFBY0MsZSxHQUEwREosOEIsQ0FBMURJLGU7SUFBaUJDLGdCLEdBQXlDTCw4QixDQUF6Q0ssZ0I7SUFBa0JDLGtCLEdBQXVCTiw4QixDQUF2Qk0sa0I7SUFDbEhDLGdCLEdBQXFFQyw2QixDQUFyRUQsZ0I7SUFBa0JFLGUsR0FBbURELDZCLENBQW5EQyxlO0lBQWlCQyxjLEdBQWtDRiw2QixDQUFsQ0UsYztJQUFnQkMsYSxHQUFrQkgsNkIsQ0FBbEJHLGEsRUFFM0Q7O0FBQ0EsSUFBTUMsV0FBVyxHQUFHLGNBQXBCO0FBQ0F6QixNQUFNLENBQUMwQixJQUFQLFdBQWVELFdBQWYsY0FBcUNuQixjQUFyQyxFQUFxREUsVUFBckQsRUFBaUVMLGFBQWpFO0FBQ0FILE1BQU0sQ0FBQzBCLElBQVAsV0FBZUQsV0FBZixhQUFvQ2hCLGFBQXBDLEVBQW1ESixTQUFuRCxFLENBRUE7O0FBQ0EsSUFBTXNCLGVBQWUsR0FBRyxrQkFBeEI7QUFDQTNCLE1BQU0sQ0FBQzBCLElBQVAsV0FBZUMsZUFBZixHQUFrQ2pCLFlBQWxDLEVBQWdEQyxPQUFoRCxFQUF5RFMsZ0JBQXpELEVBQTJFUixnQkFBM0U7QUFDQVosTUFBTSxDQUFDNEIsS0FBUCxXQUFnQkQsZUFBaEIsMEJBQXNEakIsWUFBdEQsRUFBb0VDLE9BQXBFLEVBQTZFVyxlQUE3RSxFQUE4RkMsY0FBOUYsRUFBOEdULHNCQUE5RztBQUNBZCxNQUFNLENBQUM0QixLQUFQLFdBQWdCRCxlQUFoQix5QkFBcURqQixZQUFyRCxFQUFtRUMsT0FBbkUsRUFBNEVXLGVBQTVFLEVBQTZGRSxhQUE3RixFQUE0R1QscUJBQTVHO0FBQ0FmLE1BQU0sQ0FBQzZCLEdBQVAsV0FBY0YsZUFBZCxHQUFpQ2pCLFlBQWpDLEVBQStDTyxlQUEvQztBQUNBakIsTUFBTSxDQUFDNkIsR0FBUCxXQUFjRixlQUFkLG1CQUE2Q2pCLFlBQTdDLEVBQTJETSxZQUEzRDtBQUNBaEIsTUFBTSxDQUFDNkIsR0FBUCxXQUFjRixlQUFkLCtCQUF5RGpCLFlBQXpELEVBQXVFUyxrQkFBdkU7QUFDQW5CLE1BQU0sVUFBTixXQUFpQjJCLGVBQWpCLG1CQUFnRGpCLFlBQWhELEVBQThEQyxPQUE5RCxFQUF1RU8sZ0JBQXZFO2VBRWVsQixNIiwic291cmNlUm9vdCI6Ii9ob21lL2djaGlsaWUvRGVza3RvcC9Qcm9wZXJ0eVByby1saXRlL2FwcC9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBVc2VyQ29udHJvbGxlciBmcm9tICcuLi9jb250cm9sbGVycy91c2VyQ29udHJvbGxlcic7XG5pbXBvcnQgQXV0aFZhbGlkYXRvciBmcm9tICcuLi9taWRkbGV3YXJlcy9hdXRoVmFsaWRhdG9yJztcbmltcG9ydCBQcm9wZXJ0eUNvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvcHJvcGVydHlDb250cm9sbGVyJztcbmltcG9ydCBQcm9wZXJ0eVZhbGlkYXRvciBmcm9tICcuLi9taWRkbGV3YXJlcy9wcm9wZXJ0eVZhbGlkYXRvcidcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgeyBjcmVhdGVBY2NvdW50LCBsb2dpblVzZXIgfSA9IFVzZXJDb250cm9sbGVyO1xuY29uc3QgeyB2YWxpZGF0ZVNpZ25VcCwgdXNlckV4aXN0cywgdmFsaWRhdGVMb2dpbiwgaXNUb2tlblZhbGlkLCBpc0FnZW50IH0gPSBBdXRoVmFsaWRhdG9yO1xuY29uc3QgeyBjcmVhdGVQcm9wZXJ0eUFkLCB1cGRhdGVQcm9wZXJ0eUFkU3RhdHVzLCB1cGRhdGVQcm9wZXJ0eUFkUHJpY2UsIGdldEFQcm9wZXJ0eSwgZ2V0QWxsUHJvcGVydHlzLCBkZWxldGVQcm9wZXJ0eUFkLCBnZXRQcm9wZXJ0eXNCeVR5cGUgfSA9IFByb3BlcnR5Q29udHJvbGxlcjtcbmNvbnN0IHsgdmFsaWRhdGVQcm9wZXJ0eSwgaXNQcm9wZXJ0eUV4aXN0LCB2YWxpZGF0ZVN0YXR1cywgdmFsaWRhdGVQcmljZSB9ID0gUHJvcGVydHlWYWxpZGF0b3I7XG5cbi8vIEF1dGggcm91dGVzXG5jb25zdCBhdXRoQmFzZVVybCA9ICcvYXBpL3YxL2F1dGgnO1xucm91dGVyLnBvc3QoYCR7YXV0aEJhc2VVcmx9L3NpZ251cGAsIHZhbGlkYXRlU2lnblVwLCB1c2VyRXhpc3RzLCBjcmVhdGVBY2NvdW50KTtcbnJvdXRlci5wb3N0KGAke2F1dGhCYXNlVXJsfS9sb2dpbmAsIHZhbGlkYXRlTG9naW4sIGxvZ2luVXNlcik7XG5cbi8vIFByb3BlcnR5IHJvdXRlc1xuY29uc3QgcHJvcGVydHlCYXNlVXJsID0gJy9hcGkvdjEvcHJvcGVydHknO1xucm91dGVyLnBvc3QoYCR7cHJvcGVydHlCYXNlVXJsfWAsIGlzVG9rZW5WYWxpZCwgaXNBZ2VudCwgdmFsaWRhdGVQcm9wZXJ0eSwgY3JlYXRlUHJvcGVydHlBZCk7XG5yb3V0ZXIucGF0Y2goYCR7cHJvcGVydHlCYXNlVXJsfS86cHJvcGVydHlJZC9zdGF0dXNgLCBpc1Rva2VuVmFsaWQsIGlzQWdlbnQsIGlzUHJvcGVydHlFeGlzdCwgdmFsaWRhdGVTdGF0dXMsIHVwZGF0ZVByb3BlcnR5QWRTdGF0dXMpO1xucm91dGVyLnBhdGNoKGAke3Byb3BlcnR5QmFzZVVybH0vOnByb3BlcnR5SWQvcHJpY2VgLCBpc1Rva2VuVmFsaWQsIGlzQWdlbnQsIGlzUHJvcGVydHlFeGlzdCwgdmFsaWRhdGVQcmljZSwgdXBkYXRlUHJvcGVydHlBZFByaWNlKTtcbnJvdXRlci5nZXQoYCR7cHJvcGVydHlCYXNlVXJsfWAsIGlzVG9rZW5WYWxpZCwgZ2V0QWxsUHJvcGVydHlzKTtcbnJvdXRlci5nZXQoYCR7cHJvcGVydHlCYXNlVXJsfS86cHJvcGVydHlJZGAsIGlzVG9rZW5WYWxpZCwgZ2V0QVByb3BlcnR5KTtcbnJvdXRlci5nZXQoYCR7cHJvcGVydHlCYXNlVXJsfS9nZXRCeVR5cGUvOnByb3BlcnR5VHlwZWAsIGlzVG9rZW5WYWxpZCwgZ2V0UHJvcGVydHlzQnlUeXBlKTtcbnJvdXRlci5kZWxldGUoYCR7cHJvcGVydHlCYXNlVXJsfS86cHJvcGVydHlJZGAsIGlzVG9rZW5WYWxpZCwgaXNBZ2VudCwgZGVsZXRlUHJvcGVydHlBZCk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "createAccount",
        "UserController",
        "loginUser",
        "validateSignUp",
        "AuthValidator",
        "userExists",
        "validateLogin",
        "isTokenValid",
        "isAgent",
        "createPropertyAd",
        "PropertyController",
        "updatePropertyAdStatus",
        "updatePropertyAdPrice",
        "getAProperty",
        "getAllPropertys",
        "deletePropertyAd",
        "getPropertysByType",
        "validateProperty",
        "PropertyValidator",
        "isPropertyExist",
        "validateStatus",
        "validatePrice",
        "authBaseUrl",
        "post",
        "propertyBaseUrl",
        "patch",
        "get"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;IAEQC,a,GAA6BC,0B,CAA7BD,a;IAAeE,S,GAAcD,0B,CAAdC,S;IACfC,c,GAAqEC,yB,CAArED,c;IAAgBE,U,GAAqDD,yB,CAArDC,U;IAAYC,a,GAAyCF,yB,CAAzCE,a;IAAeC,Y,GAA0BH,yB,CAA1BG,Y;IAAcC,O,GAAYJ,yB,CAAZI,O;IACzDC,gB,GAAyIC,8B,CAAzID,gB;IAAkBE,sB,GAAuHD,8B,CAAvHC,sB;IAAwBC,qB,GAA+FF,8B,CAA/FE,qB;IAAuBC,Y,GAAwEH,8B,CAAxEG,Y;IAAcC,e,GAA0DJ,8B,CAA1DI,e;IAAiBC,gB,GAAyCL,8B,CAAzCK,gB;IAAkBC,kB,GAAuBN,8B,CAAvBM,kB;IAClHC,gB,GAAqEC,6B,CAArED,gB;IAAkBE,e,GAAmDD,6B,CAAnDC,e;IAAiBC,c,GAAkCF,6B,CAAlCE,c;IAAgBC,a,GAAkBH,6B,CAAlBG,a,EAE3D;;AACA,IAAMC,WAAW,GAAG,cAApB;AACAzB,MAAM,CAAC0B,IAAP,WAAeD,WAAf,cAAqCnB,cAArC,EAAqDE,UAArD,EAAiEL,aAAjE;AACAH,MAAM,CAAC0B,IAAP,WAAeD,WAAf,aAAoChB,aAApC,EAAmDJ,SAAnD,E,CAEA;;AACA,IAAMsB,eAAe,GAAG,kBAAxB;AACA3B,MAAM,CAAC0B,IAAP,WAAeC,eAAf,GAAkCjB,YAAlC,EAAgDC,OAAhD,EAAyDS,gBAAzD,EAA2ER,gBAA3E;AACAZ,MAAM,CAAC4B,KAAP,WAAgBD,eAAhB,0BAAsDjB,YAAtD,EAAoEC,OAApE,EAA6EW,eAA7E,EAA8FC,cAA9F,EAA8GT,sBAA9G;AACAd,MAAM,CAAC4B,KAAP,WAAgBD,eAAhB,yBAAqDjB,YAArD,EAAmEC,OAAnE,EAA4EW,eAA5E,EAA6FE,aAA7F,EAA4GT,qBAA5G;AACAf,MAAM,CAAC6B,GAAP,WAAcF,eAAd,GAAiCjB,YAAjC,EAA+CO,eAA/C;AACAjB,MAAM,CAAC6B,GAAP,WAAcF,eAAd,mBAA6CjB,YAA7C,EAA2DM,YAA3D;AACAhB,MAAM,CAAC6B,GAAP,WAAcF,eAAd,+BAAyDjB,YAAzD,EAAuES,kBAAvE;AACAnB,MAAM,UAAN,WAAiB2B,eAAjB,mBAAgDjB,YAAhD,EAA8DC,OAA9D,EAAuEO,gBAAvE;eAEelB,M",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/routes",
      "sourcesContent": [
        "import express from 'express';\nimport UserController from '../controllers/userController';\nimport AuthValidator from '../middlewares/authValidator';\nimport PropertyController from '../controllers/propertyController';\nimport PropertyValidator from '../middlewares/propertyValidator'\n\nconst router = express.Router();\n\nconst { createAccount, loginUser } = UserController;\nconst { validateSignUp, userExists, validateLogin, isTokenValid, isAgent } = AuthValidator;\nconst { createPropertyAd, updatePropertyAdStatus, updatePropertyAdPrice, getAProperty, getAllPropertys, deletePropertyAd, getPropertysByType } = PropertyController;\nconst { validateProperty, isPropertyExist, validateStatus, validatePrice } = PropertyValidator;\n\n// Auth routes\nconst authBaseUrl = '/api/v1/auth';\nrouter.post(`${authBaseUrl}/signup`, validateSignUp, userExists, createAccount);\nrouter.post(`${authBaseUrl}/login`, validateLogin, loginUser);\n\n// Property routes\nconst propertyBaseUrl = '/api/v1/property';\nrouter.post(`${propertyBaseUrl}`, isTokenValid, isAgent, validateProperty, createPropertyAd);\nrouter.patch(`${propertyBaseUrl}/:propertyId/status`, isTokenValid, isAgent, isPropertyExist, validateStatus, updatePropertyAdStatus);\nrouter.patch(`${propertyBaseUrl}/:propertyId/price`, isTokenValid, isAgent, isPropertyExist, validatePrice, updatePropertyAdPrice);\nrouter.get(`${propertyBaseUrl}`, isTokenValid, getAllPropertys);\nrouter.get(`${propertyBaseUrl}/:propertyId`, isTokenValid, getAProperty);\nrouter.get(`${propertyBaseUrl}/getByType/:propertyType`, isTokenValid, getPropertysByType);\nrouter.delete(`${propertyBaseUrl}/:propertyId`, isTokenValid, isAgent, deletePropertyAd);\n\nexport default router;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562151671760
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/controllers/userController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers/userController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers/userController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers/userController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers",
        "sourceFileName": "userController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _passwordHash = _interopRequireDefault(require(\"password-hash\"));\n\nvar _shortid = _interopRequireDefault(require(\"shortid\"));\n\nvar _auth = _interopRequireDefault(require(\"../helpers/auth\"));\n\nvar _users = _interopRequireDefault(require(\"../models/users\"));\n\nvar generateToken = _auth[\"default\"].generateToken;\n\nvar UserController =\n/*#__PURE__*/\nfunction () {\n  function UserController() {\n    (0, _classCallCheck2[\"default\"])(this, UserController);\n  }\n\n  (0, _createClass2[\"default\"])(UserController, null, [{\n    key: \"createAccount\",\n\n    /**\n     *\n     * @param {object} req - request\n     * @param {object} res - response\n     */\n    value: function () {\n      var _createAccount = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee(req, res) {\n        var isAgent, id, _req$body, firstName, lastName, email, phone, password, address, hashedpassword, user, token;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                isAgent = false;\n                id = _shortid[\"default\"].generate();\n                _context.prev = 2;\n                _req$body = req.body, firstName = _req$body.firstName, lastName = _req$body.lastName, email = _req$body.email, phone = _req$body.phone, password = _req$body.password, address = _req$body.address;\n                hashedpassword = _passwordHash[\"default\"].generate(password);\n                user = {\n                  id: id,\n                  firstName: firstName,\n                  lastName: lastName,\n                  email: email,\n                  phone: phone,\n                  address: address,\n                  isAgent: isAgent,\n                  password: hashedpassword\n                };\n\n                _users[\"default\"].push(user);\n\n                _context.next = 9;\n                return generateToken({\n                  id: id,\n                  isAgent: isAgent\n                });\n\n              case 9:\n                token = _context.sent;\n                return _context.abrupt(\"return\", res.status(201).json({\n                  status: 201,\n                  data: [{\n                    token: token,\n                    user: user\n                  }]\n                }));\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](2);\n                return _context.abrupt(\"return\", res.status(500).json({\n                  error: true,\n                  message: 'Internal Server error'\n                }));\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 13]]);\n      }));\n\n      function createAccount(_x, _x2) {\n        return _createAccount.apply(this, arguments);\n      }\n\n      return createAccount;\n    }()\n    /**\n    *\n    * @param {object} req - request\n    * @param {object} res - response\n    */\n\n  }, {\n    key: \"loginUser\",\n    value: function () {\n      var _loginUser = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(req, res) {\n        var _req$body2, email, password, user, id, isAgent, token;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n                _context2.prev = 1;\n                user = _users[\"default\"].find(function (usr) {\n                  return usr.email === email && _passwordHash[\"default\"].verify(password, usr.password);\n                });\n\n                if (!(user && user !== undefined)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                id = user.id, isAgent = user.isAgent;\n                _context2.next = 7;\n                return generateToken({\n                  id: id,\n                  isAgent: isAgent\n                });\n\n              case 7:\n                token = _context2.sent;\n                return _context2.abrupt(\"return\", res.status(200).json({\n                  data: [{\n                    token: token,\n                    user: user\n                  }],\n                  message: 'Login successful'\n                }));\n\n              case 9:\n                return _context2.abrupt(\"return\", res.status(401).json({\n                  error: true,\n                  message: 'Invalid email or password'\n                }));\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](1);\n                return _context2.abrupt(\"return\", res.status(500).json({\n                  error: true,\n                  message: 'Internal server error'\n                }));\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 12]]);\n      }));\n\n      function loginUser(_x3, _x4) {\n        return _loginUser.apply(this, arguments);\n      }\n\n      return loginUser;\n    }()\n  }]);\n  return UserController;\n}();\n\nvar _default = UserController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImdlbmVyYXRlVG9rZW4iLCJBdXRoIiwiVXNlckNvbnRyb2xsZXIiLCJyZXEiLCJyZXMiLCJpc0FnZW50IiwiaWQiLCJzaG9ydElkIiwiZ2VuZXJhdGUiLCJib2R5IiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJlbWFpbCIsInBob25lIiwicGFzc3dvcmQiLCJhZGRyZXNzIiwiaGFzaGVkcGFzc3dvcmQiLCJwYXNzd29yZEhhc2giLCJ1c2VyIiwidXNlck1vZGVsIiwicHVzaCIsInRva2VuIiwic3RhdHVzIiwianNvbiIsImRhdGEiLCJlcnJvciIsIm1lc3NhZ2UiLCJmaW5kIiwidXNyIiwidmVyaWZ5IiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztJQUVRQSxhLEdBQWtCQyxnQixDQUFsQkQsYTs7SUFFRkUsYzs7Ozs7Ozs7OztBQUNKOzs7Ozs7OztvREFLMkJDLEcsRUFBS0MsRzs7Ozs7OztBQUN4QkMsZ0JBQUFBLE8sR0FBVSxLO0FBQ1ZDLGdCQUFBQSxFLEdBQUtDLG9CQUFRQyxRQUFSLEU7OzRCQUV3REwsR0FBRyxDQUFDTSxJLEVBQTdEQyxTLGFBQUFBLFMsRUFBV0MsUSxhQUFBQSxRLEVBQVVDLEssYUFBQUEsSyxFQUFPQyxLLGFBQUFBLEssRUFBT0MsUSxhQUFBQSxRLEVBQVVDLE8sYUFBQUEsTztBQUMvQ0MsZ0JBQUFBLGMsR0FBaUJDLHlCQUFhVCxRQUFiLENBQXNCTSxRQUF0QixDO0FBQ2pCSSxnQkFBQUEsSSxHQUFPO0FBQ1haLGtCQUFBQSxFQUFFLEVBQUZBLEVBRFc7QUFDUEksa0JBQUFBLFNBQVMsRUFBVEEsU0FETztBQUNJQyxrQkFBQUEsUUFBUSxFQUFSQSxRQURKO0FBQ2NDLGtCQUFBQSxLQUFLLEVBQUxBLEtBRGQ7QUFDcUJDLGtCQUFBQSxLQUFLLEVBQUxBLEtBRHJCO0FBQzRCRSxrQkFBQUEsT0FBTyxFQUFQQSxPQUQ1QjtBQUNxQ1Ysa0JBQUFBLE9BQU8sRUFBUEEsT0FEckM7QUFDOENTLGtCQUFBQSxRQUFRLEVBQUVFO0FBRHhELGlCOztBQUdiRyxrQ0FBVUMsSUFBVixDQUFlRixJQUFmOzs7dUJBQ29CbEIsYUFBYSxDQUFDO0FBQUVNLGtCQUFBQSxFQUFFLEVBQUZBLEVBQUY7QUFBTUQsa0JBQUFBLE9BQU8sRUFBUEE7QUFBTixpQkFBRCxDOzs7QUFBM0JnQixnQkFBQUEsSztpREFDQ2pCLEdBQUcsQ0FBQ2tCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMxQkQsa0JBQUFBLE1BQU0sRUFBRSxHQURrQjtBQUUxQkUsa0JBQUFBLElBQUksRUFBRSxDQUFDO0FBQ0xILG9CQUFBQSxLQUFLLEVBQUxBLEtBREs7QUFDRUgsb0JBQUFBLElBQUksRUFBSkE7QUFERixtQkFBRDtBQUZvQixpQkFBckIsQzs7Ozs7aURBT0FkLEdBQUcsQ0FBQ2tCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFRSxrQkFBQUEsS0FBSyxFQUFFLElBQVQ7QUFBZUMsa0JBQUFBLE9BQU8sRUFBRTtBQUF4QixpQkFBckIsQzs7Ozs7Ozs7Ozs7Ozs7OztBQUlYOzs7Ozs7Ozs7OztxREFLc0J2QixHLEVBQUtDLEc7Ozs7Ozs7NkJBQ0NELEdBQUcsQ0FBQ00sSSxFQUF4QkcsSyxjQUFBQSxLLEVBQU9FLFEsY0FBQUEsUTs7QUFFUEksZ0JBQUFBLEksR0FBT0Msa0JBQVVRLElBQVYsQ0FBZSxVQUFBQyxHQUFHO0FBQUEseUJBQUtBLEdBQUcsQ0FBQ2hCLEtBQUosS0FBY0EsS0FBZixJQUM3QksseUJBQWFZLE1BQWIsQ0FBb0JmLFFBQXBCLEVBQThCYyxHQUFHLENBQUNkLFFBQWxDLENBRHlCO0FBQUEsaUJBQWxCLEM7O3NCQUVUSSxJQUFJLElBQUlBLElBQUksS0FBS1ksUzs7Ozs7QUFDWHhCLGdCQUFBQSxFLEdBQWdCWSxJLENBQWhCWixFLEVBQUlELE8sR0FBWWEsSSxDQUFaYixPOzt1QkFDUUwsYUFBYSxDQUFDO0FBQUVNLGtCQUFBQSxFQUFFLEVBQUZBLEVBQUY7QUFBTUQsa0JBQUFBLE9BQU8sRUFBUEE7QUFBTixpQkFBRCxDOzs7QUFBM0JnQixnQkFBQUEsSztrREFDQ2pCLEdBQUcsQ0FBQ2tCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFQyxrQkFBQUEsSUFBSSxFQUFFLENBQUM7QUFBRUgsb0JBQUFBLEtBQUssRUFBTEEsS0FBRjtBQUFTSCxvQkFBQUEsSUFBSSxFQUFKQTtBQUFULG1CQUFELENBQVI7QUFBMkJRLGtCQUFBQSxPQUFPLEVBQUU7QUFBcEMsaUJBQXJCLEM7OztrREFFRnRCLEdBQUcsQ0FBQ2tCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFRSxrQkFBQUEsS0FBSyxFQUFFLElBQVQ7QUFBZUMsa0JBQUFBLE9BQU8sRUFBRTtBQUF4QixpQkFBckIsQzs7Ozs7a0RBRUF0QixHQUFHLENBQUNrQixNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRUUsa0JBQUFBLEtBQUssRUFBRSxJQUFUO0FBQWVDLGtCQUFBQSxPQUFPLEVBQUU7QUFBeEIsaUJBQXJCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBTUl4QixjIiwic291cmNlUm9vdCI6Ii9ob21lL2djaGlsaWUvRGVza3RvcC9Qcm9wZXJ0eVByby1saXRlL2FwcC9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXNzd29yZEhhc2ggZnJvbSAncGFzc3dvcmQtaGFzaCc7XG5pbXBvcnQgc2hvcnRJZCBmcm9tICdzaG9ydGlkJztcbmltcG9ydCBBdXRoIGZyb20gJy4uL2hlbHBlcnMvYXV0aCc7XG5pbXBvcnQgdXNlck1vZGVsIGZyb20gJy4uL21vZGVscy91c2Vycyc7XG5cbmNvbnN0IHsgZ2VuZXJhdGVUb2tlbiB9ID0gQXV0aDtcblxuY2xhc3MgVXNlckNvbnRyb2xsZXIge1xuICAvKipcbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcSAtIHJlcXVlc3RcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcyAtIHJlc3BvbnNlXG4gICAqL1xuICBzdGF0aWMgYXN5bmMgY3JlYXRlQWNjb3VudChyZXEsIHJlcykge1xuICAgIGNvbnN0IGlzQWdlbnQgPSBmYWxzZTtcbiAgICBjb25zdCBpZCA9IHNob3J0SWQuZ2VuZXJhdGUoKTtcbiAgICB0cnkge1xuICAgICAgY29uc3QgeyBmaXJzdE5hbWUsIGxhc3ROYW1lLCBlbWFpbCwgcGhvbmUsIHBhc3N3b3JkLCBhZGRyZXNzIH0gPSByZXEuYm9keTtcbiAgICAgIGNvbnN0IGhhc2hlZHBhc3N3b3JkID0gcGFzc3dvcmRIYXNoLmdlbmVyYXRlKHBhc3N3b3JkKTtcbiAgICAgIGNvbnN0IHVzZXIgPSB7XG4gICAgICAgIGlkLCBmaXJzdE5hbWUsIGxhc3ROYW1lLCBlbWFpbCwgcGhvbmUsIGFkZHJlc3MsIGlzQWdlbnQsIHBhc3N3b3JkOiBoYXNoZWRwYXNzd29yZFxuICAgICAgfTtcbiAgICAgIHVzZXJNb2RlbC5wdXNoKHVzZXIpO1xuICAgICAgY29uc3QgdG9rZW4gPSBhd2FpdCBnZW5lcmF0ZVRva2VuKHsgaWQsIGlzQWdlbnQgfSk7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLmpzb24oe1xuICAgICAgICBzdGF0dXM6IDIwMSxcbiAgICAgICAgZGF0YTogW3tcbiAgICAgICAgICB0b2tlbiwgdXNlclxuICAgICAgICB9XSxcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IHRydWUsIG1lc3NhZ2U6ICdJbnRlcm5hbCBTZXJ2ZXIgZXJyb3InIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAqXG4gICogQHBhcmFtIHtvYmplY3R9IHJlcSAtIHJlcXVlc3RcbiAgKiBAcGFyYW0ge29iamVjdH0gcmVzIC0gcmVzcG9uc2VcbiAgKi9cbiBzdGF0aWMgYXN5bmMgbG9naW5Vc2VyKHJlcSwgcmVzKSB7XG4gIGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcbiAgdHJ5IHtcbiAgICBjb25zdCB1c2VyID0gdXNlck1vZGVsLmZpbmQodXNyID0+ICh1c3IuZW1haWwgPT09IGVtYWlsKVxuICAgICAgJiYgKHBhc3N3b3JkSGFzaC52ZXJpZnkocGFzc3dvcmQsIHVzci5wYXNzd29yZCkpKTtcbiAgICBpZiAodXNlciAmJiB1c2VyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnN0IHsgaWQsIGlzQWdlbnQgfSA9IHVzZXI7XG4gICAgICBjb25zdCB0b2tlbiA9IGF3YWl0IGdlbmVyYXRlVG9rZW4oeyBpZCwgaXNBZ2VudCB9KTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IGRhdGE6IFt7IHRva2VuLCB1c2VyIH1dLCBtZXNzYWdlOiAnTG9naW4gc3VjY2Vzc2Z1bCcgfSk7XG4gICAgfVxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yOiB0cnVlLCBtZXNzYWdlOiAnSW52YWxpZCBlbWFpbCBvciBwYXNzd29yZCcgfSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiB0cnVlLCBtZXNzYWdlOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9KTtcbiAgfVxufVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFVzZXJDb250cm9sbGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "userController.js"
      ],
      "names": [
        "generateToken",
        "Auth",
        "UserController",
        "req",
        "res",
        "isAgent",
        "id",
        "shortId",
        "generate",
        "body",
        "firstName",
        "lastName",
        "email",
        "phone",
        "password",
        "address",
        "hashedpassword",
        "passwordHash",
        "user",
        "userModel",
        "push",
        "token",
        "status",
        "json",
        "data",
        "error",
        "message",
        "find",
        "usr",
        "verify",
        "undefined"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;IAEQA,a,GAAkBC,gB,CAAlBD,a;;IAEFE,c;;;;;;;;;;AACJ;;;;;;;;oDAK2BC,G,EAAKC,G;;;;;;;AACxBC,gBAAAA,O,GAAU,K;AACVC,gBAAAA,E,GAAKC,oBAAQC,QAAR,E;;4BAEwDL,GAAG,CAACM,I,EAA7DC,S,aAAAA,S,EAAWC,Q,aAAAA,Q,EAAUC,K,aAAAA,K,EAAOC,K,aAAAA,K,EAAOC,Q,aAAAA,Q,EAAUC,O,aAAAA,O;AAC/CC,gBAAAA,c,GAAiBC,yBAAaT,QAAb,CAAsBM,QAAtB,C;AACjBI,gBAAAA,I,GAAO;AACXZ,kBAAAA,EAAE,EAAFA,EADW;AACPI,kBAAAA,SAAS,EAATA,SADO;AACIC,kBAAAA,QAAQ,EAARA,QADJ;AACcC,kBAAAA,KAAK,EAALA,KADd;AACqBC,kBAAAA,KAAK,EAALA,KADrB;AAC4BE,kBAAAA,OAAO,EAAPA,OAD5B;AACqCV,kBAAAA,OAAO,EAAPA,OADrC;AAC8CS,kBAAAA,QAAQ,EAAEE;AADxD,iB;;AAGbG,kCAAUC,IAAV,CAAeF,IAAf;;;uBACoBlB,aAAa,CAAC;AAAEM,kBAAAA,EAAE,EAAFA,EAAF;AAAMD,kBAAAA,OAAO,EAAPA;AAAN,iBAAD,C;;;AAA3BgB,gBAAAA,K;iDACCjB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAAA,MAAM,EAAE,GADkB;AAE1BE,kBAAAA,IAAI,EAAE,CAAC;AACLH,oBAAAA,KAAK,EAALA,KADK;AACEH,oBAAAA,IAAI,EAAJA;AADF,mBAAD;AAFoB,iBAArB,C;;;;;iDAOAd,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,kBAAAA,KAAK,EAAE,IAAT;AAAeC,kBAAAA,OAAO,EAAE;AAAxB,iBAArB,C;;;;;;;;;;;;;;;;AAIX;;;;;;;;;;;qDAKsBvB,G,EAAKC,G;;;;;;;6BACCD,GAAG,CAACM,I,EAAxBG,K,cAAAA,K,EAAOE,Q,cAAAA,Q;;AAEPI,gBAAAA,I,GAAOC,kBAAUQ,IAAV,CAAe,UAAAC,GAAG;AAAA,yBAAKA,GAAG,CAAChB,KAAJ,KAAcA,KAAf,IAC7BK,yBAAaY,MAAb,CAAoBf,QAApB,EAA8Bc,GAAG,CAACd,QAAlC,CADyB;AAAA,iBAAlB,C;;sBAETI,IAAI,IAAIA,IAAI,KAAKY,S;;;;;AACXxB,gBAAAA,E,GAAgBY,I,CAAhBZ,E,EAAID,O,GAAYa,I,CAAZb,O;;uBACQL,aAAa,CAAC;AAAEM,kBAAAA,EAAE,EAAFA,EAAF;AAAMD,kBAAAA,OAAO,EAAPA;AAAN,iBAAD,C;;;AAA3BgB,gBAAAA,K;kDACCjB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,kBAAAA,IAAI,EAAE,CAAC;AAAEH,oBAAAA,KAAK,EAALA,KAAF;AAASH,oBAAAA,IAAI,EAAJA;AAAT,mBAAD,CAAR;AAA2BQ,kBAAAA,OAAO,EAAE;AAApC,iBAArB,C;;;kDAEFtB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,kBAAAA,KAAK,EAAE,IAAT;AAAeC,kBAAAA,OAAO,EAAE;AAAxB,iBAArB,C;;;;;kDAEAtB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,kBAAAA,KAAK,EAAE,IAAT;AAAeC,kBAAAA,OAAO,EAAE;AAAxB,iBAArB,C;;;;;;;;;;;;;;;;;;;;eAMIxB,c",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers",
      "sourcesContent": [
        "import passwordHash from 'password-hash';\nimport shortId from 'shortid';\nimport Auth from '../helpers/auth';\nimport userModel from '../models/users';\n\nconst { generateToken } = Auth;\n\nclass UserController {\n  /**\n   *\n   * @param {object} req - request\n   * @param {object} res - response\n   */\n  static async createAccount(req, res) {\n    const isAgent = false;\n    const id = shortId.generate();\n    try {\n      const { firstName, lastName, email, phone, password, address } = req.body;\n      const hashedpassword = passwordHash.generate(password);\n      const user = {\n        id, firstName, lastName, email, phone, address, isAgent, password: hashedpassword\n      };\n      userModel.push(user);\n      const token = await generateToken({ id, isAgent });\n      return res.status(201).json({\n        status: 201,\n        data: [{\n          token, user\n        }],\n      });\n    } catch (err) {\n      return res.status(500).json({ error: true, message: 'Internal Server error' });\n    }\n  }\n\n  /**\n  *\n  * @param {object} req - request\n  * @param {object} res - response\n  */\n static async loginUser(req, res) {\n  const { email, password } = req.body;\n  try {\n    const user = userModel.find(usr => (usr.email === email)\n      && (passwordHash.verify(password, usr.password)));\n    if (user && user !== undefined) {\n      const { id, isAgent } = user;\n      const token = await generateToken({ id, isAgent });\n      return res.status(200).json({ data: [{ token, user }], message: 'Login successful' });\n    }\n    return res.status(401).json({ error: true, message: 'Invalid email or password' });\n  } catch (err) {\n    return res.status(500).json({ error: true, message: 'Internal server error' });\n  }\n}\n\n}\n\nexport default UserController;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562153964334
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/helpers/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\n_dotenv[\"default\"].config();\n\nvar SECRET = process.env.SECRET || 'Secret';\n/**\n * Handles access token generation and verification\n */\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    (0, _classCallCheck2[\"default\"])(this, Auth);\n  }\n\n  (0, _createClass2[\"default\"])(Auth, null, [{\n    key: \"generateToken\",\n\n    /**\n     * @description Handles access token generation\n     * @param {object} payload - The user credential {id, isAgent}\n     * @return {string} access token\n     */\n    value: function generateToken(payload) {\n      return _jsonwebtoken[\"default\"].sign(payload, SECRET, {\n        expiresIn: '24h'\n      });\n    }\n    /**\n    * @description Decodes the access token\n    * @param {string} token - The access token\n    * @returns {object} payload - the decoded access token\n    */\n\n  }, {\n    key: \"verifyToken\",\n    value: function verifyToken(token) {\n      return _jsonwebtoken[\"default\"].verify(token, SECRET);\n    }\n  }]);\n  return Auth;\n}();\n\nvar _default = Auth;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiZG90ZW52IiwiY29uZmlnIiwiU0VDUkVUIiwicHJvY2VzcyIsImVudiIsIkF1dGgiLCJwYXlsb2FkIiwiand0Iiwic2lnbiIsImV4cGlyZXNJbiIsInRva2VuIiwidmVyaWZ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUFBLG1CQUFPQyxNQUFQOztBQUNBLElBQU1DLE1BQU0sR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLE1BQVosSUFBc0IsUUFBckM7QUFDQTs7OztJQUdNRyxJOzs7Ozs7Ozs7O0FBQ0Y7Ozs7O2tDQUtxQkMsTyxFQUFTO0FBQzFCLGFBQU9DLHlCQUFJQyxJQUFKLENBQVNGLE9BQVQsRUFBa0JKLE1BQWxCLEVBQTBCO0FBQUVPLFFBQUFBLFNBQVMsRUFBRTtBQUFiLE9BQTFCLENBQVA7QUFFSDtBQUVDOzs7Ozs7OztnQ0FLZUMsSyxFQUFPO0FBQ3RCLGFBQU9ILHlCQUFJSSxNQUFKLENBQVdELEtBQVgsRUFBa0JSLE1BQWxCLENBQVA7QUFDSDs7Ozs7ZUFHWUcsSSIsInNvdXJjZVJvb3QiOiIvaG9tZS9nY2hpbGllL0Rlc2t0b3AvUHJvcGVydHlQcm8tbGl0ZS9hcHAvaGVscGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JztcblxuZG90ZW52LmNvbmZpZygpO1xuY29uc3QgU0VDUkVUID0gcHJvY2Vzcy5lbnYuU0VDUkVUIHx8ICdTZWNyZXQnO1xuLyoqXG4gKiBIYW5kbGVzIGFjY2VzcyB0b2tlbiBnZW5lcmF0aW9uIGFuZCB2ZXJpZmljYXRpb25cbiAqL1xuY2xhc3MgQXV0aCB7XG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uIEhhbmRsZXMgYWNjZXNzIHRva2VuIGdlbmVyYXRpb25cbiAgICAgKiBAcGFyYW0ge29iamVjdH0gcGF5bG9hZCAtIFRoZSB1c2VyIGNyZWRlbnRpYWwge2lkLCBpc0FnZW50fVxuICAgICAqIEByZXR1cm4ge3N0cmluZ30gYWNjZXNzIHRva2VuXG4gICAgICovXG4gICAgc3RhdGljIGdlbmVyYXRlVG9rZW4ocGF5bG9hZCkge1xuICAgICAgICByZXR1cm4gand0LnNpZ24ocGF5bG9hZCwgU0VDUkVULCB7IGV4cGlyZXNJbjogJzI0aCcgfSk7XG5cbiAgICB9XG5cbiAgICAgIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gRGVjb2RlcyB0aGUgYWNjZXNzIHRva2VuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0b2tlbiAtIFRoZSBhY2Nlc3MgdG9rZW5cbiAgICogQHJldHVybnMge29iamVjdH0gcGF5bG9hZCAtIHRoZSBkZWNvZGVkIGFjY2VzcyB0b2tlblxuICAgKi9cbiAgc3RhdGljIHZlcmlmeVRva2VuKHRva2VuKSB7XG4gICAgICByZXR1cm4gand0LnZlcmlmeSh0b2tlbiwgU0VDUkVUKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBdXRoOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "dotenv",
        "config",
        "SECRET",
        "process",
        "env",
        "Auth",
        "payload",
        "jwt",
        "sign",
        "expiresIn",
        "token",
        "verify"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AAEAA,mBAAOC,MAAP;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYF,MAAZ,IAAsB,QAArC;AACA;;;;IAGMG,I;;;;;;;;;;AACF;;;;;kCAKqBC,O,EAAS;AAC1B,aAAOC,yBAAIC,IAAJ,CAASF,OAAT,EAAkBJ,MAAlB,EAA0B;AAAEO,QAAAA,SAAS,EAAE;AAAb,OAA1B,CAAP;AAEH;AAEC;;;;;;;;gCAKeC,K,EAAO;AACtB,aAAOH,yBAAII,MAAJ,CAAWD,KAAX,EAAkBR,MAAlB,CAAP;AACH;;;;;eAGYG,I",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport dotenv from 'dotenv';\n\ndotenv.config();\nconst SECRET = process.env.SECRET || 'Secret';\n/**\n * Handles access token generation and verification\n */\nclass Auth {\n    /**\n     * @description Handles access token generation\n     * @param {object} payload - The user credential {id, isAgent}\n     * @return {string} access token\n     */\n    static generateToken(payload) {\n        return jwt.sign(payload, SECRET, { expiresIn: '24h' });\n\n    }\n\n      /**\n   * @description Decodes the access token\n   * @param {string} token - The access token\n   * @returns {object} payload - the decoded access token\n   */\n  static verifyToken(token) {\n      return jwt.verify(token, SECRET);\n  }\n}\n\nexport default Auth;"
      ]
    },
    "sourceType": "script",
    "mtime": 1562151671760
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/models/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/models/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/models/users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/models/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/models",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar UserModel = [{\n  firstname: 'Chinwe',\n  lastname: 'Okonkwo',\n  email: 'agent@gmail.com',\n  password: 'sha1$fc8dc1d2$1$036ea46b75d0017897c09a4022c90787e5287778',\n  phone: '08163446686',\n  address: 'Ikeja GRA',\n  isAgent: true\n}, {\n  firstname: 'John',\n  lastname: 'Doe',\n  email: 'user@gmail.com',\n  password: 'sha1$fc8dc1d2$1$036ea46b75d0017897c09a4022c90787e5287778',\n  phone: '08163446686',\n  address: 'Ikeja GRA',\n  isAgent: false\n}];\nvar _default = UserModel;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbIlVzZXJNb2RlbCIsImZpcnN0bmFtZSIsImxhc3RuYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsInBob25lIiwiYWRkcmVzcyIsImlzQWdlbnQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLFNBQVMsR0FBRyxDQUNkO0FBQ0VDLEVBQUFBLFNBQVMsRUFBRSxRQURiO0FBRUVDLEVBQUFBLFFBQVEsRUFBRSxTQUZaO0FBR0VDLEVBQUFBLEtBQUssRUFBRSxpQkFIVDtBQUlFQyxFQUFBQSxRQUFRLEVBQUUsMERBSlo7QUFLRUMsRUFBQUEsS0FBSyxFQUFFLGFBTFQ7QUFNRUMsRUFBQUEsT0FBTyxFQUFFLFdBTlg7QUFPRUMsRUFBQUEsT0FBTyxFQUFFO0FBUFgsQ0FEYyxFQVVkO0FBQ0VOLEVBQUFBLFNBQVMsRUFBRSxNQURiO0FBRUVDLEVBQUFBLFFBQVEsRUFBRSxLQUZaO0FBR0VDLEVBQUFBLEtBQUssRUFBRSxnQkFIVDtBQUlFQyxFQUFBQSxRQUFRLEVBQUUsMERBSlo7QUFLRUMsRUFBQUEsS0FBSyxFQUFFLGFBTFQ7QUFNRUMsRUFBQUEsT0FBTyxFQUFFLFdBTlg7QUFPRUMsRUFBQUEsT0FBTyxFQUFFO0FBUFgsQ0FWYyxDQUFsQjtlQXFCaUJQLFMiLCJzb3VyY2VSb290IjoiL2hvbWUvZ2NoaWxpZS9EZXNrdG9wL1Byb3BlcnR5UHJvLWxpdGUvYXBwL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFVzZXJNb2RlbCA9IFtcbiAgICB7XG4gICAgICBmaXJzdG5hbWU6ICdDaGlud2UnLFxuICAgICAgbGFzdG5hbWU6ICdPa29ua3dvJyxcbiAgICAgIGVtYWlsOiAnYWdlbnRAZ21haWwuY29tJyxcbiAgICAgIHBhc3N3b3JkOiAnc2hhMSRmYzhkYzFkMiQxJDAzNmVhNDZiNzVkMDAxNzg5N2MwOWE0MDIyYzkwNzg3ZTUyODc3NzgnLFxuICAgICAgcGhvbmU6ICcwODE2MzQ0NjY4NicsXG4gICAgICBhZGRyZXNzOiAnSWtlamEgR1JBJyxcbiAgICAgIGlzQWdlbnQ6IHRydWUsXG4gICAgfSxcbiAgICB7XG4gICAgICBmaXJzdG5hbWU6ICdKb2huJyxcbiAgICAgIGxhc3RuYW1lOiAnRG9lJyxcbiAgICAgIGVtYWlsOiAndXNlckBnbWFpbC5jb20nLFxuICAgICAgcGFzc3dvcmQ6ICdzaGExJGZjOGRjMWQyJDEkMDM2ZWE0NmI3NWQwMDE3ODk3YzA5YTQwMjJjOTA3ODdlNTI4Nzc3OCcsXG4gICAgICBwaG9uZTogJzA4MTYzNDQ2Njg2JyxcbiAgICAgIGFkZHJlc3M6ICdJa2VqYSBHUkEnLFxuICAgICAgaXNBZ2VudDogZmFsc2UsXG4gICAgfSxcbiAgXTtcbiAgXG4gIGV4cG9ydCBkZWZhdWx0IFVzZXJNb2RlbDtcbiAgIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "UserModel",
        "firstname",
        "lastname",
        "email",
        "password",
        "phone",
        "address",
        "isAgent"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,SAAS,GAAG,CACd;AACEC,EAAAA,SAAS,EAAE,QADb;AAEEC,EAAAA,QAAQ,EAAE,SAFZ;AAGEC,EAAAA,KAAK,EAAE,iBAHT;AAIEC,EAAAA,QAAQ,EAAE,0DAJZ;AAKEC,EAAAA,KAAK,EAAE,aALT;AAMEC,EAAAA,OAAO,EAAE,WANX;AAOEC,EAAAA,OAAO,EAAE;AAPX,CADc,EAUd;AACEN,EAAAA,SAAS,EAAE,MADb;AAEEC,EAAAA,QAAQ,EAAE,KAFZ;AAGEC,EAAAA,KAAK,EAAE,gBAHT;AAIEC,EAAAA,QAAQ,EAAE,0DAJZ;AAKEC,EAAAA,KAAK,EAAE,aALT;AAMEC,EAAAA,OAAO,EAAE,WANX;AAOEC,EAAAA,OAAO,EAAE;AAPX,CAVc,CAAlB;eAqBiBP,S",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/models",
      "sourcesContent": [
        "const UserModel = [\n    {\n      firstname: 'Chinwe',\n      lastname: 'Okonkwo',\n      email: 'agent@gmail.com',\n      password: 'sha1$fc8dc1d2$1$036ea46b75d0017897c09a4022c90787e5287778',\n      phone: '08163446686',\n      address: 'Ikeja GRA',\n      isAgent: true,\n    },\n    {\n      firstname: 'John',\n      lastname: 'Doe',\n      email: 'user@gmail.com',\n      password: 'sha1$fc8dc1d2$1$036ea46b75d0017897c09a4022c90787e5287778',\n      phone: '08163446686',\n      address: 'Ikeja GRA',\n      isAgent: false,\n    },\n  ];\n  \n  export default UserModel;\n  "
      ]
    },
    "sourceType": "script",
    "mtime": 1562151671760
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/middlewares\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/authValidator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/authValidator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/authValidator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/authValidator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares",
        "sourceFileName": "authValidator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _helpers = _interopRequireDefault(require(\"../helpers\"));\n\nvar _auth = _interopRequireDefault(require(\"../helpers/auth\"));\n\nvar _users = _interopRequireDefault(require(\"../models/users\"));\n\nvar SECRET = process.env.SECRET || 'SuperSecretTokenKeyXXX&*&';\nvar verifyToken = _auth[\"default\"].verifyToken;\nvar debugg = (0, _debug[\"default\"])('authValidator');\nvar extractErrors = _helpers[\"default\"].extractErrors;\n\n_dotenv[\"default\"].config();\n/* istanbul ignore next */\n\n/**\n * @description Handles validation for all authentication processes\n */\n\n\nvar AuthValidator =\n/*#__PURE__*/\nfunction () {\n  function AuthValidator() {\n    (0, _classCallCheck2[\"default\"])(this, AuthValidator);\n  }\n\n  (0, _createClass2[\"default\"])(AuthValidator, null, [{\n    key: \"validateSignUp\",\n\n    /**\n       * validates user sign up inputs\n       * @param {object} req\n       * @param {object} res\n       * @param {callback} next\n       */\n    value: function validateSignUp(req, res, next) {\n      req.check('firstname', 'First name is required').notEmpty().trim().isAlpha().withMessage('First name can only contain alphabets');\n      req.check('lastname', 'Last name is required').notEmpty().trim().isAlpha().withMessage('Last name can only contain alphabets');\n      req.check('email', 'Email is required').notEmpty().isEmail().withMessage('Invalid email');\n      req.check('phone', 'The phone number is required').notEmpty().trim().isLength({\n        min: 11\n      }).withMessage('Enter a valid phone number');\n      req.check('password', 'Password is required').notEmpty().trim().isLength({\n        min: 6\n      }).withMessage('Password cannot be less then 6 characters');\n      req.check('address', 'Address is required').notEmpty().trim();\n      var errors = req.validationErrors();\n\n      if (errors) {\n        return res.status(400).json({\n          errors: extractErrors(errors),\n          status: 400\n        });\n      }\n\n      return next();\n    }\n    /**\n    *\n    * Checks if user already exist\n    * @param {object} req - request\n    * @param {object} res - response\n    * @param {object} next - callback\n    */\n\n  }, {\n    key: \"userExists\",\n    value: function () {\n      var _userExists = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee(req, res, next) {\n        var email, user;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                email = req.body.email;\n                _context.prev = 1;\n                user = _users[\"default\"].find(function (usr) {\n                  return usr.email === email;\n                });\n\n                if (!(user && user !== undefined)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", res.status(409).json({\n                  status: 409,\n                  error: \"User with email \".concat(email, \" already exists\")\n                }));\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                debugg(_context.t0);\n\n              case 10:\n                return _context.abrupt(\"return\", next());\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }));\n\n      function userExists(_x, _x2, _x3) {\n        return _userExists.apply(this, arguments);\n      }\n\n      return userExists;\n    }()\n    /**\n    *\n    * Validates user login inputs\n    * @static\n    * @param {object} req - request\n    * @param {object} res - response\n    * @param {object} next - callback\n    * @returns\n    */\n\n  }, {\n    key: \"validateLogin\",\n    value: function validateLogin(req, res, next) {\n      req.check('email', 'Email is required').notEmpty().isEmail().trim().withMessage('Invalid email');\n      req.check('password', 'Password is required').notEmpty().trim();\n      var errors = req.validationErrors();\n\n      if (errors) {\n        return res.status(400).json({\n          errors: extractErrors(errors),\n          status: 400\n        });\n      }\n\n      return next();\n    }\n    /**\n     *\n     * Validates authorization token\n     * @static\n     * @param {object} req - request\n     * @param {object} res - response\n     * @param {object} next - callback\n     * @returns\n     */\n\n  }, {\n    key: \"isTokenValid\",\n    value: function isTokenValid(req, res, next) {\n      try {\n        var authorization;\n        if (req.headers.token) authorization = req.headers.token;else if (req.headers.authorization) authorization = req.headers.authorization.split(' ')[1];\n\n        if (!authorization) {\n          return res.status(401).json({\n            status: 401,\n            error: 'You must log in to continue'\n          });\n        }\n\n        _jsonwebtoken[\"default\"].verify(authorization, SECRET, function (err, decoded) {\n          if (err) {\n            return res.status(401).json({\n              status: 401,\n              error: 'Invalid token, kindly log in to continue'\n            });\n          }\n\n          var id = decoded.id;\n\n          var user = _users[\"default\"].find(function (usr) {\n            return usr.id === id;\n          });\n\n          if (user) {\n            req.body.tokenPayload = decoded;\n            return next();\n          }\n\n          return res.status(401).json({\n            status: 401,\n            error: 'User with the specified token does not exist'\n          });\n        });\n      } catch (err) {\n        return res.status(401).json({\n          status: 401,\n          error: 'Internal server error, please try again'\n        });\n      }\n    }\n    /**\n    *\n    * Verifies agent\n    * @static\n    * @param {object} req - request\n    * @param {object} res - response\n    * @param {object} next - callback\n    * @returns\n    */\n\n  }, {\n    key: \"isAgent\",\n    value: function isAgent(req, res, next) {\n      try {\n        var authorization = req.headers.authorization.split(' ')[1] || req.headers.token;\n\n        if (!authorization) {\n          return res.status(401).json({\n            status: 401,\n            message: 'Invalid token, kindly log in to continue'\n          });\n        }\n\n        var verifiedToken = verifyToken(authorization);\n\n        if (!verifiedToken.isAgent) {\n          return res.status(401).json({\n            status: 401,\n            message: 'Only an Agent can perform this task'\n          });\n        }\n      } catch (err) {\n        return res.status(401).json({\n          status: 500,\n          message: 'Internal server error, please try again'\n        });\n      }\n\n      return next();\n    }\n  }]);\n  return AuthValidator;\n}();\n\nvar _default = AuthValidator;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "authValidator.js"
      ],
      "names": [
        "SECRET",
        "process",
        "env",
        "verifyToken",
        "Auth",
        "debugg",
        "extractErrors",
        "Helpers",
        "dotenv",
        "config",
        "AuthValidator",
        "req",
        "res",
        "next",
        "check",
        "notEmpty",
        "trim",
        "isAlpha",
        "withMessage",
        "isEmail",
        "isLength",
        "min",
        "errors",
        "validationErrors",
        "status",
        "json",
        "email",
        "body",
        "user",
        "UserModel",
        "find",
        "usr",
        "undefined",
        "error",
        "authorization",
        "headers",
        "token",
        "split",
        "jwt",
        "verify",
        "err",
        "decoded",
        "id",
        "tokenPayload",
        "message",
        "verifiedToken",
        "isAgent"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYF,MAAZ,IAAsB,2BAArC;IACQG,W,GAAgBC,gB,CAAhBD,W;AACR,IAAME,MAAM,GAAG,uBAAM,eAAN,CAAf;IACQC,a,GAAkBC,mB,CAAlBD,a;;AACRE,mBAAOC,MAAP;AAEA;;AACA;;;;;IAGMC,a;;;;;;;;;;AACJ;;;;;;mCAMsBC,G,EAAKC,G,EAAKC,I,EAAM;AACpCF,MAAAA,GAAG,CAACG,KAAJ,CAAU,WAAV,EAAuB,wBAAvB,EAAiDC,QAAjD,GAA4DC,IAA5D,GAAmEC,OAAnE,GACGC,WADH,CACe,uCADf;AAEAP,MAAAA,GAAG,CAACG,KAAJ,CAAU,UAAV,EAAsB,uBAAtB,EAA+CC,QAA/C,GAA0DC,IAA1D,GAAiEC,OAAjE,GACGC,WADH,CACe,sCADf;AAEAP,MAAAA,GAAG,CAACG,KAAJ,CAAU,OAAV,EAAmB,mBAAnB,EAAwCC,QAAxC,GAAmDI,OAAnD,GACGD,WADH,CACe,eADf;AAEAP,MAAAA,GAAG,CAACG,KAAJ,CAAU,OAAV,EAAmB,8BAAnB,EAAmDC,QAAnD,GAA8DC,IAA9D,GACGI,QADH,CACY;AAAEC,QAAAA,GAAG,EAAE;AAAP,OADZ,EAEGH,WAFH,CAEe,4BAFf;AAGAP,MAAAA,GAAG,CAACG,KAAJ,CAAU,UAAV,EAAsB,sBAAtB,EACGC,QADH,GACcC,IADd,GACqBI,QADrB,CAC8B;AAAEC,QAAAA,GAAG,EAAE;AAAP,OAD9B,EAEGH,WAFH,CAEe,2CAFf;AAGAP,MAAAA,GAAG,CAACG,KAAJ,CAAU,SAAV,EAAqB,qBAArB,EAA4CC,QAA5C,GAAuDC,IAAvD;AAEA,UAAMM,MAAM,GAAGX,GAAG,CAACY,gBAAJ,EAAf;;AAEA,UAAID,MAAJ,EAAY;AACV,eAAOV,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BH,UAAAA,MAAM,EAAEhB,aAAa,CAACgB,MAAD,CADK;AAE1BE,UAAAA,MAAM,EAAE;AAFkB,SAArB,CAAP;AAID;;AACD,aAAOX,IAAI,EAAX;AACD;AAED;;;;;;;;;;;;;oDAQwBF,G,EAAKC,G,EAAKC,I;;;;;;AACxBa,gBAAAA,K,GAAUf,GAAG,CAACgB,I,CAAdD,K;;AAEAE,gBAAAA,I,GAAOC,kBAAUC,IAAV,CAAe,UAAAC,GAAG;AAAA,yBAAIA,GAAG,CAACL,KAAJ,KAAcA,KAAlB;AAAA,iBAAlB,C;;sBACTE,IAAI,IAAIA,IAAI,KAAKI,S;;;;;iDACZpB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAAA,MAAM,EAAE,GADkB;AACbS,kBAAAA,KAAK,4BAAqBP,KAArB;AADQ,iBAArB,C;;;;;;;;;AAKTrB,gBAAAA,MAAM,aAAN;;;iDAEKQ,IAAI,E;;;;;;;;;;;;;;;;AAIb;;;;;;;;;;;;kCASqBF,G,EAAKC,G,EAAKC,I,EAAM;AACnCF,MAAAA,GAAG,CAACG,KAAJ,CAAU,OAAV,EAAmB,mBAAnB,EAAwCC,QAAxC,GAAmDI,OAAnD,GAA6DH,IAA7D,GACGE,WADH,CACe,eADf;AAEAP,MAAAA,GAAG,CAACG,KAAJ,CAAU,UAAV,EAAsB,sBAAtB,EAA8CC,QAA9C,GAAyDC,IAAzD;AAEA,UAAMM,MAAM,GAAGX,GAAG,CAACY,gBAAJ,EAAf;;AACA,UAAID,MAAJ,EAAY;AACV,eAAOV,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BH,UAAAA,MAAM,EAAEhB,aAAa,CAACgB,MAAD,CADK;AAE1BE,UAAAA,MAAM,EAAE;AAFkB,SAArB,CAAP;AAID;;AACD,aAAOX,IAAI,EAAX;AACD;AAED;;;;;;;;;;;;iCASoBF,G,EAAKC,G,EAAKC,I,EAAM;AAClC,UAAI;AACF,YAAIqB,aAAJ;AACA,YAAIvB,GAAG,CAACwB,OAAJ,CAAYC,KAAhB,EAAuBF,aAAa,GAAGvB,GAAG,CAACwB,OAAJ,CAAYC,KAA5B,CAAvB,KACK,IAAIzB,GAAG,CAACwB,OAAJ,CAAYD,aAAhB,EAA+BA,aAAa,GAAGvB,GAAG,CAACwB,OAAJ,CAAYD,aAAZ,CAA0BG,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAhB;;AACpC,YAAI,CAACH,aAAL,EAAoB;AAClB,iBAAOtB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,YAAAA,MAAM,EAAE,GAAV;AAAeS,YAAAA,KAAK,EAAE;AAAtB,WAArB,CAAP;AACD;;AACDK,iCAAIC,MAAJ,CAAWL,aAAX,EAA0BlC,MAA1B,EAAkC,UAACwC,GAAD,EAAMC,OAAN,EAAkB;AAClD,cAAID,GAAJ,EAAS;AACP,mBAAO5B,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,cAAAA,MAAM,EAAE,GAAV;AAAeS,cAAAA,KAAK,EAAE;AAAtB,aAArB,CAAP;AACD;;AAHiD,cAI1CS,EAJ0C,GAInCD,OAJmC,CAI1CC,EAJ0C;;AAKlD,cAAMd,IAAI,GAAGC,kBAAUC,IAAV,CAAe,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACW,EAAJ,KAAWA,EAAf;AAAA,WAAlB,CAAb;;AACA,cAAId,IAAJ,EAAU;AACRjB,YAAAA,GAAG,CAACgB,IAAJ,CAASgB,YAAT,GAAwBF,OAAxB;AACA,mBAAO5B,IAAI,EAAX;AACD;;AACD,iBAAOD,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,YAAAA,MAAM,EAAE,GAAV;AAAeS,YAAAA,KAAK,EAAE;AAAtB,WAArB,CAAP;AACD,SAXD;AAYD,OAnBD,CAmBE,OAAOO,GAAP,EAAY;AACZ,eAAO5B,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAeS,UAAAA,KAAK,EAAE;AAAtB,SAArB,CAAP;AACD;AACF;AAED;;;;;;;;;;;;4BAUetB,G,EAAKC,G,EAAKC,I,EAAM;AAC7B,UAAI;AACF,YAAMqB,aAAa,GAAGvB,GAAG,CAACwB,OAAJ,CAAYD,aAAZ,CAA0BG,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,KAA2C1B,GAAG,CAACwB,OAAJ,CAAYC,KAA7E;;AAEA,YAAI,CAACF,aAAL,EAAoB;AAClB,iBAAOtB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,YAAAA,MAAM,EAAE,GAAV;AAAeoB,YAAAA,OAAO,EAAE;AAAxB,WAArB,CAAP;AACD;;AACD,YAAMC,aAAa,GAAG1C,WAAW,CAAC+B,aAAD,CAAjC;;AACA,YAAI,CAACW,aAAa,CAACC,OAAnB,EAA4B;AAC1B,iBAAOlC,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,YAAAA,MAAM,EAAE,GAAV;AAAeoB,YAAAA,OAAO,EAAE;AAAxB,WAArB,CAAP;AACD;AACF,OAVD,CAUE,OAAOJ,GAAP,EAAY;AACZ,eAAO5B,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAeoB,UAAAA,OAAO,EAAE;AAAxB,SAArB,CAAP;AACD;;AACD,aAAO/B,IAAI,EAAX;AACD;;;;;eAGYH,a",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares",
      "sourcesContent": [
        "import dotenv from 'dotenv';\nimport debug from 'debug';\nimport jwt from 'jsonwebtoken';\nimport Helpers from '../helpers';\nimport Auth from '../helpers/auth';\nimport UserModel from '../models/users';\n\nconst SECRET = process.env.SECRET || 'SuperSecretTokenKeyXXX&*&';\nconst { verifyToken } = Auth;\nconst debugg = debug('authValidator');\nconst { extractErrors } = Helpers;\ndotenv.config();\n\n/* istanbul ignore next */\n/**\n * @description Handles validation for all authentication processes\n */\nclass AuthValidator {\n  /**\n     * validates user sign up inputs\n     * @param {object} req\n     * @param {object} res\n     * @param {callback} next\n     */\n  static validateSignUp(req, res, next) {\n    req.check('firstname', 'First name is required').notEmpty().trim().isAlpha()\n      .withMessage('First name can only contain alphabets');\n    req.check('lastname', 'Last name is required').notEmpty().trim().isAlpha()\n      .withMessage('Last name can only contain alphabets');\n    req.check('email', 'Email is required').notEmpty().isEmail()\n      .withMessage('Invalid email');\n    req.check('phone', 'The phone number is required').notEmpty().trim()\n      .isLength({ min: 11 })\n      .withMessage('Enter a valid phone number');\n    req.check('password', 'Password is required')\n      .notEmpty().trim().isLength({ min: 6 })\n      .withMessage('Password cannot be less then 6 characters');\n    req.check('address', 'Address is required').notEmpty().trim();\n\n    const errors = req.validationErrors();\n\n    if (errors) {\n      return res.status(400).json({\n        errors: extractErrors(errors),\n        status: 400,\n      });\n    }\n    return next();\n  }\n\n  /**\n  *\n  * Checks if user already exist\n  * @param {object} req - request\n  * @param {object} res - response\n  * @param {object} next - callback\n  */\n\n  static async userExists(req, res, next) {\n    const { email } = req.body;\n    try {\n      const user = UserModel.find(usr => usr.email === email);\n      if (user && user !== undefined) {\n        return res.status(409).json({\n          status: 409, error: `User with email ${email} already exists`,\n        });\n      }\n    } catch (err) {\n      debugg(err);\n    }\n    return next();\n  }\n\n\n  /**\n  *\n  * Validates user login inputs\n  * @static\n  * @param {object} req - request\n  * @param {object} res - response\n  * @param {object} next - callback\n  * @returns\n  */\n  static validateLogin(req, res, next) {\n    req.check('email', 'Email is required').notEmpty().isEmail().trim()\n      .withMessage('Invalid email');\n    req.check('password', 'Password is required').notEmpty().trim();\n\n    const errors = req.validationErrors();\n    if (errors) {\n      return res.status(400).json({\n        errors: extractErrors(errors),\n        status: 400,\n      });\n    }\n    return next();\n  }\n\n  /**\n   *\n   * Validates authorization token\n   * @static\n   * @param {object} req - request\n   * @param {object} res - response\n   * @param {object} next - callback\n   * @returns\n   */\n  static isTokenValid(req, res, next) {\n    try {\n      let authorization;\n      if (req.headers.token) authorization = req.headers.token;\n      else if (req.headers.authorization) authorization = req.headers.authorization.split(' ')[1];\n      if (!authorization) {\n        return res.status(401).json({ status: 401, error: 'You must log in to continue' });\n      }\n      jwt.verify(authorization, SECRET, (err, decoded) => {\n        if (err) {\n          return res.status(401).json({ status: 401, error: 'Invalid token, kindly log in to continue' });\n        }\n        const { id } = decoded;\n        const user = UserModel.find(usr => usr.id === id);\n        if (user) {\n          req.body.tokenPayload = decoded;\n          return next();\n        }\n        return res.status(401).json({ status: 401, error: 'User with the specified token does not exist' });\n      });\n    } catch (err) {\n      return res.status(401).json({ status: 401, error: 'Internal server error, please try again' });\n    }\n  }\n\n  /**\n  *\n  * Verifies agent\n  * @static\n  * @param {object} req - request\n  * @param {object} res - response\n  * @param {object} next - callback\n  * @returns\n  */\n\n  static isAgent(req, res, next) {\n    try {\n      const authorization = req.headers.authorization.split(' ')[1] || req.headers.token;\n\n      if (!authorization) {\n        return res.status(401).json({ status: 401, message: 'Invalid token, kindly log in to continue' });\n      }\n      const verifiedToken = verifyToken(authorization);\n      if (!verifiedToken.isAgent) {\n        return res.status(401).json({ status: 401, message: 'Only an Agent can perform this task' });\n      }\n    } catch (err) {\n      return res.status(401).json({ status: 500, message: 'Internal server error, please try again' });\n    }\n    return next();\n  }\n}\n\nexport default AuthValidator;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562151671760
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/helpers/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar Helpers =\n/*#__PURE__*/\nfunction () {\n  function Helpers() {\n    (0, _classCallCheck2[\"default\"])(this, Helpers);\n  }\n\n  (0, _createClass2[\"default\"])(Helpers, null, [{\n    key: \"extractErrors\",\n    value: function extractErrors(errors) {\n      var validationErrors = [];\n      errors.map(function (error) {\n        return validationErrors.push(error.msg);\n      });\n      return validationErrors;\n    }\n  }, {\n    key: \"isANumber\",\n    value: function isANumber(num) {\n      return Number.isInteger(Number(num));\n    }\n  }, {\n    key: \"updateType\",\n    value: function updateType(req, res, type, data, id, name) {\n      for (var i = 0; i < type.length; i += 1) {\n        if (type[i].id === id) {\n          type.splice(i, 1);\n          type.push(data);\n          return res.status(200).json({\n            status: 200,\n            data: [data],\n            message: \"\".concat(name, \" Ad updated successfully\")\n          });\n        }\n      }\n    }\n  }]);\n  return Helpers;\n}();\n\nvar _default = Helpers;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkhlbHBlcnMiLCJlcnJvcnMiLCJ2YWxpZGF0aW9uRXJyb3JzIiwibWFwIiwiZXJyb3IiLCJwdXNoIiwibXNnIiwibnVtIiwiTnVtYmVyIiwiaXNJbnRlZ2VyIiwicmVxIiwicmVzIiwidHlwZSIsImRhdGEiLCJpZCIsIm5hbWUiLCJpIiwibGVuZ3RoIiwic3BsaWNlIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7SUFBTUEsTzs7Ozs7Ozs7O2tDQUNtQkMsTSxFQUFRO0FBQzNCLFVBQU1DLGdCQUFnQixHQUFHLEVBQXpCO0FBQ0FELE1BQUFBLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLFVBQUFDLEtBQUs7QUFBQSxlQUFJRixnQkFBZ0IsQ0FBQ0csSUFBakIsQ0FBc0JELEtBQUssQ0FBQ0UsR0FBNUIsQ0FBSjtBQUFBLE9BQWhCO0FBQ0EsYUFBT0osZ0JBQVA7QUFDRDs7OzhCQUVnQkssRyxFQUFLO0FBQ3BCLGFBQU9DLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkQsTUFBTSxDQUFDRCxHQUFELENBQXZCLENBQVA7QUFDRDs7OytCQUVpQkcsRyxFQUFLQyxHLEVBQUtDLEksRUFBTUMsSSxFQUFNQyxFLEVBQUlDLEksRUFBTTtBQUNoRCxXQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdKLElBQUksQ0FBQ0ssTUFBekIsRUFBaUNELENBQUMsSUFBSSxDQUF0QyxFQUF5QztBQUN2QyxZQUFJSixJQUFJLENBQUNJLENBQUQsQ0FBSixDQUFRRixFQUFSLEtBQWVBLEVBQW5CLEVBQXVCO0FBQ3JCRixVQUFBQSxJQUFJLENBQUNNLE1BQUwsQ0FBWUYsQ0FBWixFQUFlLENBQWY7QUFDQUosVUFBQUEsSUFBSSxDQUFDUCxJQUFMLENBQVVRLElBQVY7QUFDQSxpQkFBT0YsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELFlBQUFBLE1BQU0sRUFBRSxHQURrQjtBQUUxQk4sWUFBQUEsSUFBSSxFQUFFLENBQUNBLElBQUQsQ0FGb0I7QUFHMUJRLFlBQUFBLE9BQU8sWUFBS04sSUFBTDtBQUhtQixXQUFyQixDQUFQO0FBS0Q7QUFDRjtBQUNGOzs7OztlQUdVZixPIiwic291cmNlUm9vdCI6Ii9ob21lL2djaGlsaWUvRGVza3RvcC9Qcm9wZXJ0eVByby1saXRlL2FwcC9oZWxwZXJzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgSGVscGVycyB7XG4gICAgc3RhdGljIGV4dHJhY3RFcnJvcnMoZXJyb3JzKSB7XG4gICAgICBjb25zdCB2YWxpZGF0aW9uRXJyb3JzID0gW107XG4gICAgICBlcnJvcnMubWFwKGVycm9yID0+IHZhbGlkYXRpb25FcnJvcnMucHVzaChlcnJvci5tc2cpKTtcbiAgICAgIHJldHVybiB2YWxpZGF0aW9uRXJyb3JzO1xuICAgIH1cbiAgXG4gICAgc3RhdGljIGlzQU51bWJlcihudW0pIHtcbiAgICAgIHJldHVybiBOdW1iZXIuaXNJbnRlZ2VyKE51bWJlcihudW0pKTtcbiAgICB9XG4gIFxuICAgIHN0YXRpYyB1cGRhdGVUeXBlKHJlcSwgcmVzLCB0eXBlLCBkYXRhLCBpZCwgbmFtZSkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0eXBlLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGlmICh0eXBlW2ldLmlkID09PSBpZCkge1xuICAgICAgICAgIHR5cGUuc3BsaWNlKGksIDEpO1xuICAgICAgICAgIHR5cGUucHVzaChkYXRhKTtcbiAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICAgICAgICBkYXRhOiBbZGF0YV0sXG4gICAgICAgICAgICBtZXNzYWdlOiBgJHtuYW1lfSBBZCB1cGRhdGVkIHN1Y2Nlc3NmdWxseWAsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEhlbHBlcnM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Helpers",
        "errors",
        "validationErrors",
        "map",
        "error",
        "push",
        "msg",
        "num",
        "Number",
        "isInteger",
        "req",
        "res",
        "type",
        "data",
        "id",
        "name",
        "i",
        "length",
        "splice",
        "status",
        "json",
        "message"
      ],
      "mappings": ";;;;;;;;;;;;;IAAMA,O;;;;;;;;;kCACmBC,M,EAAQ;AAC3B,UAAMC,gBAAgB,GAAG,EAAzB;AACAD,MAAAA,MAAM,CAACE,GAAP,CAAW,UAAAC,KAAK;AAAA,eAAIF,gBAAgB,CAACG,IAAjB,CAAsBD,KAAK,CAACE,GAA5B,CAAJ;AAAA,OAAhB;AACA,aAAOJ,gBAAP;AACD;;;8BAEgBK,G,EAAK;AACpB,aAAOC,MAAM,CAACC,SAAP,CAAiBD,MAAM,CAACD,GAAD,CAAvB,CAAP;AACD;;;+BAEiBG,G,EAAKC,G,EAAKC,I,EAAMC,I,EAAMC,E,EAAIC,I,EAAM;AAChD,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;AACvC,YAAIJ,IAAI,CAACI,CAAD,CAAJ,CAAQF,EAAR,KAAeA,EAAnB,EAAuB;AACrBF,UAAAA,IAAI,CAACM,MAAL,CAAYF,CAAZ,EAAe,CAAf;AACAJ,UAAAA,IAAI,CAACP,IAAL,CAAUQ,IAAV;AACA,iBAAOF,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,YAAAA,MAAM,EAAE,GADkB;AAE1BN,YAAAA,IAAI,EAAE,CAACA,IAAD,CAFoB;AAG1BQ,YAAAA,OAAO,YAAKN,IAAL;AAHmB,WAArB,CAAP;AAKD;AACF;AACF;;;;;eAGUf,O",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/helpers",
      "sourcesContent": [
        "class Helpers {\n    static extractErrors(errors) {\n      const validationErrors = [];\n      errors.map(error => validationErrors.push(error.msg));\n      return validationErrors;\n    }\n  \n    static isANumber(num) {\n      return Number.isInteger(Number(num));\n    }\n  \n    static updateType(req, res, type, data, id, name) {\n      for (let i = 0; i < type.length; i += 1) {\n        if (type[i].id === id) {\n          type.splice(i, 1);\n          type.push(data);\n          return res.status(200).json({\n            status: 200,\n            data: [data],\n            message: `${name} Ad updated successfully`,\n          });\n        }\n      }\n    }\n}\n\nexport default Helpers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562151671760
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/controllers/propertyController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers/propertyController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers/propertyController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers/propertyController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers",
        "sourceFileName": "propertyController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _shortid = _interopRequireDefault(require(\"shortid\"));\n\nvar _property = _interopRequireDefault(require(\"../models/property\"));\n\nvar _index = _interopRequireDefault(require(\"../helpers/index\"));\n\nvar PropertyController =\n/*#__PURE__*/\nfunction () {\n  function PropertyController() {\n    (0, _classCallCheck2[\"default\"])(this, PropertyController);\n  }\n\n  (0, _createClass2[\"default\"])(PropertyController, null, [{\n    key: \"createPropertyAd\",\n\n    /**\n           *\n           * @param {object} req - request\n           * @param {object} res - response\n           */\n    value: function () {\n      var _createPropertyAd = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee(req, res) {\n        var id, status, createdOn, owner, _req$body, state, price, address, type, property;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = _shortid[\"default\"].generate();\n                status = 'available';\n                createdOn = new Date();\n                _context.prev = 3;\n                owner = req.body.tokenPayload.id;\n                _req$body = req.body, state = _req$body.state, price = _req$body.price, address = _req$body.address, type = _req$body.type;\n                property = {\n                  id: id,\n                  owner: owner,\n                  createdOn: createdOn,\n                  state: state,\n                  status: status,\n                  price: price,\n                  address: address,\n                  type: type\n                };\n\n                _property[\"default\"].push(property);\n\n                return _context.abrupt(\"return\", res.status(201).json({\n                  status: 201,\n                  data: [property],\n                  message: 'Property Ad created successfully'\n                }));\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](3);\n                return _context.abrupt(\"return\", res.status(500).json({\n                  error: true,\n                  message: 'Internal server error'\n                }));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 11]]);\n      }));\n\n      function createPropertyAd(_x, _x2) {\n        return _createPropertyAd.apply(this, arguments);\n      }\n\n      return createPropertyAd;\n    }()\n  }, {\n    key: \"updatePropertyAdPrice\",\n    value: function () {\n      var _updatePropertyAdPrice = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(req, res) {\n        var propertyId, price, property;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                propertyId = req.params.propertyId;\n                price = req.body.price;\n                _context2.prev = 2;\n                property = _property[\"default\"].find(function (property) {\n                  return property.id === propertyId;\n                });\n                property = (0, _objectSpread2[\"default\"])({}, property, {\n                  price: price\n                });\n\n                _index[\"default\"].updateType(req, res, _property[\"default\"], property, propertyId, 'property');\n\n                return _context2.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Oops, something happend, try again'\n                }));\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](2);\n                return _context2.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Internal Server error'\n                }));\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 9]]);\n      }));\n\n      function updatePropertyAdPrice(_x3, _x4) {\n        return _updatePropertyAdPrice.apply(this, arguments);\n      }\n\n      return updatePropertyAdPrice;\n    }()\n  }, {\n    key: \"updatePropertyAdStatus\",\n    value: function () {\n      var _updatePropertyAdStatus = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee3(req, res) {\n        var propertyId, status, property;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                propertyId = req.params.propertyId;\n                status = req.body.status;\n                _context3.prev = 2;\n                property = _property[\"default\"].find(function (property) {\n                  return property.id === propertyId;\n                });\n                property = (0, _objectSpread2[\"default\"])({}, property, {\n                  status: status\n                });\n\n                _index[\"default\"].updateType(req, res, _property[\"default\"], property, propertyId, 'property');\n\n                return _context3.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Oops, something happend, try again'\n                }));\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](2);\n                return _context3.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Internal server error'\n                }));\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[2, 9]]);\n      }));\n\n      function updatePropertyAdStatus(_x5, _x6) {\n        return _updatePropertyAdStatus.apply(this, arguments);\n      }\n\n      return updatePropertyAdStatus;\n    }()\n  }, {\n    key: \"getAllPropertys\",\n    value: function () {\n      var _getAllPropertys = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee4(req, res) {\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", res.status(200).json({\n                  status: 200,\n                  message: 'propertys retrieved successfully',\n                  todos: _property[\"default\"]\n                }));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getAllPropertys(_x7, _x8) {\n        return _getAllPropertys.apply(this, arguments);\n      }\n\n      return getAllPropertys;\n    }()\n  }, {\n    key: \"getPropertysByType\",\n    value: function () {\n      var _getPropertysByType = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee5(req, res) {\n        var propertyType, property;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                propertyType = req.params.propertyType;\n                _context5.prev = 1;\n                property = _property[\"default\"].filter(function (property) {\n                  return property.type === propertyType;\n                });\n\n                if (!property) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", res.status(200).json({\n                  status: 200,\n                  data: [property]\n                }));\n\n              case 5:\n                return _context5.abrupt(\"return\", res.status(404).json({\n                  status: 404,\n                  error: \"Property with type: \".concat(propertyType, \" does not exist\")\n                }));\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](1);\n                return _context5.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Interal server error'\n                }));\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[1, 8]]);\n      }));\n\n      function getPropertysByType(_x9, _x10) {\n        return _getPropertysByType.apply(this, arguments);\n      }\n\n      return getPropertysByType;\n    }()\n  }, {\n    key: \"getPropertysByType\",\n    value: function () {\n      var _getPropertysByType2 = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee6(req, res) {\n        var propertyType, property;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                propertyType = req.params.propertyType;\n                _context6.prev = 1;\n                property = _property[\"default\"].filter(function (property) {\n                  return property.type === propertyType;\n                });\n\n                if (!property) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", res.status(200).json({\n                  status: 200,\n                  data: [property]\n                }));\n\n              case 5:\n                return _context6.abrupt(\"return\", res.status(404).json({\n                  status: 404,\n                  error: \"Property with type: \".concat(propertyType, \" does not exist\")\n                }));\n\n              case 8:\n                _context6.prev = 8;\n                _context6.t0 = _context6[\"catch\"](1);\n                return _context6.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Interal server error'\n                }));\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[1, 8]]);\n      }));\n\n      function getPropertysByType(_x11, _x12) {\n        return _getPropertysByType2.apply(this, arguments);\n      }\n\n      return getPropertysByType;\n    }()\n  }, {\n    key: \"getAProperty\",\n    value: function () {\n      var _getAProperty = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee7(req, res) {\n        var propertyId, property;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                propertyId = req.params.propertyId;\n                _context7.prev = 1;\n                property = _property[\"default\"].find(function (property) {\n                  return property.id === propertyId;\n                });\n\n                if (!property) {\n                  _context7.next = 5;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", res.status(200).json({\n                  status: 200,\n                  data: [property]\n                }));\n\n              case 5:\n                return _context7.abrupt(\"return\", res.status(404).json({\n                  status: 404,\n                  error: \"Property with id: \".concat(propertyId, \" does not exist\")\n                }));\n\n              case 8:\n                _context7.prev = 8;\n                _context7.t0 = _context7[\"catch\"](1);\n                return _context7.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Interal server error'\n                }));\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[1, 8]]);\n      }));\n\n      function getAProperty(_x13, _x14) {\n        return _getAProperty.apply(this, arguments);\n      }\n\n      return getAProperty;\n    }()\n  }, {\n    key: \"deletePropertyAd\",\n    value: function () {\n      var _deletePropertyAd = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee8(req, res) {\n        var propertyId, i;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                propertyId = req.params.propertyId;\n                _context8.prev = 1;\n                i = 0;\n\n              case 3:\n                if (!(i < _property[\"default\"].length)) {\n                  _context8.next = 10;\n                  break;\n                }\n\n                if (!(_property[\"default\"][i].id === propertyId)) {\n                  _context8.next = 7;\n                  break;\n                }\n\n                _property[\"default\"].splice(i, 1);\n\n                return _context8.abrupt(\"return\", res.status(200).json({\n                  status: 204,\n                  data: [],\n                  message: 'Property Ad deleted successfully'\n                }));\n\n              case 7:\n                i += 1;\n                _context8.next = 3;\n                break;\n\n              case 10:\n                return _context8.abrupt(\"return\", res.status(404).json({\n                  status: 404,\n                  message: \"Property with id: \".concat(propertyId, \" not found\")\n                }));\n\n              case 13:\n                _context8.prev = 13;\n                _context8.t0 = _context8[\"catch\"](1);\n                return _context8.abrupt(\"return\", res.status(500).json({\n                  status: 500,\n                  error: 'Internal Server error'\n                }));\n\n              case 16:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[1, 13]]);\n      }));\n\n      function deletePropertyAd(_x15, _x16) {\n        return _deletePropertyAd.apply(this, arguments);\n      }\n\n      return deletePropertyAd;\n    }()\n  }]);\n  return PropertyController;\n}();\n\nvar _default = PropertyController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "propertyController.js"
      ],
      "names": [
        "PropertyController",
        "req",
        "res",
        "id",
        "shortId",
        "generate",
        "status",
        "createdOn",
        "Date",
        "owner",
        "body",
        "tokenPayload",
        "state",
        "price",
        "address",
        "type",
        "property",
        "propertyModel",
        "push",
        "json",
        "data",
        "message",
        "error",
        "propertyId",
        "params",
        "find",
        "Helper",
        "updateType",
        "todos",
        "propertyType",
        "filter",
        "i",
        "length",
        "splice"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;IAEMA,kB;;;;;;;;;;AACJ;;;;;;;;oDAK8BC,G,EAAKC,G;;;;;;;AAC3BC,gBAAAA,E,GAAKC,oBAAQC,QAAR,E;AACLC,gBAAAA,M,GAAS,W;AACTC,gBAAAA,S,GAAY,IAAIC,IAAJ,E;;AAEJC,gBAAAA,K,GAAUR,GAAG,CAACS,IAAJ,CAASC,Y,CAAvBR,E;4BACgCF,GAAG,CAACS,I,EAApCE,K,aAAAA,K,EAAOC,K,aAAAA,K,EAAOC,O,aAAAA,O,EAASC,I,aAAAA,I;AACzBC,gBAAAA,Q,GAAW;AACfb,kBAAAA,EAAE,EAAFA,EADe;AACXM,kBAAAA,KAAK,EAALA,KADW;AACJF,kBAAAA,SAAS,EAATA,SADI;AACOK,kBAAAA,KAAK,EAALA,KADP;AACcN,kBAAAA,MAAM,EAANA,MADd;AACsBO,kBAAAA,KAAK,EAALA,KADtB;AAC6BC,kBAAAA,OAAO,EAAPA,OAD7B;AACsCC,kBAAAA,IAAI,EAAJA;AADtC,iB;;AAGjBE,qCAAcC,IAAd,CAAmBF,QAAnB;;iDACOd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAC1Bb,kBAAAA,MAAM,EAAE,GADkB;AAE1Bc,kBAAAA,IAAI,EAAE,CAACJ,QAAD,CAFoB;AAG1BK,kBAAAA,OAAO,EAAE;AAHiB,iBAArB,C;;;;;iDAMAnB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEG,kBAAAA,KAAK,EAAE,IAAT;AAAeD,kBAAAA,OAAO,EAAE;AAAxB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;qDAKwBpB,G,EAAKC,G;;;;;;AAC9BqB,gBAAAA,U,GAAetB,GAAG,CAACuB,M,CAAnBD,U;AACAV,gBAAAA,K,GAAUZ,GAAG,CAACS,I,CAAdG,K;;AAEFG,gBAAAA,Q,GAAWC,qBAAcQ,IAAd,CAAmB,UAAAT,QAAQ;AAAA,yBAAIA,QAAQ,CAACb,EAAT,KAAgBoB,UAApB;AAAA,iBAA3B,C;AACfP,gBAAAA,QAAQ,sCAAQA,QAAR;AAAkBH,kBAAAA,KAAK,EAALA;AAAlB,kBAAR;;AACAa,kCAAOC,UAAP,CAAkB1B,GAAlB,EAAuBC,GAAvB,EAA4Be,oBAA5B,EAA2CD,QAA3C,EAAqDO,UAArD,EAAiE,UAAjE;;kDACOrB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;kDAEApB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;qDAIyBrB,G,EAAKC,G;;;;;;AAC/BqB,gBAAAA,U,GAAetB,GAAG,CAACuB,M,CAAnBD,U;AACAjB,gBAAAA,M,GAAWL,GAAG,CAACS,I,CAAfJ,M;;AAEFU,gBAAAA,Q,GAAWC,qBAAcQ,IAAd,CAAmB,UAAAT,QAAQ;AAAA,yBAAIA,QAAQ,CAACb,EAAT,KAAgBoB,UAApB;AAAA,iBAA3B,C;AACfP,gBAAAA,QAAQ,sCAAQA,QAAR;AAAkBV,kBAAAA,MAAM,EAANA;AAAlB,kBAAR;;AACAoB,kCAAOC,UAAP,CAAkB1B,GAAlB,EAAuBC,GAAvB,EAA4Be,oBAA5B,EAA2CD,QAA3C,EAAqDO,UAArD,EAAiE,UAAjE;;kDACOrB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;kDAEApB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;qDAIkBrB,G,EAAKC,G;;;;;kDACzBA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAC1Bb,kBAAAA,MAAM,EAAE,GADkB;AAE1Be,kBAAAA,OAAO,EAAE,kCAFiB;AAG1BO,kBAAAA,KAAK,EAAEX;AAHmB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;qDAOuBhB,G,EAAKC,G;;;;;;AAC3B2B,gBAAAA,Y,GAAiB5B,GAAG,CAACuB,M,CAArBK,Y;;AAEAb,gBAAAA,Q,GAAWC,qBAAca,MAAd,CAAqB,UAAAd,QAAQ;AAAA,yBAAIA,QAAQ,CAACD,IAAT,KAAkBc,YAAtB;AAAA,iBAA7B,C;;qBACbb,Q;;;;;kDACKd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAec,kBAAAA,IAAI,EAAE,CAACJ,QAAD;AAArB,iBAArB,C;;;kDAEFd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAC1Bb,kBAAAA,MAAM,EAAE,GADkB;AAE1BgB,kBAAAA,KAAK,gCAAyBO,YAAzB;AAFqB,iBAArB,C;;;;;kDAKA3B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;qDAGqBrB,G,EAAKC,G;;;;;;AAC3B2B,gBAAAA,Y,GAAiB5B,GAAG,CAACuB,M,CAArBK,Y;;AAEAb,gBAAAA,Q,GAAWC,qBAAca,MAAd,CAAqB,UAAAd,QAAQ;AAAA,yBAAIA,QAAQ,CAACD,IAAT,KAAkBc,YAAtB;AAAA,iBAA7B,C;;qBACbb,Q;;;;;kDACKd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAec,kBAAAA,IAAI,EAAE,CAACJ,QAAD;AAArB,iBAArB,C;;;kDAEFd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAC1Bb,kBAAAA,MAAM,EAAE,GADkB;AAE1BgB,kBAAAA,KAAK,gCAAyBO,YAAzB;AAFqB,iBAArB,C;;;;;kDAKA3B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;qDAIerB,G,EAAKC,G;;;;;;AACrBqB,gBAAAA,U,GAAetB,GAAG,CAACuB,M,CAAnBD,U;;AAEAP,gBAAAA,Q,GAAWC,qBAAcQ,IAAd,CAAmB,UAAAT,QAAQ;AAAA,yBAAIA,QAAQ,CAACb,EAAT,KAAgBoB,UAApB;AAAA,iBAA3B,C;;qBACbP,Q;;;;;kDACKd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAec,kBAAAA,IAAI,EAAE,CAACJ,QAAD;AAArB,iBAArB,C;;;kDAEFd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAC1Bb,kBAAAA,MAAM,EAAE,GADkB;AAE1BgB,kBAAAA,KAAK,8BAAuBC,UAAvB;AAFqB,iBAArB,C;;;;;kDAKArB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;qDAImBrB,G,EAAKC,G;;;;;;AACzBqB,gBAAAA,U,GAAetB,GAAG,CAACuB,M,CAAnBD,U;;AAEGQ,gBAAAA,C,GAAI,C;;;sBAAGA,CAAC,GAAGd,qBAAce,M;;;;;sBAC5Bf,qBAAcc,CAAd,EAAiB5B,EAAjB,KAAwBoB,U;;;;;AAC1BN,qCAAcgB,MAAd,CAAqBF,CAArB,EAAwB,CAAxB;;kDACO7B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAC1Bb,kBAAAA,MAAM,EAAE,GADkB;AAE1Bc,kBAAAA,IAAI,EAAE,EAFoB;AAG1BC,kBAAAA,OAAO,EAAE;AAHiB,iBAArB,C;;;AAH+BU,gBAAAA,CAAC,IAAI,C;;;;;kDAUxC7B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAee,kBAAAA,OAAO,8BAAuBE,UAAvB;AAAtB,iBAArB,C;;;;;kDAEArB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB;AAAEb,kBAAAA,MAAM,EAAE,GAAV;AAAegB,kBAAAA,KAAK,EAAE;AAAtB,iBAArB,C;;;;;;;;;;;;;;;;;;;;eAKEtB,kB",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/controllers",
      "sourcesContent": [
        "import shortId from 'shortid';\nimport propertyModel from '../models/property';\nimport Helper from '../helpers/index'\n\nclass PropertyController {\n  /**\n         *\n         * @param {object} req - request\n         * @param {object} res - response\n         */\n  static async createPropertyAd(req, res) {\n    const id = shortId.generate();\n    const status = 'available';\n    const createdOn = new Date();\n    try {\n      const { id: owner } = req.body.tokenPayload;\n      const { state, price, address, type } = req.body;\n      const property = {\n        id, owner, createdOn, state, status, price, address, type\n      };\n      propertyModel.push(property);\n      return res.status(201).json({\n        status: 201,\n        data: [property],\n        message: 'Property Ad created successfully',\n      });\n    } catch (err) {\n      return res.status(500).json({ error: true, message: 'Internal server error' });\n    }\n  }\n\n\n  static async updatePropertyAdPrice(req, res) {\n    const { propertyId } = req.params;\n    const { price } = req.body;\n    try {\n      let property = propertyModel.find(property => property.id === propertyId);\n      property = { ...property, price };\n      Helper.updateType(req, res, propertyModel, property, propertyId, 'property')\n      return res.status(500).json({ status: 500, error: 'Oops, something happend, try again' });\n    } catch (err) {\n      return res.status(500).json({ status: 500, error: 'Internal Server error' });\n    }\n  }\n\n  static async updatePropertyAdStatus(req, res) {\n    const { propertyId } = req.params;\n    const { status } = req.body;\n    try {\n      let property = propertyModel.find(property => property.id === propertyId);\n      property = { ...property, status };\n      Helper.updateType(req, res, propertyModel, property, propertyId, 'property')\n      return res.status(500).json({ status: 500, error: 'Oops, something happend, try again' });\n    } catch (err) {\n      return res.status(500).json({ status: 500, error: 'Internal server error' });\n    }\n  }\n\n  static async getAllPropertys(req, res) {\n    return res.status(200).json({\n      status: 200,\n      message: 'propertys retrieved successfully',\n      todos: propertyModel,\n    });\n  }\n\n  static async getPropertysByType(req, res) {\n    const { propertyType } = req.params;\n    try {\n      const property = propertyModel.filter(property => property.type === propertyType);\n      if (property) {\n        return res.status(200).json({ status: 200, data: [property] });\n      }\n      return res.status(404).json({\n        status: 404,\n        error: `Property with type: ${propertyType} does not exist`,\n      });\n    } catch (err) {\n      return res.status(500).json({ status: 500, error: 'Interal server error' });\n    }\n  }\n  static async getPropertysByType(req, res) {\n    const { propertyType } = req.params;\n    try {\n      const property = propertyModel.filter(property => property.type === propertyType);\n      if (property) {\n        return res.status(200).json({ status: 200, data: [property] });\n      }\n      return res.status(404).json({\n        status: 404,\n        error: `Property with type: ${propertyType} does not exist`,\n      });\n    } catch (err) {\n      return res.status(500).json({ status: 500, error: 'Interal server error' });\n    }\n  }\n\n  static async getAProperty(req, res) {\n    const { propertyId } = req.params;\n    try {\n      const property = propertyModel.find(property => property.id === propertyId);\n      if (property) {\n        return res.status(200).json({ status: 200, data: [property] });\n      }\n      return res.status(404).json({\n        status: 404,\n        error: `Property with id: ${propertyId} does not exist`,\n      });\n    } catch (err) {\n      return res.status(500).json({ status: 500, error: 'Interal server error' });\n    }\n  }\n\n  static async deletePropertyAd(req, res) {\n    const { propertyId } = req.params;\n    try {\n      for (let i = 0; i < propertyModel.length; i += 1) {\n        if (propertyModel[i].id === propertyId) {\n          propertyModel.splice(i, 1);\n          return res.status(200).json({\n            status: 204,\n            data: [],\n            message: 'Property Ad deleted successfully',\n          });\n        }\n      }\n      return res.status(404).json({ status: 404, message: `Property with id: ${propertyId} not found` });\n    } catch (err) {\n      return res.status(500).json({ status: 500, error: 'Internal Server error' });\n    }\n  }\n}\n\nexport default PropertyController;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562272548153
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/models/property.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/models/property.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/models/property.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/models/property.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/models",
        "sourceFileName": "property.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar PropertyModel = [];\nvar _default = PropertyModel;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3BlcnR5LmpzIl0sIm5hbWVzIjpbIlByb3BlcnR5TW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLGFBQWEsR0FBRyxFQUF0QjtlQUdlQSxhIiwic291cmNlUm9vdCI6Ii9ob21lL2djaGlsaWUvRGVza3RvcC9Qcm9wZXJ0eVByby1saXRlL2FwcC9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQcm9wZXJ0eU1vZGVsID0gW107XG5cblxuZXhwb3J0IGRlZmF1bHQgUHJvcGVydHlNb2RlbDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "property.js"
      ],
      "names": [
        "PropertyModel"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,aAAa,GAAG,EAAtB;eAGeA,a",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/models",
      "sourcesContent": [
        "const PropertyModel = [];\n\n\nexport default PropertyModel;"
      ]
    },
    "sourceType": "script",
    "mtime": 1562209669893
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/middlewares\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/propertyValidator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/propertyValidator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/propertyValidator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares/propertyValidator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares",
        "sourceFileName": "propertyValidator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _helpers = _interopRequireDefault(require(\"../helpers\"));\n\nvar _property = _interopRequireDefault(require(\"../models/property\"));\n\nvar extractErrors = _helpers[\"default\"].extractErrors;\n\nvar PropertyValidator =\n/*#__PURE__*/\nfunction () {\n  function PropertyValidator() {\n    (0, _classCallCheck2[\"default\"])(this, PropertyValidator);\n  }\n\n  (0, _createClass2[\"default\"])(PropertyValidator, null, [{\n    key: \"validateProperty\",\n    value: function validateProperty(req, res, next) {\n      req.checkBody('state', 'Property state is required').notEmpty().trim().isAlpha().withMessage('Property state can only contain alphabets');\n      req.checkBody('price', 'Property price is required').notEmpty().isCurrency({\n        allow_negatives: false,\n        require_decimal: true\n      }).withMessage('Property price must be a valid number in two decimal place, e.g 123000.00');\n      req.checkBody('address', 'Property address is required').notEmpty().trim();\n      req.checkBody('type', 'Property type is required').notEmpty();\n      var error = req.validationErrors();\n\n      if (error) {\n        return res.status(400).json({\n          status: 400,\n          errors: extractErrors(error)\n        });\n      }\n\n      return next();\n    }\n  }, {\n    key: \"isPropertyExist\",\n    value: function isPropertyExist(req, res, next) {\n      var propertyId = req.params.propertyId || req.body.propertyId;\n\n      try {\n        var property = _property[\"default\"].find(function (pr) {\n          return pr.id === propertyId;\n        });\n\n        if (!property) {\n          return res.status(404).json({\n            status: 404,\n            error: \"Property Ad with id: \".concat(propertyId, \" does not exist\")\n          });\n        }\n\n        next();\n      } catch (error) {\n        return res.status(500).json({\n          status: 500,\n          error: 'Inernal server error'\n        });\n      }\n    }\n  }, {\n    key: \"validateStatus\",\n    value: function validateStatus(req, res, next) {\n      req.checkBody('status', 'Property status is required').notEmpty().trim().isIn(['sold', 'available']).withMessage('Property status can only be sold or available').isString().withMessage('Property status must be a string');\n      var errors = req.validationErrors();\n\n      if (errors) {\n        return res.status(400).json({\n          status: 400,\n          errors: extractErrors(errors)\n        });\n      }\n\n      return next();\n    }\n  }, {\n    key: \"validatePrice\",\n    value: function validatePrice(req, res, next) {\n      req.checkBody('price', 'Property price is required').notEmpty().trim().isFloat().withMessage('Property price must contain decimal point');\n      var errors = req.validationErrors();\n\n      if (errors) {\n        return res.status(400).json({\n          status: 400,\n          errors: extractErrors(errors)\n        });\n      }\n\n      return next();\n    }\n  }]);\n  return PropertyValidator;\n}();\n\nvar _default = PropertyValidator;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3BlcnR5VmFsaWRhdG9yLmpzIl0sIm5hbWVzIjpbImV4dHJhY3RFcnJvcnMiLCJIZWxwZXJzIiwiUHJvcGVydHlWYWxpZGF0b3IiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY2hlY2tCb2R5Iiwibm90RW1wdHkiLCJ0cmltIiwiaXNBbHBoYSIsIndpdGhNZXNzYWdlIiwiaXNDdXJyZW5jeSIsImFsbG93X25lZ2F0aXZlcyIsInJlcXVpcmVfZGVjaW1hbCIsImVycm9yIiwidmFsaWRhdGlvbkVycm9ycyIsInN0YXR1cyIsImpzb24iLCJlcnJvcnMiLCJwcm9wZXJ0eUlkIiwicGFyYW1zIiwiYm9keSIsInByb3BlcnR5IiwicHJvcGVydHlNb2RlbCIsImZpbmQiLCJwciIsImlkIiwiaXNJbiIsImlzU3RyaW5nIiwiaXNGbG9hdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztJQUNRQSxhLEdBQWtCQyxtQixDQUFsQkQsYTs7SUFFRkUsaUI7Ozs7Ozs7OztxQ0FDb0JDLEcsRUFBS0MsRyxFQUFLQyxJLEVBQU07QUFDdENGLE1BQUFBLEdBQUcsQ0FBQ0csU0FBSixDQUFjLE9BQWQsRUFBdUIsNEJBQXZCLEVBQXFEQyxRQUFyRCxHQUFnRUMsSUFBaEUsR0FBdUVDLE9BQXZFLEdBQ0dDLFdBREgsQ0FDZSwyQ0FEZjtBQUVBUCxNQUFBQSxHQUFHLENBQUNHLFNBQUosQ0FBYyxPQUFkLEVBQXVCLDRCQUF2QixFQUFxREMsUUFBckQsR0FBZ0VJLFVBQWhFLENBQTJFO0FBQUVDLFFBQUFBLGVBQWUsRUFBRSxLQUFuQjtBQUEwQkMsUUFBQUEsZUFBZSxFQUFFO0FBQTNDLE9BQTNFLEVBQ0dILFdBREgsQ0FDZSwyRUFEZjtBQUVBUCxNQUFBQSxHQUFHLENBQUNHLFNBQUosQ0FBYyxTQUFkLEVBQXlCLDhCQUF6QixFQUF5REMsUUFBekQsR0FBb0VDLElBQXBFO0FBQ0FMLE1BQUFBLEdBQUcsQ0FBQ0csU0FBSixDQUFjLE1BQWQsRUFBc0IsMkJBQXRCLEVBQW1EQyxRQUFuRDtBQUNBLFVBQU1PLEtBQUssR0FBR1gsR0FBRyxDQUFDWSxnQkFBSixFQUFkOztBQUNBLFVBQUlELEtBQUosRUFBVztBQUNULGVBQU9WLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVELFVBQUFBLE1BQU0sRUFBRSxHQUFWO0FBQWVFLFVBQUFBLE1BQU0sRUFBRWxCLGFBQWEsQ0FBQ2MsS0FBRDtBQUFwQyxTQUFyQixDQUFQO0FBQ0Q7O0FBQ0QsYUFBT1QsSUFBSSxFQUFYO0FBQ0Q7OztvQ0FFc0JGLEcsRUFBS0MsRyxFQUFLQyxJLEVBQU07QUFDckMsVUFBTWMsVUFBVSxHQUFHaEIsR0FBRyxDQUFDaUIsTUFBSixDQUFXRCxVQUFYLElBQXlCaEIsR0FBRyxDQUFDa0IsSUFBSixDQUFTRixVQUFyRDs7QUFDQSxVQUFJO0FBQ0YsWUFBTUcsUUFBUSxHQUFHQyxxQkFBY0MsSUFBZCxDQUFtQixVQUFBQyxFQUFFO0FBQUEsaUJBQUlBLEVBQUUsQ0FBQ0MsRUFBSCxLQUFVUCxVQUFkO0FBQUEsU0FBckIsQ0FBakI7O0FBQ0EsWUFBSSxDQUFDRyxRQUFMLEVBQWU7QUFDYixpQkFBT2xCLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVELFlBQUFBLE1BQU0sRUFBRSxHQUFWO0FBQWVGLFlBQUFBLEtBQUssaUNBQTBCSyxVQUExQjtBQUFwQixXQUFyQixDQUFQO0FBQ0Q7O0FBQ0RkLFFBQUFBLElBQUk7QUFDTCxPQU5ELENBTUUsT0FBT1MsS0FBUCxFQUFjO0FBQ2QsZUFBT1YsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRUQsVUFBQUEsTUFBTSxFQUFFLEdBQVY7QUFBZUYsVUFBQUEsS0FBSyxFQUFFO0FBQXRCLFNBQXJCLENBQVA7QUFDRDtBQUNGOzs7bUNBRXFCWCxHLEVBQUtDLEcsRUFBS0MsSSxFQUFNO0FBQ3BDRixNQUFBQSxHQUFHLENBQUNHLFNBQUosQ0FBYyxRQUFkLEVBQXdCLDZCQUF4QixFQUF1REMsUUFBdkQsR0FBa0VDLElBQWxFLEdBQXlFbUIsSUFBekUsQ0FBOEUsQ0FBQyxNQUFELEVBQVMsV0FBVCxDQUE5RSxFQUNHakIsV0FESCxDQUNlLCtDQURmLEVBRUdrQixRQUZILEdBR0dsQixXQUhILENBR2Usa0NBSGY7QUFLQSxVQUFNUSxNQUFNLEdBQUdmLEdBQUcsQ0FBQ1ksZ0JBQUosRUFBZjs7QUFDQSxVQUFJRyxNQUFKLEVBQVk7QUFDVixlQUFPZCxHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFRCxVQUFBQSxNQUFNLEVBQUUsR0FBVjtBQUFlRSxVQUFBQSxNQUFNLEVBQUVsQixhQUFhLENBQUNrQixNQUFEO0FBQXBDLFNBQXJCLENBQVA7QUFDRDs7QUFDRCxhQUFPYixJQUFJLEVBQVg7QUFDRDs7O2tDQUVvQkYsRyxFQUFLQyxHLEVBQUtDLEksRUFBTTtBQUNuQ0YsTUFBQUEsR0FBRyxDQUFDRyxTQUFKLENBQWMsT0FBZCxFQUF1Qiw0QkFBdkIsRUFBcURDLFFBQXJELEdBQWdFQyxJQUFoRSxHQUF1RXFCLE9BQXZFLEdBQ0duQixXQURILENBQ2UsMkNBRGY7QUFHRSxVQUFNUSxNQUFNLEdBQUdmLEdBQUcsQ0FBQ1ksZ0JBQUosRUFBZjs7QUFDQSxVQUFJRyxNQUFKLEVBQVk7QUFDVixlQUFPZCxHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFRCxVQUFBQSxNQUFNLEVBQUUsR0FBVjtBQUFlRSxVQUFBQSxNQUFNLEVBQUVsQixhQUFhLENBQUNrQixNQUFEO0FBQXBDLFNBQXJCLENBQVA7QUFDRDs7QUFDRCxhQUFPYixJQUFJLEVBQVg7QUFDSDs7Ozs7ZUFHWUgsaUIiLCJzb3VyY2VSb290IjoiL2hvbWUvZ2NoaWxpZS9EZXNrdG9wL1Byb3BlcnR5UHJvLWxpdGUvYXBwL21pZGRsZXdhcmVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEhlbHBlcnMgZnJvbSAnLi4vaGVscGVycyc7XG5pbXBvcnQgcHJvcGVydHlNb2RlbCBmcm9tICcuLi9tb2RlbHMvcHJvcGVydHknO1xuY29uc3QgeyBleHRyYWN0RXJyb3JzIH0gPSBIZWxwZXJzO1xuXG5jbGFzcyBQcm9wZXJ0eVZhbGlkYXRvciB7XG4gIHN0YXRpYyB2YWxpZGF0ZVByb3BlcnR5KHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgcmVxLmNoZWNrQm9keSgnc3RhdGUnLCAnUHJvcGVydHkgc3RhdGUgaXMgcmVxdWlyZWQnKS5ub3RFbXB0eSgpLnRyaW0oKS5pc0FscGhhKClcbiAgICAgIC53aXRoTWVzc2FnZSgnUHJvcGVydHkgc3RhdGUgY2FuIG9ubHkgY29udGFpbiBhbHBoYWJldHMnKTtcbiAgICByZXEuY2hlY2tCb2R5KCdwcmljZScsICdQcm9wZXJ0eSBwcmljZSBpcyByZXF1aXJlZCcpLm5vdEVtcHR5KCkuaXNDdXJyZW5jeSh7IGFsbG93X25lZ2F0aXZlczogZmFsc2UsIHJlcXVpcmVfZGVjaW1hbDogdHJ1ZSB9KVxuICAgICAgLndpdGhNZXNzYWdlKCdQcm9wZXJ0eSBwcmljZSBtdXN0IGJlIGEgdmFsaWQgbnVtYmVyIGluIHR3byBkZWNpbWFsIHBsYWNlLCBlLmcgMTIzMDAwLjAwJyk7XG4gICAgcmVxLmNoZWNrQm9keSgnYWRkcmVzcycsICdQcm9wZXJ0eSBhZGRyZXNzIGlzIHJlcXVpcmVkJykubm90RW1wdHkoKS50cmltKCk7XG4gICAgcmVxLmNoZWNrQm9keSgndHlwZScsICdQcm9wZXJ0eSB0eXBlIGlzIHJlcXVpcmVkJykubm90RW1wdHkoKTtcbiAgICBjb25zdCBlcnJvciA9IHJlcS52YWxpZGF0aW9uRXJyb3JzKCk7XG4gICAgaWYgKGVycm9yKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBzdGF0dXM6IDQwMCwgZXJyb3JzOiBleHRyYWN0RXJyb3JzKGVycm9yKSB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5leHQoKTtcbiAgfVxuXG4gIHN0YXRpYyBpc1Byb3BlcnR5RXhpc3QocmVxLCByZXMsIG5leHQpIHtcbiAgICBjb25zdCBwcm9wZXJ0eUlkID0gcmVxLnBhcmFtcy5wcm9wZXJ0eUlkIHx8IHJlcS5ib2R5LnByb3BlcnR5SWQ7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHByb3BlcnR5ID0gcHJvcGVydHlNb2RlbC5maW5kKHByID0+IHByLmlkID09PSBwcm9wZXJ0eUlkKTtcbiAgICAgIGlmICghcHJvcGVydHkpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgc3RhdHVzOiA0MDQsIGVycm9yOiBgUHJvcGVydHkgQWQgd2l0aCBpZDogJHtwcm9wZXJ0eUlkfSBkb2VzIG5vdCBleGlzdGB9KTtcbiAgICAgIH1cbiAgICAgIG5leHQoKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgc3RhdHVzOiA1MDAsIGVycm9yOiAnSW5lcm5hbCBzZXJ2ZXIgZXJyb3InfSlcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgdmFsaWRhdGVTdGF0dXMocmVxLCByZXMsIG5leHQpIHtcbiAgICByZXEuY2hlY2tCb2R5KCdzdGF0dXMnLCAnUHJvcGVydHkgc3RhdHVzIGlzIHJlcXVpcmVkJykubm90RW1wdHkoKS50cmltKCkuaXNJbihbJ3NvbGQnLCAnYXZhaWxhYmxlJ10pXG4gICAgICAud2l0aE1lc3NhZ2UoJ1Byb3BlcnR5IHN0YXR1cyBjYW4gb25seSBiZSBzb2xkIG9yIGF2YWlsYWJsZScpXG4gICAgICAuaXNTdHJpbmcoKVxuICAgICAgLndpdGhNZXNzYWdlKCdQcm9wZXJ0eSBzdGF0dXMgbXVzdCBiZSBhIHN0cmluZycpO1xuXG4gICAgY29uc3QgZXJyb3JzID0gcmVxLnZhbGlkYXRpb25FcnJvcnMoKTtcbiAgICBpZiAoZXJyb3JzKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBzdGF0dXM6IDQwMCwgZXJyb3JzOiBleHRyYWN0RXJyb3JzKGVycm9ycykgfSk7XG4gICAgfVxuICAgIHJldHVybiBuZXh0KCk7XG4gIH1cblxuICBzdGF0aWMgdmFsaWRhdGVQcmljZShyZXEsIHJlcywgbmV4dCkge1xuICAgIHJlcS5jaGVja0JvZHkoJ3ByaWNlJywgJ1Byb3BlcnR5IHByaWNlIGlzIHJlcXVpcmVkJykubm90RW1wdHkoKS50cmltKCkuaXNGbG9hdCgpXG4gICAgICAud2l0aE1lc3NhZ2UoJ1Byb3BlcnR5IHByaWNlIG11c3QgY29udGFpbiBkZWNpbWFsIHBvaW50Jyk7XG5cbiAgICAgIGNvbnN0IGVycm9ycyA9IHJlcS52YWxpZGF0aW9uRXJyb3JzKCk7XG4gICAgICBpZiAoZXJyb3JzKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IHN0YXR1czogNDAwLCBlcnJvcnM6IGV4dHJhY3RFcnJvcnMoZXJyb3JzKSB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBuZXh0KCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUHJvcGVydHlWYWxpZGF0b3IiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "propertyValidator.js"
      ],
      "names": [
        "extractErrors",
        "Helpers",
        "PropertyValidator",
        "req",
        "res",
        "next",
        "checkBody",
        "notEmpty",
        "trim",
        "isAlpha",
        "withMessage",
        "isCurrency",
        "allow_negatives",
        "require_decimal",
        "error",
        "validationErrors",
        "status",
        "json",
        "errors",
        "propertyId",
        "params",
        "body",
        "property",
        "propertyModel",
        "find",
        "pr",
        "id",
        "isIn",
        "isString",
        "isFloat"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;IACQA,a,GAAkBC,mB,CAAlBD,a;;IAEFE,iB;;;;;;;;;qCACoBC,G,EAAKC,G,EAAKC,I,EAAM;AACtCF,MAAAA,GAAG,CAACG,SAAJ,CAAc,OAAd,EAAuB,4BAAvB,EAAqDC,QAArD,GAAgEC,IAAhE,GAAuEC,OAAvE,GACGC,WADH,CACe,2CADf;AAEAP,MAAAA,GAAG,CAACG,SAAJ,CAAc,OAAd,EAAuB,4BAAvB,EAAqDC,QAArD,GAAgEI,UAAhE,CAA2E;AAAEC,QAAAA,eAAe,EAAE,KAAnB;AAA0BC,QAAAA,eAAe,EAAE;AAA3C,OAA3E,EACGH,WADH,CACe,2EADf;AAEAP,MAAAA,GAAG,CAACG,SAAJ,CAAc,SAAd,EAAyB,8BAAzB,EAAyDC,QAAzD,GAAoEC,IAApE;AACAL,MAAAA,GAAG,CAACG,SAAJ,CAAc,MAAd,EAAsB,2BAAtB,EAAmDC,QAAnD;AACA,UAAMO,KAAK,GAAGX,GAAG,CAACY,gBAAJ,EAAd;;AACA,UAAID,KAAJ,EAAW;AACT,eAAOV,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAeE,UAAAA,MAAM,EAAElB,aAAa,CAACc,KAAD;AAApC,SAArB,CAAP;AACD;;AACD,aAAOT,IAAI,EAAX;AACD;;;oCAEsBF,G,EAAKC,G,EAAKC,I,EAAM;AACrC,UAAMc,UAAU,GAAGhB,GAAG,CAACiB,MAAJ,CAAWD,UAAX,IAAyBhB,GAAG,CAACkB,IAAJ,CAASF,UAArD;;AACA,UAAI;AACF,YAAMG,QAAQ,GAAGC,qBAAcC,IAAd,CAAmB,UAAAC,EAAE;AAAA,iBAAIA,EAAE,CAACC,EAAH,KAAUP,UAAd;AAAA,SAArB,CAAjB;;AACA,YAAI,CAACG,QAAL,EAAe;AACb,iBAAOlB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,YAAAA,MAAM,EAAE,GAAV;AAAeF,YAAAA,KAAK,iCAA0BK,UAA1B;AAApB,WAArB,CAAP;AACD;;AACDd,QAAAA,IAAI;AACL,OAND,CAME,OAAOS,KAAP,EAAc;AACd,eAAOV,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAeF,UAAAA,KAAK,EAAE;AAAtB,SAArB,CAAP;AACD;AACF;;;mCAEqBX,G,EAAKC,G,EAAKC,I,EAAM;AACpCF,MAAAA,GAAG,CAACG,SAAJ,CAAc,QAAd,EAAwB,6BAAxB,EAAuDC,QAAvD,GAAkEC,IAAlE,GAAyEmB,IAAzE,CAA8E,CAAC,MAAD,EAAS,WAAT,CAA9E,EACGjB,WADH,CACe,+CADf,EAEGkB,QAFH,GAGGlB,WAHH,CAGe,kCAHf;AAKA,UAAMQ,MAAM,GAAGf,GAAG,CAACY,gBAAJ,EAAf;;AACA,UAAIG,MAAJ,EAAY;AACV,eAAOd,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAeE,UAAAA,MAAM,EAAElB,aAAa,CAACkB,MAAD;AAApC,SAArB,CAAP;AACD;;AACD,aAAOb,IAAI,EAAX;AACD;;;kCAEoBF,G,EAAKC,G,EAAKC,I,EAAM;AACnCF,MAAAA,GAAG,CAACG,SAAJ,CAAc,OAAd,EAAuB,4BAAvB,EAAqDC,QAArD,GAAgEC,IAAhE,GAAuEqB,OAAvE,GACGnB,WADH,CACe,2CADf;AAGE,UAAMQ,MAAM,GAAGf,GAAG,CAACY,gBAAJ,EAAf;;AACA,UAAIG,MAAJ,EAAY;AACV,eAAOd,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAeE,UAAAA,MAAM,EAAElB,aAAa,CAACkB,MAAD;AAApC,SAArB,CAAP;AACD;;AACD,aAAOb,IAAI,EAAX;AACH;;;;;eAGYH,iB",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/middlewares",
      "sourcesContent": [
        "import Helpers from '../helpers';\nimport propertyModel from '../models/property';\nconst { extractErrors } = Helpers;\n\nclass PropertyValidator {\n  static validateProperty(req, res, next) {\n    req.checkBody('state', 'Property state is required').notEmpty().trim().isAlpha()\n      .withMessage('Property state can only contain alphabets');\n    req.checkBody('price', 'Property price is required').notEmpty().isCurrency({ allow_negatives: false, require_decimal: true })\n      .withMessage('Property price must be a valid number in two decimal place, e.g 123000.00');\n    req.checkBody('address', 'Property address is required').notEmpty().trim();\n    req.checkBody('type', 'Property type is required').notEmpty();\n    const error = req.validationErrors();\n    if (error) {\n      return res.status(400).json({ status: 400, errors: extractErrors(error) });\n    }\n    return next();\n  }\n\n  static isPropertyExist(req, res, next) {\n    const propertyId = req.params.propertyId || req.body.propertyId;\n    try {\n      const property = propertyModel.find(pr => pr.id === propertyId);\n      if (!property) {\n        return res.status(404).json({ status: 404, error: `Property Ad with id: ${propertyId} does not exist`});\n      }\n      next();\n    } catch (error) {\n      return res.status(500).json({ status: 500, error: 'Inernal server error'})\n    }\n  }\n\n  static validateStatus(req, res, next) {\n    req.checkBody('status', 'Property status is required').notEmpty().trim().isIn(['sold', 'available'])\n      .withMessage('Property status can only be sold or available')\n      .isString()\n      .withMessage('Property status must be a string');\n\n    const errors = req.validationErrors();\n    if (errors) {\n      return res.status(400).json({ status: 400, errors: extractErrors(errors) });\n    }\n    return next();\n  }\n\n  static validatePrice(req, res, next) {\n    req.checkBody('price', 'Property price is required').notEmpty().trim().isFloat()\n      .withMessage('Property price must contain decimal point');\n\n      const errors = req.validationErrors();\n      if (errors) {\n        return res.status(400).json({ status: 400, errors: extractErrors(errors) });\n      }\n      return next();\n  }\n}\n\nexport default PropertyValidator"
      ]
    },
    "sourceType": "script",
    "mtime": 1562210760696
  },
  "{\"sourceRoot\":\"/home/gchilie/Desktop/PropertyPro-lite/app/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"filename\":\"/home/gchilie/Desktop/PropertyPro-lite/app/test/property.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/gchilie/Desktop/PropertyPro-lite\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/gchilie/Desktop/PropertyPro-lite",
      "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/test/property.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/gchilie/Desktop/PropertyPro-lite",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/gchilie/Desktop/PropertyPro-lite/app/test/property.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/gchilie/Desktop/PropertyPro-lite/app/test/property.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/test",
        "sourceFileName": "property.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _app = _interopRequireDefault(require(\"../app\"));\n\n_chai[\"default\"].use(_chaiHttp[\"default\"]);\n\nvar expect = _chai[\"default\"].expect;\nvar baseUrl = '/api/v1/property';\ndescribe('Property endpoints', function () {\n  /* eslint-disable no-unused-expressions */\n  var userToken;\n  var invalidToken = 'Bearer xxxxxxxxxxxxxxx123456';\n  before('Login to get access token', function () {\n    var defaultUser = {\n      email: 'user@gmail.com',\n      password: 'password'\n    };\n\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1/auth/login').send(defaultUser).end(function (err, res) {\n      var token = res.body.data[0].token;\n      userToken = \"Bearer \".concat(token);\n    });\n  });\n  describe('Create property ad', function () {\n    var defaultProperty = {\n      state: 'Used',\n      price: '120000.00',\n      address: 'ikeja',\n      type: '2_bedroom'\n    };\n    it('It should ensure that token is provided', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl)).send(defaultProperty).end(function (err, res) {\n        expect(res).to.have.status(401);\n        expect(res.body.error).to.eql('You must log in to continue');\n        done();\n      });\n    });\n    it('It should ensure that the provided token is valid', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl)).send(defaultProperty).set('authorization', invalidToken).end(function (err, res) {\n        expect(res).to.have.status(401);\n        expect(res.body.error).to.eql('Invalid token, kindly log in to continue');\n        done();\n      });\n    });\n    it('It should ensure that property state is not empty', function (done) {\n      var newProperty = (0, _objectSpread2[\"default\"])({}, defaultProperty, {\n        state: ''\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl)).send(newProperty).set('authorization', userToken).end(function (err, res) {\n        expect(res).to.have.status(401);\n        expect(res.body.message).to.eql('Only an Agent can perform this task');\n        done();\n      });\n    });\n    it('It should ensure that Property price is not empty', function (done) {\n      var newProperty = (0, _objectSpread2[\"default\"])({}, defaultProperty, {\n        price: ''\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl)).send(newProperty).set('authorization', userToken).end(function (err, res) {\n        expect(res).to.have.status(401);\n        expect(res.body.message).to.eql('Only an Agent can perform this task');\n        done();\n      });\n    });\n    it('It should ensure that property address is not empty', function (done) {\n      var newProperty = (0, _objectSpread2[\"default\"])({}, defaultProperty, {\n        address: ''\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl)).send(newProperty).set('authorization', userToken).end(function (err, res) {\n        expect(res).to.have.status(401);\n        expect(res.body.message).to.eql('Only an Agent can perform this task');\n        done();\n      });\n    });\n    it('It should ensure that property type is not empty', function (done) {\n      var newProperty = (0, _objectSpread2[\"default\"])({}, defaultProperty, {\n        type: ''\n      });\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl)).send(newProperty).set('authorization', userToken).end(function (err, res) {\n        expect(res).to.have.status(401);\n        expect(res.body.message).to.eql('Only an Agent can perform this task');\n        done();\n      });\n    });\n    it('It should successfully create a property ad', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).post(\"\".concat(baseUrl)).send(defaultProperty).set('authorization', userToken).end(function (err, res) {\n        expect(res).to.have.status(401);\n        expect(res.body.message).to.eql('Only an Agent can perform this task');\n        done();\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "property.js"
      ],
      "names": [
        "chai",
        "use",
        "chaiHTTP",
        "expect",
        "baseUrl",
        "describe",
        "userToken",
        "invalidToken",
        "before",
        "defaultUser",
        "email",
        "password",
        "request",
        "app",
        "post",
        "send",
        "end",
        "err",
        "res",
        "token",
        "body",
        "data",
        "defaultProperty",
        "state",
        "price",
        "address",
        "type",
        "it",
        "done",
        "to",
        "have",
        "status",
        "error",
        "eql",
        "set",
        "newProperty",
        "message"
      ],
      "mappings": ";;;;;;AAAA;;AACA;;AACA;;AAEAA,iBAAKC,GAAL,CAASC,oBAAT;;IACQC,M,GAAWH,gB,CAAXG,M;AACR,IAAMC,OAAO,GAAG,kBAAhB;AAEAC,QAAQ,CAAC,oBAAD,EAAuB,YAAM;AACnC;AACA,MAAIC,SAAJ;AACA,MAAMC,YAAY,GAAG,8BAArB;AACAC,EAAAA,MAAM,CAAC,2BAAD,EAA8B,YAAM;AACxC,QAAMC,WAAW,GAAG;AAClBC,MAAAA,KAAK,EAAE,gBADW;AAElBC,MAAAA,QAAQ,EAAE;AAFQ,KAApB;;AAIAX,qBAAKY,OAAL,CAAaC,eAAb,EACGC,IADH,CACQ,oBADR,EAEGC,IAFH,CAEQN,WAFR,EAGGO,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB,UAAMC,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBF,KAA/B;AACAb,MAAAA,SAAS,oBAAaa,KAAb,CAAT;AACD,KANH;AAOD,GAZK,CAAN;AAaAd,EAAAA,QAAQ,CAAC,oBAAD,EAAuB,YAAM;AACnC,QAAMiB,eAAe,GAAG;AACtBC,MAAAA,KAAK,EAAE,MADe;AAEtBC,MAAAA,KAAK,EAAE,WAFe;AAGtBC,MAAAA,OAAO,EAAE,OAHa;AAItBC,MAAAA,IAAI,EAAE;AAJgB,KAAxB;AAMAC,IAAAA,EAAE,CAAC,yCAAD,EAA4C,UAACC,IAAD,EAAU;AACtD5B,uBAAKY,OAAL,CAAaC,eAAb,EACGC,IADH,WACWV,OADX,GAEGW,IAFH,CAEQO,eAFR,EAGGN,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBf,QAAAA,MAAM,CAACe,GAAD,CAAN,CAAYW,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACA5B,QAAAA,MAAM,CAACe,GAAG,CAACE,IAAJ,CAASY,KAAV,CAAN,CAAuBH,EAAvB,CAA0BI,GAA1B,CAA8B,6BAA9B;AACAL,QAAAA,IAAI;AACL,OAPH;AAQD,KATC,CAAF;AAUAD,IAAAA,EAAE,CAAC,mDAAD,EAAsD,UAACC,IAAD,EAAU;AAChE5B,uBAAKY,OAAL,CAAaC,eAAb,EACGC,IADH,WACWV,OADX,GAEGW,IAFH,CAEQO,eAFR,EAGGY,GAHH,CAGO,eAHP,EAGwB3B,YAHxB,EAIGS,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBf,QAAAA,MAAM,CAACe,GAAD,CAAN,CAAYW,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACA5B,QAAAA,MAAM,CAACe,GAAG,CAACE,IAAJ,CAASY,KAAV,CAAN,CAAuBH,EAAvB,CAA0BI,GAA1B,CAA8B,0CAA9B;AACAL,QAAAA,IAAI;AACL,OARH;AASD,KAVC,CAAF;AAWAD,IAAAA,EAAE,CAAC,mDAAD,EAAsD,UAACC,IAAD,EAAU;AAChE,UAAMO,WAAW,sCAAQb,eAAR;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,QAAjB;;AACAvB,uBAAKY,OAAL,CAAaC,eAAb,EACGC,IADH,WACWV,OADX,GAEGW,IAFH,CAEQoB,WAFR,EAGGD,GAHH,CAGO,eAHP,EAGwB5B,SAHxB,EAIGU,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBf,QAAAA,MAAM,CAACe,GAAD,CAAN,CAAYW,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACA5B,QAAAA,MAAM,CAACe,GAAG,CAACE,IAAJ,CAASgB,OAAV,CAAN,CAAyBP,EAAzB,CAA4BI,GAA5B,CAAgC,qCAAhC;AACAL,QAAAA,IAAI;AACL,OARH;AASD,KAXC,CAAF;AAYAD,IAAAA,EAAE,CAAC,mDAAD,EAAsD,UAACC,IAAD,EAAU;AAChE,UAAMO,WAAW,sCAAQb,eAAR;AAAyBE,QAAAA,KAAK,EAAE;AAAhC,QAAjB;;AACAxB,uBAAKY,OAAL,CAAaC,eAAb,EACGC,IADH,WACWV,OADX,GAEGW,IAFH,CAEQoB,WAFR,EAGGD,GAHH,CAGO,eAHP,EAGwB5B,SAHxB,EAIGU,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBf,QAAAA,MAAM,CAACe,GAAD,CAAN,CAAYW,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACA5B,QAAAA,MAAM,CAACe,GAAG,CAACE,IAAJ,CAASgB,OAAV,CAAN,CAAyBP,EAAzB,CAA4BI,GAA5B,CAAgC,qCAAhC;AACAL,QAAAA,IAAI;AACL,OARH;AASD,KAXC,CAAF;AAYAD,IAAAA,EAAE,CAAC,qDAAD,EAAwD,UAACC,IAAD,EAAU;AAClE,UAAMO,WAAW,sCAAQb,eAAR;AAAyBG,QAAAA,OAAO,EAAE;AAAlC,QAAjB;;AACAzB,uBAAKY,OAAL,CAAaC,eAAb,EACGC,IADH,WACWV,OADX,GAEGW,IAFH,CAEQoB,WAFR,EAGGD,GAHH,CAGO,eAHP,EAGwB5B,SAHxB,EAIGU,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBf,QAAAA,MAAM,CAACe,GAAD,CAAN,CAAYW,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACA5B,QAAAA,MAAM,CAACe,GAAG,CAACE,IAAJ,CAASgB,OAAV,CAAN,CAAyBP,EAAzB,CAA4BI,GAA5B,CAAgC,qCAAhC;AACAL,QAAAA,IAAI;AACL,OARH;AASD,KAXC,CAAF;AAYAD,IAAAA,EAAE,CAAC,kDAAD,EAAqD,UAACC,IAAD,EAAU;AAC/D,UAAMO,WAAW,sCAAQb,eAAR;AAAyBI,QAAAA,IAAI,EAAE;AAA/B,QAAjB;;AACA1B,uBAAKY,OAAL,CAAaC,eAAb,EACGC,IADH,WACWV,OADX,GAEGW,IAFH,CAEQoB,WAFR,EAGGD,GAHH,CAGO,eAHP,EAGwB5B,SAHxB,EAIGU,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBf,QAAAA,MAAM,CAACe,GAAD,CAAN,CAAYW,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACA5B,QAAAA,MAAM,CAACe,GAAG,CAACE,IAAJ,CAASgB,OAAV,CAAN,CAAyBP,EAAzB,CAA4BI,GAA5B,CAAgC,qCAAhC;AACAL,QAAAA,IAAI;AACL,OARH;AASD,KAXC,CAAF;AAaAD,IAAAA,EAAE,CAAC,6CAAD,EAAgD,UAACC,IAAD,EAAU;AAC1D5B,uBAAKY,OAAL,CAAaC,eAAb,EACGC,IADH,WACWV,OADX,GAEGW,IAFH,CAEQO,eAFR,EAGGY,GAHH,CAGO,eAHP,EAGwB5B,SAHxB,EAIGU,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrBf,QAAAA,MAAM,CAACe,GAAD,CAAN,CAAYW,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACM5B,QAAAA,MAAM,CAACe,GAAG,CAACE,IAAJ,CAASgB,OAAV,CAAN,CAAyBP,EAAzB,CAA4BI,GAA5B,CAAgC,qCAAhC;AACAL,QAAAA,IAAI;AACP,OARH;AASD,KAVC,CAAF;AAWD,GAxFO,CAAR;AA0FD,CA3GO,CAAR",
      "sourceRoot": "/home/gchilie/Desktop/PropertyPro-lite/app/test",
      "sourcesContent": [
        "import chai from 'chai';\nimport chaiHTTP from 'chai-http';\nimport app from '../app';\n\nchai.use(chaiHTTP);\nconst { expect } = chai;\nconst baseUrl = '/api/v1/property';\n\ndescribe('Property endpoints', () => {\n  /* eslint-disable no-unused-expressions */\n  let userToken;\n  const invalidToken = 'Bearer xxxxxxxxxxxxxxx123456';\n  before('Login to get access token', () => {\n    const defaultUser = {\n      email: 'user@gmail.com',\n      password: 'password',\n    };\n    chai.request(app)\n      .post('/api/v1/auth/login')\n      .send(defaultUser)\n      .end((err, res) => {\n        const token = res.body.data[0].token;\n        userToken = `Bearer ${token}`;\n      });\n  });\n  describe('Create property ad', () => {\n    const defaultProperty = {\n      state: 'Used',\n      price: '120000.00',\n      address: 'ikeja',\n      type: '2_bedroom',\n    };\n    it('It should ensure that token is provided', (done) => {\n      chai.request(app)\n        .post(`${baseUrl}`)\n        .send(defaultProperty)\n        .end((err, res) => {\n          expect(res).to.have.status(401);\n          expect(res.body.error).to.eql('You must log in to continue');\n          done();\n        });\n    });\n    it('It should ensure that the provided token is valid', (done) => {\n      chai.request(app)\n        .post(`${baseUrl}`)\n        .send(defaultProperty)\n        .set('authorization', invalidToken)\n        .end((err, res) => {\n          expect(res).to.have.status(401);\n          expect(res.body.error).to.eql('Invalid token, kindly log in to continue');\n          done();\n        });\n    });\n    it('It should ensure that property state is not empty', (done) => {\n      const newProperty = { ...defaultProperty, state: '' };\n      chai.request(app)\n        .post(`${baseUrl}`)\n        .send(newProperty)\n        .set('authorization', userToken)\n        .end((err, res) => {\n          expect(res).to.have.status(401);\n          expect(res.body.message).to.eql('Only an Agent can perform this task');\n          done();\n        });\n    });\n    it('It should ensure that Property price is not empty', (done) => {\n      const newProperty = { ...defaultProperty, price: '' };\n      chai.request(app)\n        .post(`${baseUrl}`)\n        .send(newProperty)\n        .set('authorization', userToken)\n        .end((err, res) => {\n          expect(res).to.have.status(401);\n          expect(res.body.message).to.eql('Only an Agent can perform this task');\n          done();\n        });\n    });\n    it('It should ensure that property address is not empty', (done) => {\n      const newProperty = { ...defaultProperty, address: '' };\n      chai.request(app)\n        .post(`${baseUrl}`)\n        .send(newProperty)\n        .set('authorization', userToken)\n        .end((err, res) => {\n          expect(res).to.have.status(401);\n          expect(res.body.message).to.eql('Only an Agent can perform this task');\n          done();\n        });\n    });\n    it('It should ensure that property type is not empty', (done) => {\n      const newProperty = { ...defaultProperty, type: '' };\n      chai.request(app)\n        .post(`${baseUrl}`)\n        .send(newProperty)\n        .set('authorization', userToken)\n        .end((err, res) => {\n          expect(res).to.have.status(401);\n          expect(res.body.message).to.eql('Only an Agent can perform this task');\n          done();\n        });\n    });\n\n    it('It should successfully create a property ad', (done) => {\n      chai.request(app)\n        .post(`${baseUrl}`)\n        .send(defaultProperty)\n        .set('authorization', userToken)\n        .end((err, res) => {\n      expect(res).to.have.status(401);\n            expect(res.body.message).to.eql('Only an Agent can perform this task');\n            done();\n        });\n    });\n  });\n\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562285083781
  }
}